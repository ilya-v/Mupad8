

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Feb 24 13:17:33 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	swtext2,local,class=CONST,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	intentry,global,class=CODE,delta=2
    77                           	dabs	1,0x20,48,_BDT
    78                           	dabs	1,0x58,8,_CtrlTrfData
    79                           	dabs	1,0x50,8,_SetupPkt
    80                           	dabs	1,0xA0,64,_cdc_data_tx
    81                           	dabs	1,0x120,64,_cdc_data_rx
    82                           	dabs	1,0x7E,2
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011D                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0391                     	;# 
   176  0392                     	;# 
   177  0393                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  039A                     	;# 
   182  039B                     	;# 
   183  0611                     	;# 
   184  0612                     	;# 
   185  0613                     	;# 
   186  0613                     	;# 
   187  0614                     	;# 
   188  0615                     	;# 
   189  0616                     	;# 
   190  0616                     	;# 
   191  0691                     	;# 
   192  0692                     	;# 
   193  0693                     	;# 
   194  0694                     	;# 
   195  0695                     	;# 
   196  0E8E                     	;# 
   197  0E8F                     	;# 
   198  0E90                     	;# 
   199  0E91                     	;# 
   200  0E92                     	;# 
   201  0E93                     	;# 
   202  0E94                     	;# 
   203  0E94                     	;# 
   204  0E95                     	;# 
   205  0E96                     	;# 
   206  0E97                     	;# 
   207  0E98                     	;# 
   208  0E99                     	;# 
   209  0E9A                     	;# 
   210  0E9B                     	;# 
   211  0E9C                     	;# 
   212  0E9D                     	;# 
   213  0E9E                     	;# 
   214  0E9F                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011D                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  018E                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0197                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019C                     	;# 
   298  019D                     	;# 
   299  019E                     	;# 
   300  019F                     	;# 
   301  020C                     	;# 
   302  020D                     	;# 
   303  0211                     	;# 
   304  0211                     	;# 
   305  0212                     	;# 
   306  0212                     	;# 
   307  0213                     	;# 
   308  0213                     	;# 
   309  0214                     	;# 
   310  0214                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0216                     	;# 
   315  0216                     	;# 
   316  0217                     	;# 
   317  0217                     	;# 
   318  0391                     	;# 
   319  0392                     	;# 
   320  0393                     	;# 
   321  0394                     	;# 
   322  0395                     	;# 
   323  0396                     	;# 
   324  039A                     	;# 
   325  039B                     	;# 
   326  0611                     	;# 
   327  0612                     	;# 
   328  0613                     	;# 
   329  0613                     	;# 
   330  0614                     	;# 
   331  0615                     	;# 
   332  0616                     	;# 
   333  0616                     	;# 
   334  0691                     	;# 
   335  0692                     	;# 
   336  0693                     	;# 
   337  0694                     	;# 
   338  0695                     	;# 
   339  0E8E                     	;# 
   340  0E8F                     	;# 
   341  0E90                     	;# 
   342  0E91                     	;# 
   343  0E92                     	;# 
   344  0E93                     	;# 
   345  0E94                     	;# 
   346  0E94                     	;# 
   347  0E95                     	;# 
   348  0E96                     	;# 
   349  0E97                     	;# 
   350  0E98                     	;# 
   351  0E99                     	;# 
   352  0E9A                     	;# 
   353  0E9B                     	;# 
   354  0E9C                     	;# 
   355  0E9D                     	;# 
   356  0E9E                     	;# 
   357  0E9F                     	;# 
   358  0FE4                     	;# 
   359  0FE5                     	;# 
   360  0FE6                     	;# 
   361  0FE7                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEB                     	;# 
   366  0FED                     	;# 
   367  0FEE                     	;# 
   368  0FEF                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  009F                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  0111                     	;# 
   416  0112                     	;# 
   417  0113                     	;# 
   418  0114                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0117                     	;# 
   422  0118                     	;# 
   423  0119                     	;# 
   424  011D                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0194                     	;# 
   434  0195                     	;# 
   435  0196                     	;# 
   436  0197                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019C                     	;# 
   441  019D                     	;# 
   442  019E                     	;# 
   443  019F                     	;# 
   444  020C                     	;# 
   445  020D                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0216                     	;# 
   458  0216                     	;# 
   459  0217                     	;# 
   460  0217                     	;# 
   461  0391                     	;# 
   462  0392                     	;# 
   463  0393                     	;# 
   464  0394                     	;# 
   465  0395                     	;# 
   466  0396                     	;# 
   467  039A                     	;# 
   468  039B                     	;# 
   469  0611                     	;# 
   470  0612                     	;# 
   471  0613                     	;# 
   472  0613                     	;# 
   473  0614                     	;# 
   474  0615                     	;# 
   475  0616                     	;# 
   476  0616                     	;# 
   477  0691                     	;# 
   478  0692                     	;# 
   479  0693                     	;# 
   480  0694                     	;# 
   481  0695                     	;# 
   482  0E8E                     	;# 
   483  0E8F                     	;# 
   484  0E90                     	;# 
   485  0E91                     	;# 
   486  0E92                     	;# 
   487  0E93                     	;# 
   488  0E94                     	;# 
   489  0E94                     	;# 
   490  0E95                     	;# 
   491  0E96                     	;# 
   492  0E97                     	;# 
   493  0E98                     	;# 
   494  0E99                     	;# 
   495  0E9A                     	;# 
   496  0E9B                     	;# 
   497  0E9C                     	;# 
   498  0E9D                     	;# 
   499  0E9E                     	;# 
   500  0E9F                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  0011                     	;# 
   528  0012                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0016                     	;# 
   532  0017                     	;# 
   533  0018                     	;# 
   534  0019                     	;# 
   535  001A                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  008C                     	;# 
   539  008D                     	;# 
   540  008E                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011D                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019D                     	;# 
   585  019E                     	;# 
   586  019F                     	;# 
   587  020C                     	;# 
   588  020D                     	;# 
   589  0211                     	;# 
   590  0211                     	;# 
   591  0212                     	;# 
   592  0212                     	;# 
   593  0213                     	;# 
   594  0213                     	;# 
   595  0214                     	;# 
   596  0214                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0216                     	;# 
   601  0216                     	;# 
   602  0217                     	;# 
   603  0217                     	;# 
   604  0391                     	;# 
   605  0392                     	;# 
   606  0393                     	;# 
   607  0394                     	;# 
   608  0395                     	;# 
   609  0396                     	;# 
   610  039A                     	;# 
   611  039B                     	;# 
   612  0611                     	;# 
   613  0612                     	;# 
   614  0613                     	;# 
   615  0613                     	;# 
   616  0614                     	;# 
   617  0615                     	;# 
   618  0616                     	;# 
   619  0616                     	;# 
   620  0691                     	;# 
   621  0692                     	;# 
   622  0693                     	;# 
   623  0694                     	;# 
   624  0695                     	;# 
   625  0E8E                     	;# 
   626  0E8F                     	;# 
   627  0E90                     	;# 
   628  0E91                     	;# 
   629  0E92                     	;# 
   630  0E93                     	;# 
   631  0E94                     	;# 
   632  0E94                     	;# 
   633  0E95                     	;# 
   634  0E96                     	;# 
   635  0E97                     	;# 
   636  0E98                     	;# 
   637  0E99                     	;# 
   638  0E9A                     	;# 
   639  0E9B                     	;# 
   640  0E9C                     	;# 
   641  0E9D                     	;# 
   642  0E9E                     	;# 
   643  0E9F                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000D                     	;# 
   669  000E                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0015                     	;# 
   673  0016                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001C                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  010C                     	;# 
   699  010D                     	;# 
   700  010E                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  0118                     	;# 
   709  0119                     	;# 
   710  011D                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  0191                     	;# 
   715  0191                     	;# 
   716  0192                     	;# 
   717  0193                     	;# 
   718  0193                     	;# 
   719  0194                     	;# 
   720  0195                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0199                     	;# 
   724  019A                     	;# 
   725  019B                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0391                     	;# 
   748  0392                     	;# 
   749  0393                     	;# 
   750  0394                     	;# 
   751  0395                     	;# 
   752  0396                     	;# 
   753  039A                     	;# 
   754  039B                     	;# 
   755  0611                     	;# 
   756  0612                     	;# 
   757  0613                     	;# 
   758  0613                     	;# 
   759  0614                     	;# 
   760  0615                     	;# 
   761  0616                     	;# 
   762  0616                     	;# 
   763  0691                     	;# 
   764  0692                     	;# 
   765  0693                     	;# 
   766  0694                     	;# 
   767  0695                     	;# 
   768  0E8E                     	;# 
   769  0E8F                     	;# 
   770  0E90                     	;# 
   771  0E91                     	;# 
   772  0E92                     	;# 
   773  0E93                     	;# 
   774  0E94                     	;# 
   775  0E94                     	;# 
   776  0E95                     	;# 
   777  0E96                     	;# 
   778  0E97                     	;# 
   779  0E98                     	;# 
   780  0E99                     	;# 
   781  0E9A                     	;# 
   782  0E9B                     	;# 
   783  0E9C                     	;# 
   784  0E9D                     	;# 
   785  0E9E                     	;# 
   786  0E9F                     	;# 
   787  0FE4                     	;# 
   788  0FE5                     	;# 
   789  0FE6                     	;# 
   790  0FE7                     	;# 
   791  0FE8                     	;# 
   792  0FE9                     	;# 
   793  0FEA                     	;# 
   794  0FEB                     	;# 
   795  0FED                     	;# 
   796  0FEE                     	;# 
   797  0FEF                     	;# 
   798  0000                     	;# 
   799  0001                     	;# 
   800  0002                     	;# 
   801  0003                     	;# 
   802  0004                     	;# 
   803  0005                     	;# 
   804  0006                     	;# 
   805  0007                     	;# 
   806  0008                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  0011                     	;# 
   814  0012                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  008C                     	;# 
   825  008D                     	;# 
   826  008E                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0095                     	;# 
   830  0096                     	;# 
   831  0097                     	;# 
   832  0098                     	;# 
   833  0099                     	;# 
   834  009A                     	;# 
   835  009B                     	;# 
   836  009B                     	;# 
   837  009C                     	;# 
   838  009D                     	;# 
   839  009E                     	;# 
   840  009F                     	;# 
   841  010C                     	;# 
   842  010D                     	;# 
   843  010E                     	;# 
   844  0111                     	;# 
   845  0112                     	;# 
   846  0113                     	;# 
   847  0114                     	;# 
   848  0115                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  0118                     	;# 
   852  0119                     	;# 
   853  011D                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  018E                     	;# 
   857  0191                     	;# 
   858  0191                     	;# 
   859  0192                     	;# 
   860  0193                     	;# 
   861  0193                     	;# 
   862  0194                     	;# 
   863  0195                     	;# 
   864  0196                     	;# 
   865  0197                     	;# 
   866  0199                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0216                     	;# 
   888  0217                     	;# 
   889  0217                     	;# 
   890  0391                     	;# 
   891  0392                     	;# 
   892  0393                     	;# 
   893  0394                     	;# 
   894  0395                     	;# 
   895  0396                     	;# 
   896  039A                     	;# 
   897  039B                     	;# 
   898  0611                     	;# 
   899  0612                     	;# 
   900  0613                     	;# 
   901  0613                     	;# 
   902  0614                     	;# 
   903  0615                     	;# 
   904  0616                     	;# 
   905  0616                     	;# 
   906  0691                     	;# 
   907  0692                     	;# 
   908  0693                     	;# 
   909  0694                     	;# 
   910  0695                     	;# 
   911  0E8E                     	;# 
   912  0E8F                     	;# 
   913  0E90                     	;# 
   914  0E91                     	;# 
   915  0E92                     	;# 
   916  0E93                     	;# 
   917  0E94                     	;# 
   918  0E94                     	;# 
   919  0E95                     	;# 
   920  0E96                     	;# 
   921  0E97                     	;# 
   922  0E98                     	;# 
   923  0E99                     	;# 
   924  0E9A                     	;# 
   925  0E9B                     	;# 
   926  0E9C                     	;# 
   927  0E9D                     	;# 
   928  0E9E                     	;# 
   929  0E9F                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  0000                     	;# 
   942  0001                     	;# 
   943  0002                     	;# 
   944  0003                     	;# 
   945  0004                     	;# 
   946  0005                     	;# 
   947  0006                     	;# 
   948  0007                     	;# 
   949  0008                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000D                     	;# 
   955  000E                     	;# 
   956  0011                     	;# 
   957  0012                     	;# 
   958  0015                     	;# 
   959  0016                     	;# 
   960  0016                     	;# 
   961  0017                     	;# 
   962  0018                     	;# 
   963  0019                     	;# 
   964  001A                     	;# 
   965  001B                     	;# 
   966  001C                     	;# 
   967  008C                     	;# 
   968  008D                     	;# 
   969  008E                     	;# 
   970  0091                     	;# 
   971  0092                     	;# 
   972  0095                     	;# 
   973  0096                     	;# 
   974  0097                     	;# 
   975  0098                     	;# 
   976  0099                     	;# 
   977  009A                     	;# 
   978  009B                     	;# 
   979  009B                     	;# 
   980  009C                     	;# 
   981  009D                     	;# 
   982  009E                     	;# 
   983  009F                     	;# 
   984  010C                     	;# 
   985  010D                     	;# 
   986  010E                     	;# 
   987  0111                     	;# 
   988  0112                     	;# 
   989  0113                     	;# 
   990  0114                     	;# 
   991  0115                     	;# 
   992  0116                     	;# 
   993  0117                     	;# 
   994  0118                     	;# 
   995  0119                     	;# 
   996  011D                     	;# 
   997  018C                     	;# 
   998  018D                     	;# 
   999  018E                     	;# 
  1000  0191                     	;# 
  1001  0191                     	;# 
  1002  0192                     	;# 
  1003  0193                     	;# 
  1004  0193                     	;# 
  1005  0194                     	;# 
  1006  0195                     	;# 
  1007  0196                     	;# 
  1008  0197                     	;# 
  1009  0199                     	;# 
  1010  019A                     	;# 
  1011  019B                     	;# 
  1012  019C                     	;# 
  1013  019D                     	;# 
  1014  019E                     	;# 
  1015  019F                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  0211                     	;# 
  1019  0211                     	;# 
  1020  0212                     	;# 
  1021  0212                     	;# 
  1022  0213                     	;# 
  1023  0213                     	;# 
  1024  0214                     	;# 
  1025  0214                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0216                     	;# 
  1031  0217                     	;# 
  1032  0217                     	;# 
  1033  0391                     	;# 
  1034  0392                     	;# 
  1035  0393                     	;# 
  1036  0394                     	;# 
  1037  0395                     	;# 
  1038  0396                     	;# 
  1039  039A                     	;# 
  1040  039B                     	;# 
  1041  0611                     	;# 
  1042  0612                     	;# 
  1043  0613                     	;# 
  1044  0613                     	;# 
  1045  0614                     	;# 
  1046  0615                     	;# 
  1047  0616                     	;# 
  1048  0616                     	;# 
  1049  0691                     	;# 
  1050  0692                     	;# 
  1051  0693                     	;# 
  1052  0694                     	;# 
  1053  0695                     	;# 
  1054  0E8E                     	;# 
  1055  0E8F                     	;# 
  1056  0E90                     	;# 
  1057  0E91                     	;# 
  1058  0E92                     	;# 
  1059  0E93                     	;# 
  1060  0E94                     	;# 
  1061  0E94                     	;# 
  1062  0E95                     	;# 
  1063  0E96                     	;# 
  1064  0E97                     	;# 
  1065  0E98                     	;# 
  1066  0E99                     	;# 
  1067  0E9A                     	;# 
  1068  0E9B                     	;# 
  1069  0E9C                     	;# 
  1070  0E9D                     	;# 
  1071  0E9E                     	;# 
  1072  0E9F                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0091                     	;# 
  1114  0092                     	;# 
  1115  0095                     	;# 
  1116  0096                     	;# 
  1117  0097                     	;# 
  1118  0098                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  009F                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0113                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0117                     	;# 
  1137  0118                     	;# 
  1138  0119                     	;# 
  1139  011D                     	;# 
  1140  018C                     	;# 
  1141  018D                     	;# 
  1142  018E                     	;# 
  1143  0191                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  0193                     	;# 
  1147  0193                     	;# 
  1148  0194                     	;# 
  1149  0195                     	;# 
  1150  0196                     	;# 
  1151  0197                     	;# 
  1152  0199                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020D                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0391                     	;# 
  1177  0392                     	;# 
  1178  0393                     	;# 
  1179  0394                     	;# 
  1180  0395                     	;# 
  1181  0396                     	;# 
  1182  039A                     	;# 
  1183  039B                     	;# 
  1184  0611                     	;# 
  1185  0612                     	;# 
  1186  0613                     	;# 
  1187  0613                     	;# 
  1188  0614                     	;# 
  1189  0615                     	;# 
  1190  0616                     	;# 
  1191  0616                     	;# 
  1192  0691                     	;# 
  1193  0692                     	;# 
  1194  0693                     	;# 
  1195  0694                     	;# 
  1196  0695                     	;# 
  1197  0E8E                     	;# 
  1198  0E8F                     	;# 
  1199  0E90                     	;# 
  1200  0E91                     	;# 
  1201  0E92                     	;# 
  1202  0E93                     	;# 
  1203  0E94                     	;# 
  1204  0E94                     	;# 
  1205  0E95                     	;# 
  1206  0E96                     	;# 
  1207  0E97                     	;# 
  1208  0E98                     	;# 
  1209  0E99                     	;# 
  1210  0E9A                     	;# 
  1211  0E9B                     	;# 
  1212  0E9C                     	;# 
  1213  0E9D                     	;# 
  1214  0E9E                     	;# 
  1215  0E9F                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  0011                     	;# 
  1243  0012                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  0091                     	;# 
  1257  0092                     	;# 
  1258  0095                     	;# 
  1259  0096                     	;# 
  1260  0097                     	;# 
  1261  0098                     	;# 
  1262  0099                     	;# 
  1263  009A                     	;# 
  1264  009B                     	;# 
  1265  009B                     	;# 
  1266  009C                     	;# 
  1267  009D                     	;# 
  1268  009E                     	;# 
  1269  009F                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  0111                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0118                     	;# 
  1281  0119                     	;# 
  1282  011D                     	;# 
  1283  018C                     	;# 
  1284  018D                     	;# 
  1285  018E                     	;# 
  1286  0191                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019D                     	;# 
  1300  019E                     	;# 
  1301  019F                     	;# 
  1302  020C                     	;# 
  1303  020D                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0213                     	;# 
  1310  0214                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0216                     	;# 
  1316  0216                     	;# 
  1317  0217                     	;# 
  1318  0217                     	;# 
  1319  0391                     	;# 
  1320  0392                     	;# 
  1321  0393                     	;# 
  1322  0394                     	;# 
  1323  0395                     	;# 
  1324  0396                     	;# 
  1325  039A                     	;# 
  1326  039B                     	;# 
  1327  0611                     	;# 
  1328  0612                     	;# 
  1329  0613                     	;# 
  1330  0613                     	;# 
  1331  0614                     	;# 
  1332  0615                     	;# 
  1333  0616                     	;# 
  1334  0616                     	;# 
  1335  0691                     	;# 
  1336  0692                     	;# 
  1337  0693                     	;# 
  1338  0694                     	;# 
  1339  0695                     	;# 
  1340  0E8E                     	;# 
  1341  0E8F                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E96                     	;# 
  1350  0E97                     	;# 
  1351  0E98                     	;# 
  1352  0E99                     	;# 
  1353  0E9A                     	;# 
  1354  0E9B                     	;# 
  1355  0E9C                     	;# 
  1356  0E9D                     	;# 
  1357  0E9E                     	;# 
  1358  0E9F                     	;# 
  1359  0FE4                     	;# 
  1360  0FE5                     	;# 
  1361  0FE6                     	;# 
  1362  0FE7                     	;# 
  1363  0FE8                     	;# 
  1364  0FE9                     	;# 
  1365  0FEA                     	;# 
  1366  0FEB                     	;# 
  1367  0FED                     	;# 
  1368  0FEE                     	;# 
  1369  0FEF                     	;# 
  1370  0000                     	;# 
  1371  0001                     	;# 
  1372  0002                     	;# 
  1373  0003                     	;# 
  1374  0004                     	;# 
  1375  0005                     	;# 
  1376  0006                     	;# 
  1377  0007                     	;# 
  1378  0008                     	;# 
  1379  0009                     	;# 
  1380  000A                     	;# 
  1381  000B                     	;# 
  1382  000C                     	;# 
  1383  000D                     	;# 
  1384  000E                     	;# 
  1385  0011                     	;# 
  1386  0012                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  008C                     	;# 
  1397  008D                     	;# 
  1398  008E                     	;# 
  1399  0091                     	;# 
  1400  0092                     	;# 
  1401  0095                     	;# 
  1402  0096                     	;# 
  1403  0097                     	;# 
  1404  0098                     	;# 
  1405  0099                     	;# 
  1406  009A                     	;# 
  1407  009B                     	;# 
  1408  009B                     	;# 
  1409  009C                     	;# 
  1410  009D                     	;# 
  1411  009E                     	;# 
  1412  009F                     	;# 
  1413  010C                     	;# 
  1414  010D                     	;# 
  1415  010E                     	;# 
  1416  0111                     	;# 
  1417  0112                     	;# 
  1418  0113                     	;# 
  1419  0114                     	;# 
  1420  0115                     	;# 
  1421  0116                     	;# 
  1422  0117                     	;# 
  1423  0118                     	;# 
  1424  0119                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020C                     	;# 
  1446  020D                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0391                     	;# 
  1463  0392                     	;# 
  1464  0393                     	;# 
  1465  0394                     	;# 
  1466  0395                     	;# 
  1467  0396                     	;# 
  1468  039A                     	;# 
  1469  039B                     	;# 
  1470  0611                     	;# 
  1471  0612                     	;# 
  1472  0613                     	;# 
  1473  0613                     	;# 
  1474  0614                     	;# 
  1475  0615                     	;# 
  1476  0616                     	;# 
  1477  0616                     	;# 
  1478  0691                     	;# 
  1479  0692                     	;# 
  1480  0693                     	;# 
  1481  0694                     	;# 
  1482  0695                     	;# 
  1483  0E8E                     	;# 
  1484  0E8F                     	;# 
  1485  0E90                     	;# 
  1486  0E91                     	;# 
  1487  0E92                     	;# 
  1488  0E93                     	;# 
  1489  0E94                     	;# 
  1490  0E94                     	;# 
  1491  0E95                     	;# 
  1492  0E96                     	;# 
  1493  0E97                     	;# 
  1494  0E98                     	;# 
  1495  0E99                     	;# 
  1496  0E9A                     	;# 
  1497  0E9B                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0E9F                     	;# 
  1502  0FE4                     	;# 
  1503  0FE5                     	;# 
  1504  0FE6                     	;# 
  1505  0FE7                     	;# 
  1506  0FE8                     	;# 
  1507  0FE9                     	;# 
  1508  0FEA                     	;# 
  1509  0FEB                     	;# 
  1510  0FED                     	;# 
  1511  0FEE                     	;# 
  1512  0FEF                     	;# 
  1513  0000                     	;# 
  1514  0001                     	;# 
  1515  0002                     	;# 
  1516  0003                     	;# 
  1517  0004                     	;# 
  1518  0005                     	;# 
  1519  0006                     	;# 
  1520  0007                     	;# 
  1521  0008                     	;# 
  1522  0009                     	;# 
  1523  000A                     	;# 
  1524  000B                     	;# 
  1525  000C                     	;# 
  1526  000D                     	;# 
  1527  000E                     	;# 
  1528  0011                     	;# 
  1529  0012                     	;# 
  1530  0015                     	;# 
  1531  0016                     	;# 
  1532  0016                     	;# 
  1533  0017                     	;# 
  1534  0018                     	;# 
  1535  0019                     	;# 
  1536  001A                     	;# 
  1537  001B                     	;# 
  1538  001C                     	;# 
  1539  008C                     	;# 
  1540  008D                     	;# 
  1541  008E                     	;# 
  1542  0091                     	;# 
  1543  0092                     	;# 
  1544  0095                     	;# 
  1545  0096                     	;# 
  1546  0097                     	;# 
  1547  0098                     	;# 
  1548  0099                     	;# 
  1549  009A                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  009F                     	;# 
  1556  010C                     	;# 
  1557  010D                     	;# 
  1558  010E                     	;# 
  1559  0111                     	;# 
  1560  0112                     	;# 
  1561  0113                     	;# 
  1562  0114                     	;# 
  1563  0115                     	;# 
  1564  0116                     	;# 
  1565  0117                     	;# 
  1566  0118                     	;# 
  1567  0119                     	;# 
  1568  011D                     	;# 
  1569  018C                     	;# 
  1570  018D                     	;# 
  1571  018E                     	;# 
  1572  0191                     	;# 
  1573  0191                     	;# 
  1574  0192                     	;# 
  1575  0193                     	;# 
  1576  0193                     	;# 
  1577  0194                     	;# 
  1578  0195                     	;# 
  1579  0196                     	;# 
  1580  0197                     	;# 
  1581  0199                     	;# 
  1582  019A                     	;# 
  1583  019B                     	;# 
  1584  019C                     	;# 
  1585  019D                     	;# 
  1586  019E                     	;# 
  1587  019F                     	;# 
  1588  020C                     	;# 
  1589  020D                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0212                     	;# 
  1594  0213                     	;# 
  1595  0213                     	;# 
  1596  0214                     	;# 
  1597  0214                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0216                     	;# 
  1603  0217                     	;# 
  1604  0217                     	;# 
  1605  0391                     	;# 
  1606  0392                     	;# 
  1607  0393                     	;# 
  1608  0394                     	;# 
  1609  0395                     	;# 
  1610  0396                     	;# 
  1611  039A                     	;# 
  1612  039B                     	;# 
  1613  0611                     	;# 
  1614  0612                     	;# 
  1615  0613                     	;# 
  1616  0613                     	;# 
  1617  0614                     	;# 
  1618  0615                     	;# 
  1619  0616                     	;# 
  1620  0616                     	;# 
  1621  0691                     	;# 
  1622  0692                     	;# 
  1623  0693                     	;# 
  1624  0694                     	;# 
  1625  0695                     	;# 
  1626  0E8E                     	;# 
  1627  0E8F                     	;# 
  1628  0E90                     	;# 
  1629  0E91                     	;# 
  1630  0E92                     	;# 
  1631  0E93                     	;# 
  1632  0E94                     	;# 
  1633  0E94                     	;# 
  1634  0E95                     	;# 
  1635  0E96                     	;# 
  1636  0E97                     	;# 
  1637  0E98                     	;# 
  1638  0E99                     	;# 
  1639  0E9A                     	;# 
  1640  0E9B                     	;# 
  1641  0E9C                     	;# 
  1642  0E9D                     	;# 
  1643  0E9E                     	;# 
  1644  0E9F                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE9                     	;# 
  1651  0FEA                     	;# 
  1652  0FEB                     	;# 
  1653  0FED                     	;# 
  1654  0FEE                     	;# 
  1655  0FEF                     	;# 
  1656                           
  1657                           	psect	idataBANK4
  1658  085C                     __pidataBANK4:	
  1659                           
  1660                           ;initializer for _buttonMessage
  1661  085C  3442               	retlw	66
  1662  085D  3475               	retlw	117
  1663  085E  3474               	retlw	116
  1664  085F  3474               	retlw	116
  1665  0860  346F               	retlw	111
  1666  0861  346E               	retlw	110
  1667  0862  3420               	retlw	32
  1668  0863  3470               	retlw	112
  1669  0864  3472               	retlw	114
  1670  0865  3465               	retlw	101
  1671  0866  3473               	retlw	115
  1672  0867  3473               	retlw	115
  1673  0868  3465               	retlw	101
  1674  0869  3464               	retlw	100
  1675  086A  342E               	retlw	46
  1676  086B  340D               	retlw	13
  1677  086C  340A               	retlw	10
  1678  086D  3400               	retlw	0
  1679                           
  1680                           	psect	strings
  1681  0300                     __pstrings:	
  1682  0300                     __stringtab:	
  1683  0300  3400               	retlw	0
  1684  0301                     __end_of__stringtab:	
  1685  0301                     _dpowers:	
  1686  0301  3401               	retlw	1
  1687  0302  3400               	retlw	0
  1688  0303  340A               	retlw	10
  1689  0304  3400               	retlw	0
  1690  0305  3464               	retlw	100
  1691  0306  3400               	retlw	0
  1692  0307  34E8               	retlw	232
  1693  0308  3403               	retlw	3
  1694  0309  3410               	retlw	16
  1695  030A  3427               	retlw	39
  1696  030B                     __end_of_dpowers:	
  1697  030B                     _USB_SD_Ptr:	
  1698  030B  34CC               	retlw	(_sd000| (0+32768))& (0+255)
  1699  030C  3452               	retlw	(_sd001| (0+32768))& (0+255)
  1700  030D  3486               	retlw	(_sd002| (0+32768))& (0+255)
  1701  030E                     __end_of_USB_SD_Ptr:	
  1702  030E                     _USB_CD_Ptr:	
  1703  030E  340F               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1704  030F                     __end_of_USB_CD_Ptr:	
  1705  030F                     _configDescriptor1:	
  1706  030F  3409               	retlw	9
  1707  0310  3402               	retlw	2
  1708  0311  3443               	retlw	67
  1709  0312  3400               	retlw	0
  1710  0313  3402               	retlw	2
  1711  0314  3401               	retlw	1
  1712  0315  3400               	retlw	0
  1713  0316  34C0               	retlw	192
  1714  0317  3432               	retlw	50
  1715  0318  3409               	retlw	9
  1716  0319  3404               	retlw	4
  1717  031A  3400               	retlw	0
  1718  031B  3400               	retlw	0
  1719  031C  3401               	retlw	1
  1720  031D  3402               	retlw	2
  1721  031E  3402               	retlw	2
  1722  031F  3401               	retlw	1
  1723  0320  3400               	retlw	0
  1724  0321  3405               	retlw	5
  1725  0322  3424               	retlw	36
  1726  0323  3400               	retlw	0
  1727  0324  3410               	retlw	16
  1728  0325  3401               	retlw	1
  1729  0326  3404               	retlw	4
  1730  0327  3424               	retlw	36
  1731  0328  3402               	retlw	2
  1732  0329  3402               	retlw	2
  1733  032A  3405               	retlw	5
  1734  032B  3424               	retlw	36
  1735  032C  3406               	retlw	6
  1736  032D  3400               	retlw	0
  1737  032E  3401               	retlw	1
  1738  032F  3405               	retlw	5
  1739  0330  3424               	retlw	36
  1740  0331  3401               	retlw	1
  1741  0332  3400               	retlw	0
  1742  0333  3401               	retlw	1
  1743  0334  3407               	retlw	7
  1744  0335  3405               	retlw	5
  1745  0336  3481               	retlw	129
  1746  0337  3403               	retlw	3
  1747  0338  3408               	retlw	8
  1748  0339  3400               	retlw	0
  1749  033A  3402               	retlw	2
  1750  033B  3409               	retlw	9
  1751  033C  3404               	retlw	4
  1752  033D  3401               	retlw	1
  1753  033E  3400               	retlw	0
  1754  033F  3402               	retlw	2
  1755  0340  340A               	retlw	10
  1756  0341  3400               	retlw	0
  1757  0342  3400               	retlw	0
  1758  0343  3400               	retlw	0
  1759  0344  3407               	retlw	7
  1760  0345  3405               	retlw	5
  1761  0346  3402               	retlw	2
  1762  0347  3402               	retlw	2
  1763  0348  3440               	retlw	64
  1764  0349  3400               	retlw	0
  1765  034A  3400               	retlw	0
  1766  034B  3407               	retlw	7
  1767  034C  3405               	retlw	5
  1768  034D  3482               	retlw	130
  1769  034E  3402               	retlw	2
  1770  034F  3440               	retlw	64
  1771  0350  3400               	retlw	0
  1772  0351  3400               	retlw	0
  1773  0352                     __end_of_configDescriptor1:	
  1774  0352                     _sd001:	
  1775  0352  3434               	retlw	52
  1776  0353  3403               	retlw	3
  1777  0354  344D               	retlw	77
  1778  0355  3400               	retlw	0
  1779  0356  3469               	retlw	105
  1780  0357  3400               	retlw	0
  1781  0358  3463               	retlw	99
  1782  0359  3400               	retlw	0
  1783  035A  3472               	retlw	114
  1784  035B  3400               	retlw	0
  1785  035C  346F               	retlw	111
  1786  035D  3400               	retlw	0
  1787  035E  3463               	retlw	99
  1788  035F  3400               	retlw	0
  1789  0360  3468               	retlw	104
  1790  0361  3400               	retlw	0
  1791  0362  3469               	retlw	105
  1792  0363  3400               	retlw	0
  1793  0364  3470               	retlw	112
  1794  0365  3400               	retlw	0
  1795  0366  3420               	retlw	32
  1796  0367  3400               	retlw	0
  1797  0368  3454               	retlw	84
  1798  0369  3400               	retlw	0
  1799  036A  3465               	retlw	101
  1800  036B  3400               	retlw	0
  1801  036C  3463               	retlw	99
  1802  036D  3400               	retlw	0
  1803  036E  3468               	retlw	104
  1804  036F  3400               	retlw	0
  1805  0370  346E               	retlw	110
  1806  0371  3400               	retlw	0
  1807  0372  346F               	retlw	111
  1808  0373  3400               	retlw	0
  1809  0374  346C               	retlw	108
  1810  0375  3400               	retlw	0
  1811  0376  346F               	retlw	111
  1812  0377  3400               	retlw	0
  1813  0378  3467               	retlw	103
  1814  0379  3400               	retlw	0
  1815  037A  3479               	retlw	121
  1816  037B  3400               	retlw	0
  1817  037C  3420               	retlw	32
  1818  037D  3400               	retlw	0
  1819  037E  3449               	retlw	73
  1820  037F  3400               	retlw	0
  1821  0380  346E               	retlw	110
  1822  0381  3400               	retlw	0
  1823  0382  3463               	retlw	99
  1824  0383  3400               	retlw	0
  1825  0384  342E               	retlw	46
  1826  0385  3400               	retlw	0
  1827  0386                     __end_of_sd001:	
  1828  0386                     _sd002:	
  1829  0386  3434               	retlw	52
  1830  0387  3403               	retlw	3
  1831  0388  3443               	retlw	67
  1832  0389  3400               	retlw	0
  1833  038A  3444               	retlw	68
  1834  038B  3400               	retlw	0
  1835  038C  3443               	retlw	67
  1836  038D  3400               	retlw	0
  1837  038E  3420               	retlw	32
  1838  038F  3400               	retlw	0
  1839  0390  3452               	retlw	82
  1840  0391  3400               	retlw	0
  1841  0392  3453               	retlw	83
  1842  0393  3400               	retlw	0
  1843  0394  342D               	retlw	45
  1844  0395  3400               	retlw	0
  1845  0396  3432               	retlw	50
  1846  0397  3400               	retlw	0
  1847  0398  3433               	retlw	51
  1848  0399  3400               	retlw	0
  1849  039A  3432               	retlw	50
  1850  039B  3400               	retlw	0
  1851  039C  3420               	retlw	32
  1852  039D  3400               	retlw	0
  1853  039E  3445               	retlw	69
  1854  039F  3400               	retlw	0
  1855  03A0  346D               	retlw	109
  1856  03A1  3400               	retlw	0
  1857  03A2  3475               	retlw	117
  1858  03A3  3400               	retlw	0
  1859  03A4  346C               	retlw	108
  1860  03A5  3400               	retlw	0
  1861  03A6  3461               	retlw	97
  1862  03A7  3400               	retlw	0
  1863  03A8  3474               	retlw	116
  1864  03A9  3400               	retlw	0
  1865  03AA  3469               	retlw	105
  1866  03AB  3400               	retlw	0
  1867  03AC  346F               	retlw	111
  1868  03AD  3400               	retlw	0
  1869  03AE  346E               	retlw	110
  1870  03AF  3400               	retlw	0
  1871  03B0  3420               	retlw	32
  1872  03B1  3400               	retlw	0
  1873  03B2  3444               	retlw	68
  1874  03B3  3400               	retlw	0
  1875  03B4  3465               	retlw	101
  1876  03B5  3400               	retlw	0
  1877  03B6  346D               	retlw	109
  1878  03B7  3400               	retlw	0
  1879  03B8  346F               	retlw	111
  1880  03B9  3400               	retlw	0
  1881  03BA                     __end_of_sd002:	
  1882  03BA                     _device_dsc:	
  1883  03BA  3412               	retlw	18
  1884  03BB  3401               	retlw	1
  1885  03BC  3400               	retlw	0
  1886  03BD  3402               	retlw	2
  1887  03BE  3402               	retlw	2
  1888  03BF  3400               	retlw	0
  1889  03C0  3400               	retlw	0
  1890  03C1  3408               	retlw	8
  1891  03C2  34D8               	retlw	216
  1892  03C3  3404               	retlw	4
  1893  03C4  340A               	retlw	10
  1894  03C5  3400               	retlw	0
  1895  03C6  3400               	retlw	0
  1896  03C7  3401               	retlw	1
  1897  03C8  3401               	retlw	1
  1898  03C9  3402               	retlw	2
  1899  03CA  3400               	retlw	0
  1900  03CB  3401               	retlw	1
  1901  03CC                     __end_of_device_dsc:	
  1902  03CC                     _sd000:	
  1903  03CC  3404               	retlw	4
  1904  03CD  3403               	retlw	3
  1905  03CE  3409               	retlw	9
  1906  03CF  3404               	retlw	4
  1907  03D0                     __end_of_sd000:	
  1908  000B                     _INTCONbits	set	11
  1909  0012                     _PIR2bits	set	18
  1910  000C                     _PORTAbits	set	12
  1911  0015                     _TMR0	set	21
  1912  009D                     _ADCON0	set	157
  1913  009D                     _ADCON0bits	set	157
  1914  009E                     _ADCON1	set	158
  1915  009E                     _ADCON1bits	set	158
  1916  009F                     _ADCON2	set	159
  1917  009F                     _ADCON2bits	set	159
  1918  009C                     _ADRESH	set	156
  1919  009B                     _ADRESL	set	155
  1920  0095                     _OPTION_REGbits	set	149
  1921  0099                     _OSCCON	set	153
  1922  0091                     _PIE1bits	set	145
  1923  0092                     _PIE2bits	set	146
  1924  008C                     _TRISAbits	set	140
  1925  008D                     _TRISBbits	set	141
  1926  008E                     _TRISCbits	set	142
  1927  010E                     _LATCbits	set	270
  1928  018C                     _ANSELA	set	396
  1929  018C                     _ANSELAbits	set	396
  1930  018D                     _ANSELBbits	set	397
  1931  018E                     _ANSELCbits	set	398
  1932  039B                     _ACTCON	set	923
  1933  0E96                     _UADDR	set	3734
  1934  0E91                     _UCFG	set	3729
  1935  0E8E                     _UCON	set	3726
  1936  0E8E                     _UCONbits	set	3726
  1937  0E97                     _UEIE	set	3735
  1938  0E93                     _UEIR	set	3731
  1939  0E98                     _UEP0bits	set	3736
  1940  0E92                     _UIE	set	3730
  1941  0E92                     _UIEbits	set	3730
  1942  0E90                     _UIR	set	3728
  1943  0E90                     _UIRbits	set	3728
  1944  0E8F                     _USTAT	set	3727
  1945  0E98                     _UEP0	set	3736
  1946  0E99                     _UEP1	set	3737
  1947  03D0                     __stringdata:	
  1948  03D0                     STR_1:	
  1949  03D0  3441               	retlw	65	;'A'
  1950  03D1  3444               	retlw	68	;'D'
  1951  03D2  3443               	retlw	67	;'C'
  1952  03D3  345F               	retlw	95	;'_'
  1953  03D4  344E               	retlw	78	;'N'
  1954  03D5  344E               	retlw	78	;'N'
  1955  03D6  343D               	retlw	61	;'='
  1956  03D7  3425               	retlw	37	;'%'
  1957  03D8  3475               	retlw	117	;'u'
  1958  03D9  342C               	retlw	44	;','
  1959  03DA  3420               	retlw	32	;' '
  1960  03DB  344C               	retlw	76	;'L'
  1961  03DC  3445               	retlw	69	;'E'
  1962  03DD  3456               	retlw	86	;'V'
  1963  03DE  3445               	retlw	69	;'E'
  1964  03DF  344C               	retlw	76	;'L'
  1965  03E0  343D               	retlw	61	;'='
  1966  03E1  3425               	retlw	37	;'%'
  1967  03E2  3475               	retlw	117	;'u'
  1968  03E3  3420               	retlw	32	;' '
  1969  03E4  340A               	retlw	10
  1970  03E5  340D               	retlw	13
  1971  03E6  3400               	retlw	0
  1972  03E7                     __end_of__stringdata:	
  1973                           
  1974                           ; #config settings
  1975  0000                     
  1976                           	psect	cinit
  1977  0AB8                     start_initialization:	
  1978  0AB8                     __initialization:	
  1979                           
  1980                           ; Clear objects allocated to COMMON
  1981  0AB8  01FC               	clrf	__pbssCOMMON& (0+127)
  1982                           
  1983                           ; Clear objects allocated to BANK1
  1984  0AB9  0021               	movlb	1	; select bank1
  1985  0ABA  01EE               	clrf	__pbssBANK1& (0+127)
  1986  0ABB  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1987                           
  1988                           ; Clear objects allocated to BANK2
  1989  0ABC  3060               	movlw	low __pbssBANK2
  1990  0ABD  0084               	movwf	4
  1991  0ABE  3001               	movlw	high __pbssBANK2
  1992  0ABF  0085               	movwf	5
  1993  0AC0  3010               	movlw	16
  1994  0AC1  3197  27DA  318A   	fcall	clear_ram0
  1995                           
  1996                           ; Clear objects allocated to BANK3
  1997  0AC4  30A0               	movlw	low __pbssBANK3
  1998  0AC5  0084               	movwf	4
  1999  0AC6  3001               	movlw	high __pbssBANK3
  2000  0AC7  0085               	movwf	5
  2001  0AC8  304B               	movlw	75
  2002  0AC9  3197  27DA  318A   	fcall	clear_ram0
  2003                           
  2004                           ; Clear objects allocated to BANK4
  2005  0ACC  3020               	movlw	low __pbssBANK4
  2006  0ACD  0084               	movwf	4
  2007  0ACE  3002               	movlw	high __pbssBANK4
  2008  0ACF  0085               	movwf	5
  2009  0AD0  3031               	movlw	49
  2010  0AD1  3197  27DA  318A   	fcall	clear_ram0
  2011                           
  2012                           ; Clear objects allocated to BANK5
  2013  0AD4  30A0               	movlw	low __pbssBANK5
  2014  0AD5  0084               	movwf	4
  2015  0AD6  3002               	movlw	high __pbssBANK5
  2016  0AD7  0085               	movwf	5
  2017  0AD8  3040               	movlw	64
  2018  0AD9  3197  27DA  318A   	fcall	clear_ram0
  2019                           
  2020                           ; Clear objects allocated to BANK6
  2021  0ADC  3020               	movlw	low __pbssBANK6
  2022  0ADD  0084               	movwf	4
  2023  0ADE  3003               	movlw	high __pbssBANK6
  2024  0ADF  0085               	movwf	5
  2025  0AE0  3040               	movlw	64
  2026  0AE1  3197  27DA  318A   	fcall	clear_ram0
  2027                           
  2028                           ; Initialize objects allocated to BANK4
  2029  0AE4  305C               	movlw	low __pidataBANK4
  2030  0AE5  0084               	movwf	4
  2031  0AE6  3088               	movlw	(high __pidataBANK4)| (0+128)
  2032  0AE7  0085               	movwf	5
  2033  0AE8  3051               	movlw	low __pdataBANK4
  2034  0AE9  0086               	movwf	6
  2035  0AEA  3002               	movlw	high __pdataBANK4
  2036  0AEB  0087               	movwf	7
  2037  0AEC  3012               	movlw	18
  2038  0AED  3197  27D4         	fcall	init_ram
  2039  0AEF                     end_of_initialization:	
  2040                           ;End of C runtime variable initialization code
  2041                           
  2042  0AEF                     __end_of__initialization:	
  2043  0AEF  0020               	movlb	0
  2044  0AF0  3189  2932         	ljmp	_main	;jump to C main() function
  2045                           
  2046                           	psect	bssCOMMON
  2047  007C                     __pbssCOMMON:	
  2048  007C                     _pBDTEntryEP0OutNext:	
  2049  007C                     	ds	1
  2050                           
  2051                           	psect	bssBANK1
  2052  00EE                     __pbssBANK1:	
  2053  00EE                     _cdc_trf_state:	
  2054  00EE                     	ds	1
  2055  00EF                     _pBDTEntryEP0OutCurrent:	
  2056  00EF                     	ds	1
  2057                           
  2058                           	psect	bssBANK2
  2059  0160                     __pbssBANK2:	
  2060  0160                     _pBDTEntryIn:	
  2061  0160                     	ds	3
  2062  0163                     APP_DeviceCDCBasicDemoTasks@numberChADC:	
  2063  0163                     	ds	1
  2064  0164                     _CDCDataOutHandle:	
  2065  0164                     	ds	1
  2066  0165                     _USBDeferStatusStagePacket:	
  2067  0165                     	ds	1
  2068  0166                     _USBDeviceState:	
  2069  0166                     	ds	1
  2070  0167                     _cdc_tx_len:	
  2071  0167                     	ds	1
  2072  0168                     _controlTransferState:	
  2073  0168                     	ds	1
  2074  0169                     store_key_level@idx_key:	
  2075  0169                     	ds	1
  2076  016A                     _inPipes:	
  2077  016A                     	ds	5
  2078  016F                     _USTATcopy:	
  2079  016F                     	ds	1
  2080                           
  2081                           	psect	bssBANK3
  2082  01A0                     __pbssBANK3:	
  2083  01A0                     _outPipes:	
  2084  01A0                     	ds	6
  2085  01A6                     _BaudRateGen:	
  2086  01A6                     	ds	4
  2087  01AA                     _USB1msTickCount:	
  2088  01AA                     	ds	4
  2089  01AE                     _ep_data_in:	
  2090  01AE                     	ds	3
  2091  01B1                     _ep_data_out:	
  2092  01B1                     	ds	3
  2093  01B4                     _pBDTEntryOut:	
  2094  01B4                     	ds	3
  2095  01B7                     APP_LEDUpdateUSBStatus@ledCount:	
  2096  01B7                     	ds	2
  2097  01B9                     _midiData:	
  2098  01B9                     	ds	2
  2099  01BB                     _note_event:	
  2100  01BB                     	ds	2
  2101  01BD                     _pCDCDst:	
  2102  01BD                     	ds	2
  2103  01BF                     _pCDCSrc:	
  2104  01BF                     	ds	2
  2105  01C1                     _BothEP0OutUOWNsSet:	
  2106  01C1                     	ds	1
  2107  01C2                     _CDCDataInHandle:	
  2108  01C2                     	ds	1
  2109  01C3                     _RemoteWakeup:	
  2110  01C3                     	ds	1
  2111  01C4                     _USBBusIsSuspended:	
  2112  01C4                     	ds	1
  2113  01C5                     _USBDeferINDataStagePackets:	
  2114  01C5                     	ds	1
  2115  01C6                     _USBDeferOUTDataStagePackets:	
  2116  01C6                     	ds	1
  2117  01C7                     _USBStatusStageEnabledFlag1:	
  2118  01C7                     	ds	1
  2119  01C8                     _USBStatusStageEnabledFlag2:	
  2120  01C8                     	ds	1
  2121  01C9                     _USBStatusStageTimeoutCounter:	
  2122  01C9                     	ds	1
  2123  01CA                     _USBTicksSinceSuspendEnd:	
  2124  01CA                     	ds	1
  2125  01CB                     _buttonPressed:	
  2126  01CB                     	ds	1
  2127  01CC                     _cdc_mem_type:	
  2128  01CC                     	ds	1
  2129  01CD                     _cdc_rx_len:	
  2130  01CD                     	ds	1
  2131  01CE                     _control_signal_bitmap:	
  2132  01CE                     	ds	1
  2133  01CF                     _endpoint_number:	
  2134  01CF                     	ds	1
  2135  01D0                     _is_initialized:	
  2136  01D0                     	ds	1
  2137  01D1                     _pDst:	
  2138  01D1                     	ds	1
  2139  01D2                     _ready_scan:	
  2140  01D2                     	ds	1
  2141  01D3                     _s_idx_key:	
  2142  01D3                     	ds	1
  2143  01D4                     _s_level:	
  2144  01D4                     	ds	1
  2145  01D5                     _shortPacketStatus:	
  2146  01D5                     	ds	1
  2147  01D6                     _wait_timer:	
  2148  01D6                     	ds	1
  2149  01D7                     is_end_of_scan@scan_counter:	
  2150  01D7                     	ds	1
  2151  01D8                     scan_task@state:	
  2152  01D8                     	ds	1
  2153  01D9                     _dummy_encapsulated_cmd_response:	
  2154  01D9                     	ds	8
  2155  01E1                     _line_coding:	
  2156  01E1                     	ds	7
  2157  01E8                     _USBAlternateInterface:	
  2158  01E8                     	ds	2
  2159  01EA                     _USBActiveConfiguration:	
  2160  01EA                     	ds	1
  2161                           
  2162                           	psect	bssBANK4
  2163  0220                     __pbssBANK4:	
  2164  0220                     _adc_levels:	
  2165  0220                     	ds	39
  2166  0247                     _cdc_notice:	
  2167  0247                     	ds	10
  2168                           
  2169                           	psect	dataBANK4
  2170  0251                     __pdataBANK4:	
  2171  0251                     _buttonMessage:	
  2172  0251                     	ds	18
  2173                           
  2174                           	psect	bssBANK5
  2175  02A0                     __pbssBANK5:	
  2176  02A0                     _writeBuffer:	
  2177  02A0                     	ds	64
  2178                           
  2179                           	psect	bssBANK6
  2180  0320                     __pbssBANK6:	
  2181  0320                     _readBuffer:	
  2182  0320                     	ds	64
  2183                           
  2184                           	psect	clrtext
  2185  17DA                     clear_ram0:	
  2186                           ;	Called with FSR0 containing the base address, and
  2187                           ;	WREG with the size to clear
  2188                           
  2189  17DA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2190  17DB                     clrloop0:	
  2191  17DB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2192  17DC  3101               	addfsr 0,1
  2193  17DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2194  17DE  2FDB               	goto	clrloop0	;have we reached the end yet?
  2195  17DF  3400               	retlw	0	;all done for this memory range, return
  2196                           
  2197                           	psect	inittext
  2198  17D4                     init_ram:	
  2199  17D4  00FE               	movwf	126
  2200  17D5                     initloop:	
  2201  17D5  0012               	moviw fsr0++
  2202  17D6  001E               	movwi fsr1++
  2203  17D7  0BFE               	decfsz	126,f
  2204  17D8  2FD5               	goto	initloop
  2205  17D9  3400               	retlw	0
  2206                           
  2207                           	psect	cstackBANK4
  2208  0263                     __pcstackBANK4:	
  2209  0263                     ??_APP_DeviceCDCBasicDemoTasks:	
  2210                           
  2211                           ; 0 bytes @ 0x0
  2212  0263                     	ds	6
  2213                           
  2214                           	psect	cstackBANK1
  2215  00E0                     __pcstackBANK1:	
  2216  00E0                     sprintf@flag:	
  2217  00E0                     USBStdFeatureReqHandler@pUEP:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220                           
  2221                           ; 2 bytes @ 0x0
  2222  00E0                     	ds	1
  2223  00E1                     sprintf@ap:	
  2224                           
  2225                           ; 1 bytes @ 0x1
  2226  00E1                     	ds	1
  2227  00E2                     USBStdFeatureReqHandler@current_ep_data:	
  2228  00E2                     sprintf@ccnt:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231                           
  2232                           ; 2 bytes @ 0x2
  2233  00E2                     	ds	1
  2234  00E3                     USBStdFeatureReqHandler@p:	
  2235                           
  2236                           ; 1 bytes @ 0x3
  2237  00E3                     	ds	1
  2238  00E4                     ??_USBCheckStdRequest:	
  2239  00E4                     sprintf@_val:	
  2240                           ; 0 bytes @ 0x4
  2241                           
  2242                           
  2243                           ; 4 bytes @ 0x4
  2244  00E4                     	ds	1
  2245  00E5                     ??_USBCtrlTrfSetupHandler:	
  2246                           
  2247                           ; 0 bytes @ 0x5
  2248  00E5                     	ds	1
  2249  00E6                     ??_USBCtrlEPService:	
  2250                           
  2251                           ; 0 bytes @ 0x6
  2252  00E6                     	ds	2
  2253  00E8                     sprintf@prec:	
  2254                           
  2255                           ; 1 bytes @ 0x8
  2256  00E8                     	ds	1
  2257  00E9                     USBCtrlEPService@setup_cnt:	
  2258  00E9                     sprintf@sp:	
  2259                           ; 1 bytes @ 0x9
  2260                           
  2261                           
  2262                           ; 1 bytes @ 0x9
  2263  00E9                     	ds	1
  2264  00EA                     ??_USBDeviceTasks:	
  2265  00EA                     sprintf@c:	
  2266                           ; 0 bytes @ 0xA
  2267                           
  2268                           
  2269                           ; 1 bytes @ 0xA
  2270  00EA                     	ds	2
  2271  00EC                     USBDeviceTasks@i:	
  2272                           
  2273                           ; 1 bytes @ 0xC
  2274  00EC                     	ds	1
  2275  00ED                     ??_main:	
  2276                           
  2277                           ; 0 bytes @ 0xD
  2278  00ED                     	ds	1
  2279                           
  2280                           	psect	cstackCOMMON
  2281  0070                     __pcstackCOMMON:	
  2282  0070                     ?_CDCInitEP:	
  2283  0070                     ?_CDCTxService:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ?_LED_Off:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_LED_On:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ?_SYSTEM_Initialize:	
  2293                           ; 0 bytes @ 0x0
  2294                           
  2295  0070                     ?_USBDeviceInit:	
  2296                           ; 0 bytes @ 0x0
  2297                           
  2298  0070                     ?_USBDeviceTasks:	
  2299                           ; 0 bytes @ 0x0
  2300                           
  2301  0070                     ?_USBCheckCDCRequest:	
  2302                           ; 0 bytes @ 0x0
  2303                           
  2304  0070                     ?_LED_Enable:	
  2305                           ; 0 bytes @ 0x0
  2306                           
  2307  0070                     ?_BUTTON_Enable:	
  2308                           ; 0 bytes @ 0x0
  2309                           
  2310  0070                     ?_USBWakeFromSuspend:	
  2311                           ; 0 bytes @ 0x0
  2312                           
  2313  0070                     ?_USBSuspend:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ?_USBIncrement1msInternalTimers:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ?_USBCtrlEPAllowStatusStage:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_USBStallHandler:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ?_USBCtrlEPService:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_USBCtrlTrfTxService:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ?_USBCtrlTrfSetupHandler:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_USBCtrlTrfOutHandler:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ?_USBCtrlTrfInHandler:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_USBCheckStdRequest:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ?_USBStdFeatureReqHandler:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_APP_DeviceCDCBasicDemoInitialize:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ?_APP_DeviceCDCBasicDemoTasks:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_APP_LEDUpdateUSBStatus:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ?_main:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_SYS_InterruptHigh:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ??_SYS_InterruptHigh:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_scan_init:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ?_set_timer:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?_run_adc:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ?_USBCtrlEPAllowDataStage:	
  2374                           ; 0 bytes @ 0x0
  2375                           
  2376  0070                     ?_USBCtrlEPServiceComplete:	
  2377                           ; 0 bytes @ 0x0
  2378                           
  2379  0070                     ?_USBCtrlTrfRxService:	
  2380                           ; 0 bytes @ 0x0
  2381                           
  2382  0070                     ?_USBStdSetCfgHandler:	
  2383                           ; 0 bytes @ 0x0
  2384                           
  2385  0070                     ?_USBStdGetDscHandler:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ?_USBStdGetStatusHandler:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ?_scan_task:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_waiting_for_timer:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_get_data:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_is_end_of_scan:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ?_is_adc_ready:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ?_get_adc:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409                           
  2410                           ; 1 bytes @ 0x0
  2411  0070                     	ds	1
  2412  0071                     ?_putUSBUSART:	
  2413  0071                     ??_LED_Off:	
  2414                           ; 0 bytes @ 0x1
  2415                           
  2416  0071                     ??_LED_On:	
  2417                           ; 0 bytes @ 0x1
  2418                           
  2419  0071                     ??_USBDeviceInit:	
  2420                           ; 0 bytes @ 0x1
  2421                           
  2422  0071                     ??_USBCheckCDCRequest:	
  2423                           ; 0 bytes @ 0x1
  2424                           
  2425  0071                     ??_LED_Enable:	
  2426                           ; 0 bytes @ 0x1
  2427                           
  2428  0071                     ??_BUTTON_Enable:	
  2429                           ; 0 bytes @ 0x1
  2430                           
  2431  0071                     ??_USBIncrement1msInternalTimers:	
  2432                           ; 0 bytes @ 0x1
  2433                           
  2434  0071                     ??_USBCtrlEPAllowStatusStage:	
  2435                           ; 0 bytes @ 0x1
  2436                           
  2437  0071                     ??_USBStallHandler:	
  2438                           ; 0 bytes @ 0x1
  2439                           
  2440  0071                     ?_USBConfigureEndpoint:	
  2441                           ; 0 bytes @ 0x1
  2442                           
  2443  0071                     ??_USBCtrlTrfTxService:	
  2444                           ; 0 bytes @ 0x1
  2445                           
  2446  0071                     ??_scan_init:	
  2447                           ; 0 bytes @ 0x1
  2448                           
  2449  0071                     ??_set_timer:	
  2450                           ; 0 bytes @ 0x1
  2451                           
  2452  0071                     ??_waiting_for_timer:	
  2453                           ; 0 bytes @ 0x1
  2454                           
  2455  0071                     ?_set_clock_and_data:	
  2456                           ; 0 bytes @ 0x1
  2457                           
  2458  0071                     ??_get_data:	
  2459                           ; 0 bytes @ 0x1
  2460                           
  2461  0071                     ??_is_end_of_scan:	
  2462                           ; 0 bytes @ 0x1
  2463                           
  2464  0071                     ??_run_adc:	
  2465                           ; 0 bytes @ 0x1
  2466                           
  2467  0071                     ??_is_adc_ready:	
  2468                           ; 0 bytes @ 0x1
  2469                           
  2470  0071                     ??_get_adc:	
  2471                           ; 0 bytes @ 0x1
  2472                           
  2473  0071                     ?_process_level:	
  2474                           ; 0 bytes @ 0x1
  2475                           
  2476  0071                     ??_USBStdGetDscHandler:	
  2477                           ; 0 bytes @ 0x1
  2478                           
  2479  0071                     ??_USBStdGetStatusHandler:	
  2480                           ; 0 bytes @ 0x1
  2481                           
  2482  0071                     ?_USBTransferOnePacket:	
  2483                           ; 0 bytes @ 0x1
  2484                           
  2485  0071                     ?_memset:	
  2486                           ; 1 bytes @ 0x1
  2487                           
  2488  0071                     ?___lwdiv:	
  2489                           ; 2 bytes @ 0x1
  2490                           
  2491  0071                     _waiting_for_timer$688:	
  2492                           ; 2 bytes @ 0x1
  2493                           
  2494  0071                     set_clock_and_data@d:	
  2495                           ; 1 bytes @ 0x1
  2496                           
  2497  0071                     process_level@old_level:	
  2498                           ; 1 bytes @ 0x1
  2499                           
  2500  0071                     BUTTON_Enable@button:	
  2501                           ; 1 bytes @ 0x1
  2502                           
  2503  0071                     LED_On@led:	
  2504                           ; 1 bytes @ 0x1
  2505                           
  2506  0071                     LED_Off@led:	
  2507                           ; 1 bytes @ 0x1
  2508                           
  2509  0071                     LED_Enable@led:	
  2510                           ; 1 bytes @ 0x1
  2511                           
  2512  0071                     USBTransferOnePacket@dir:	
  2513                           ; 1 bytes @ 0x1
  2514                           
  2515  0071                     USBConfigureEndpoint@direction:	
  2516                           ; 1 bytes @ 0x1
  2517                           
  2518  0071                     putUSBUSART@length:	
  2519                           ; 1 bytes @ 0x1
  2520                           
  2521  0071                     ___lwdiv@divisor:	
  2522                           ; 1 bytes @ 0x1
  2523                           
  2524  0071                     memset@p1:	
  2525                           ; 2 bytes @ 0x1
  2526                           
  2527                           
  2528                           ; 2 bytes @ 0x1
  2529  0071                     	ds	1
  2530  0072                     ??_putUSBUSART:	
  2531  0072                     ??_SYSTEM_Initialize:	
  2532                           ; 0 bytes @ 0x2
  2533                           
  2534  0072                     ??_USBConfigureEndpoint:	
  2535                           ; 0 bytes @ 0x2
  2536                           
  2537  0072                     ??_APP_LEDUpdateUSBStatus:	
  2538                           ; 0 bytes @ 0x2
  2539                           
  2540  0072                     ??_set_clock_and_data:	
  2541                           ; 0 bytes @ 0x2
  2542                           
  2543  0072                     SYSTEM_Initialize@state:	
  2544                           ; 0 bytes @ 0x2
  2545                           
  2546  0072                     process_level@new_level:	
  2547                           ; 1 bytes @ 0x2
  2548                           
  2549  0072                     USBStdGetStatusHandler@p:	
  2550                           ; 1 bytes @ 0x2
  2551                           
  2552  0072                     USBTransferOnePacket@data:	
  2553                           ; 1 bytes @ 0x2
  2554                           
  2555                           
  2556                           ; 2 bytes @ 0x2
  2557  0072                     	ds	1
  2558  0073                     ??_process_level:	
  2559  0073                     ??_USBCtrlTrfRxService:	
  2560                           ; 0 bytes @ 0x3
  2561                           
  2562  0073                     set_clock_and_data@c:	
  2563                           ; 0 bytes @ 0x3
  2564                           
  2565  0073                     is_end_of_scan@res:	
  2566                           ; 1 bytes @ 0x3
  2567                           
  2568  0073                     USBCtrlTrfTxService@byteToSend:	
  2569                           ; 1 bytes @ 0x3
  2570                           
  2571  0073                     putUSBUSART@data:	
  2572                           ; 1 bytes @ 0x3
  2573                           
  2574  0073                     USBDeviceInit@p:	
  2575                           ; 1 bytes @ 0x3
  2576                           
  2577  0073                     ___lwdiv@dividend:	
  2578                           ; 2 bytes @ 0x3
  2579                           
  2580  0073                     memset@c:	
  2581                           ; 2 bytes @ 0x3
  2582                           
  2583                           
  2584                           ; 2 bytes @ 0x3
  2585  0073                     	ds	1
  2586  0074                     ??_USBCtrlTrfInHandler:	
  2587  0074                     ??_USBCtrlEPAllowDataStage:	
  2588                           ; 0 bytes @ 0x4
  2589                           
  2590  0074                     process_level@idx_key:	
  2591                           ; 0 bytes @ 0x4
  2592                           
  2593  0074                     USBTransferOnePacket@len:	
  2594                           ; 1 bytes @ 0x4
  2595                           
  2596                           
  2597                           ; 1 bytes @ 0x4
  2598  0074                     	ds	1
  2599  0075                     ??_USBTransferOnePacket:	
  2600  0075                     ??___lwdiv:	
  2601                           ; 0 bytes @ 0x5
  2602                           
  2603  0075                     ?_store_key_level:	
  2604                           ; 0 bytes @ 0x5
  2605                           
  2606  0075                     store_key_level@end_of_scan:	
  2607                           ; 1 bytes @ 0x5
  2608                           
  2609  0075                     USBDeviceInit@i_1489:	
  2610                           ; 1 bytes @ 0x5
  2611                           
  2612  0075                     USBCtrlTrfRxService@i:	
  2613                           ; 1 bytes @ 0x5
  2614                           
  2615  0075                     memset@n:	
  2616                           ; 1 bytes @ 0x5
  2617                           
  2618                           
  2619                           ; 2 bytes @ 0x5
  2620  0075                     	ds	1
  2621  0076                     ??_store_key_level:	
  2622  0076                     ??_USBCtrlEPServiceComplete:	
  2623                           ; 0 bytes @ 0x6
  2624                           
  2625  0076                     USBDeviceInit@i:	
  2626                           ; 0 bytes @ 0x6
  2627                           
  2628  0076                     USBConfigureEndpoint@EPNum:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     USBCtrlTrfRxService@byteToRead:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     USBCtrlTrfInHandler@lastDTS:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     ___lwdiv@counter:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640                           
  2641                           ; 1 bytes @ 0x6
  2642  0076                     	ds	1
  2643  0077                     ??_memset:	
  2644  0077                     ??_USBCtrlTrfOutHandler:	
  2645                           ; 0 bytes @ 0x7
  2646                           
  2647  0077                     USBTransferOnePacket@ep:	
  2648                           ; 0 bytes @ 0x7
  2649                           
  2650  0077                     USBConfigureEndpoint@handle:	
  2651                           ; 1 bytes @ 0x7
  2652                           
  2653  0077                     ___lwdiv@quotient:	
  2654                           ; 1 bytes @ 0x7
  2655                           
  2656                           
  2657                           ; 2 bytes @ 0x7
  2658  0077                     	ds	1
  2659  0078                     ?_USBEnableEndpoint:	
  2660  0078                     store_key_level@level:	
  2661                           ; 0 bytes @ 0x8
  2662                           
  2663  0078                     USBEnableEndpoint@options:	
  2664                           ; 1 bytes @ 0x8
  2665                           
  2666  0078                     USBTransferOnePacket@handle:	
  2667                           ; 1 bytes @ 0x8
  2668                           
  2669  0078                     memset@p:	
  2670                           ; 1 bytes @ 0x8
  2671                           
  2672                           
  2673                           ; 2 bytes @ 0x8
  2674  0078                     	ds	1
  2675  0079                     ??_CDCTxService:	
  2676  0079                     ??_scan_task:	
  2677                           ; 0 bytes @ 0x9
  2678                           
  2679  0079                     ??_USBEnableEndpoint:	
  2680                           ; 0 bytes @ 0x9
  2681                           
  2682  0079                     ??___lwmod:	
  2683                           ; 0 bytes @ 0x9
  2684                           
  2685                           
  2686                           ; 0 bytes @ 0x9
  2687  0079                     	ds	1
  2688  007A                     ___lwmod@counter:	
  2689                           
  2690                           ; 1 bytes @ 0xA
  2691  007A                     	ds	1
  2692  007B                     ??_APP_DeviceCDCBasicDemoInitialize:	
  2693                           
  2694                           ; 0 bytes @ 0xB
  2695  007B                     	ds	1
  2696  007C                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2697                           
  2698                           	psect	cstackBANK0
  2699  0060                     __pcstackBANK0:	
  2700                           ; 0 bytes @ 0xC
  2701                           
  2702  0060                     ?___lwmod:	
  2703  0060                     _scan_task$719:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0060                     USBEnableEndpoint@p:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0060                     _CDCTxService$2388:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0060                     ___lwmod@divisor:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715                           
  2716                           ; 2 bytes @ 0x0
  2717  0060                     	ds	2
  2718  0062                     USBEnableEndpoint@ep:	
  2719  0062                     CDCTxService@i:	
  2720                           ; 1 bytes @ 0x2
  2721                           
  2722  0062                     _scan_task$720:	
  2723                           ; 1 bytes @ 0x2
  2724                           
  2725  0062                     ___lwmod@dividend:	
  2726                           ; 2 bytes @ 0x2
  2727                           
  2728                           
  2729                           ; 2 bytes @ 0x2
  2730  0062                     	ds	1
  2731  0063                     ??_CDCInitEP:	
  2732  0063                     CDCTxService@byte_to_send:	
  2733                           ; 0 bytes @ 0x3
  2734                           
  2735                           
  2736                           ; 1 bytes @ 0x3
  2737  0063                     	ds	1
  2738  0064                     ?_sprintf:	
  2739  0064                     sprintf@f:	
  2740                           ; 2 bytes @ 0x4
  2741                           
  2742                           
  2743                           ; 1 bytes @ 0x4
  2744  0064                     	ds	1
  2745  0065                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2746  0065                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2747                           ; 1 bytes @ 0x5
  2748                           
  2749                           
  2750                           ; 2 bytes @ 0x5
  2751  0065                     	ds	2
  2752  0067                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2753                           
  2754                           ; 2 bytes @ 0x7
  2755  0067                     	ds	2
  2756  0069                     ??_sprintf:	
  2757  0069                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2758                           ; 0 bytes @ 0x9
  2759                           
  2760                           
  2761                           ; 2 bytes @ 0x9
  2762  0069                     	ds	2
  2763  006B                     ??_USBWakeFromSuspend:	
  2764  006B                     ??_USBSuspend:	
  2765                           ; 0 bytes @ 0xB
  2766                           
  2767  006B                     ??_USBStdFeatureReqHandler:	
  2768                           ; 0 bytes @ 0xB
  2769                           
  2770  006B                     ??_USBStdSetCfgHandler:	
  2771                           ; 0 bytes @ 0xB
  2772                           
  2773  006B                     APP_DeviceCDCBasicDemoTasks@numBytesRead:	
  2774                           ; 0 bytes @ 0xB
  2775                           
  2776                           
  2777                           ; 1 bytes @ 0xB
  2778  006B                     	ds	1
  2779  006C                     APP_DeviceCDCBasicDemoTasks@temp_level:	
  2780  006C                     USBStdSetCfgHandler@p:	
  2781                           ; 1 bytes @ 0xC
  2782                           
  2783                           
  2784                           ; 2 bytes @ 0xC
  2785  006C                     	ds	2
  2786  006E                     USBStdSetCfgHandler@i_1819:	
  2787                           
  2788                           ; 1 bytes @ 0xE
  2789  006E                     	ds	1
  2790  006F                     USBStdSetCfgHandler@i:	
  2791                           
  2792                           ; 1 bytes @ 0xF
  2793  006F                     	ds	1
  2794                           
  2795                           	psect	maintext
  2796  0932                     __pmaintext:	
  2797 ;;
  2798 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2799 ;;
  2800 ;; *************** function _main *****************
  2801 ;; Defined at:
  2802 ;;		line 56 in file "../src/main.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 17F/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;Total ram usage:        1 bytes
  2821 ;; Hardware stack levels required when called:   11
  2822 ;; This function calls:
  2823 ;;		_APP_DeviceCDCBasicDemoTasks
  2824 ;;		_SYSTEM_Initialize
  2825 ;;		_USBDeviceInit
  2826 ;;		_scan_task
  2827 ;;		_USBDeviceTasks
  2828 ;; This function is called by:
  2829 ;;		Startup code after reset
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _main
  2835  0932                     _main:	
  2836                           
  2837                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _main: [allreg]
  2841  0932  3000               	movlw	0
  2842  0933  3188  20DC  3189   	fcall	_SYSTEM_Initialize
  2843                           
  2844                           ;main.c: 59: USBDeviceInit();
  2845  0936  3185  257E  3189   	fcall	_USBDeviceInit
  2846  0939                     l4749:	
  2847                           ;main.c: 60: ;
  2848                           ;main.c: 62: while(1)
  2849                           
  2850                           ;main.c: 99: {
  2851                           ;main.c: 101: continue;
  2852                           
  2853                           ;main.c: 89: {
  2854                           ;main.c: 91: continue;
  2855                           
  2856                           
  2857                           ;main.c: 63: {
  2858                           ;main.c: 64: ;
  2859                           ;main.c: 66: ready_scan = scan_task();
  2860  0939  3187  275A  3189   	fcall	_scan_task
  2861  093C  0021               	movlb	1	; select bank1
  2862  093D  00ED               	movwf	??_main^(0+128)
  2863  093E  086D               	movf	??_main^(0+128),w
  2864  093F  0023               	movlb	3	; select bank3
  2865  0940  00D2               	movwf	_ready_scan^(0+384)
  2866                           
  2867                           ;main.c: 81: USBDeviceTasks();
  2868  0941  3181  213A  3189   	fcall	_USBDeviceTasks
  2869                           
  2870                           ;main.c: 88: if( USBDeviceState < CONFIGURED_STATE )
  2871  0944  3020               	movlw	32
  2872  0945  0022               	movlb	2	; select bank2
  2873  0946  0266               	subwf	_USBDeviceState^(0+256),w
  2874  0947  1C03               	btfss	3,0
  2875  0948  2939               	goto	l4749
  2876                           
  2877                           ;main.c: 92: }
  2878                           ;main.c: 98: if( UCONbits.SUSPND== 1 )
  2879  0949  003D               	movlb	29	; select bank29
  2880  094A  188E               	btfsc	14,1	;volatile
  2881  094B  2939               	goto	l4749
  2882                           
  2883                           ;main.c: 102: }
  2884                           ;main.c: 105: APP_DeviceCDCBasicDemoTasks();
  2885  094C  318C  2463  3189   	fcall	_APP_DeviceCDCBasicDemoTasks
  2886  094F  2939               	goto	l4749
  2887  0950                     __end_of_main:	
  2888                           
  2889                           	psect	text1
  2890  013A                     __ptext1:	
  2891 ;; *************** function _USBDeviceTasks *****************
  2892 ;; Defined at:
  2893 ;;		line 497 in file "../framework/usb/usb_device.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  i               1   12[BANK1 ] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;Total ram usage:        3 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:   10
  2914 ;; This function calls:
  2915 ;;		_USBDeviceInit
  2916 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2917 ;;		_USBWakeFromSuspend
  2918 ;;		_USBSuspend
  2919 ;;		_USBIncrement1msInternalTimers
  2920 ;;		_USBCtrlEPAllowStatusStage
  2921 ;;		_USBStallHandler
  2922 ;;		_USBCtrlEPService
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _USBDeviceTasks
  2930  013A                     _USBDeviceTasks:	
  2931                           
  2932                           ;usb_device.c: 563: }
  2933                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  2934                           
  2935                           ;usb_device.c: 562: return;
  2936                           
  2937                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  2938                           
  2939                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  2940                           
  2941                           ;usb_device.c: 530: UIE = 0;
  2942                           
  2943                           ;usb_device.c: 525: {
  2944                           ;usb_device.c: 527: UCON = 0;
  2945                           
  2946                           ;usb_device.c: 498: uint8_t i;
  2947                           ;usb_device.c: 524: if (1 != 1)
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _USBDeviceTasks: [allreg]
  2951  013A  0022               	movlb	2	; select bank2
  2952  013B  08E6               	movf	_USBDeviceState^(0+256),f
  2953  013C  1D03               	skipz
  2954  013D  294E               	goto	l4779
  2955                           
  2956                           ;usb_device.c: 586: {
  2957                           ;usb_device.c: 588: UCON = 0;
  2958  013E  003D               	movlb	29	; select bank29
  2959  013F  018E               	clrf	14	;volatile
  2960                           
  2961                           ;usb_device.c: 591: UIE = 0;
  2962  0140  0192               	clrf	18	;volatile
  2963                           
  2964                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2965  0141  3016               	movlw	22
  2966  0142  0091               	movwf	17	;volatile
  2967  0143  309F               	movlw	159
  2968  0144  0097               	movwf	23	;volatile
  2969  0145  307B               	movlw	123
  2970  0146  0092               	movwf	18	;volatile
  2971  0147                     l496:	
  2972                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2973                           
  2974  0147  198E               	btfsc	14,3	;volatile
  2975  0148  294B               	goto	l498
  2976  0149  158E               	bsf	14,3	;volatile
  2977  014A  2947               	goto	l496
  2978  014B                     l498:	
  2979                           
  2980                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  2981  014B  0022               	movlb	2	; select bank2
  2982  014C  01E6               	clrf	_USBDeviceState^(0+256)
  2983  014D  0AE6               	incf	_USBDeviceState^(0+256),f
  2984  014E                     l4779:	
  2985                           
  2986                           ;usb_device.c: 606: }
  2987                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  2988  014E  0866               	movf	_USBDeviceState^(0+256),w
  2989  014F  3A01               	xorlw	1
  2990  0150  1D03               	skipz
  2991  0151  295F               	goto	l4791
  2992                           
  2993                           ;usb_device.c: 610: {
  2994                           ;usb_device.c: 620: if(!UCONbits.SE0)
  2995  0152  003D               	movlb	29	; select bank29
  2996  0153  1A8E               	btfsc	14,5	;volatile
  2997  0154  295F               	goto	l4791
  2998                           
  2999                           ;usb_device.c: 621: {
  3000                           ;usb_device.c: 627: {UIR = 0;};
  3001  0155  0190               	clrf	16	;volatile
  3002                           
  3003                           ;usb_device.c: 631: UIE=0;
  3004  0156  0192               	clrf	18	;volatile
  3005                           
  3006                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  3007  0157  1412               	bsf	18,0	;volatile
  3008                           
  3009                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  3010  0158  1612               	bsf	18,4	;volatile
  3011                           
  3012                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  3013  0159  3002               	movlw	2
  3014  015A  0021               	movlb	1	; select bank1
  3015  015B  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3016  015C  086A               	movf	??_USBDeviceTasks^(0+128),w
  3017  015D  0022               	movlb	2	; select bank2
  3018  015E  00E6               	movwf	_USBDeviceState^(0+256)
  3019  015F                     l4791:	
  3020                           
  3021                           ;usb_device.c: 636: }
  3022                           ;usb_device.c: 637: }
  3023                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3024  015F  003D               	movlb	29	; select bank29
  3025  0160  1910               	btfsc	16,2	;volatile
  3026  0161  1D12               	btfss	18,2	;volatile
  3027  0162  296C               	goto	l4799
  3028                           
  3029                           ;usb_device.c: 654: {
  3030                           ;usb_device.c: 655: (UIR &= 0xFB);
  3031  0163  30FB               	movlw	251
  3032  0164  0021               	movlb	1	; select bank1
  3033  0165  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3034  0166  086A               	movf	??_USBDeviceTasks^(0+128),w
  3035  0167  003D               	movlb	29	; select bank29
  3036  0168  0590               	andwf	16,f	;volatile
  3037                           
  3038                           ;usb_device.c: 659: USBWakeFromSuspend();
  3039  0169  3189  2150  3181   	fcall	_USBWakeFromSuspend
  3040  016C                     l4799:	
  3041                           
  3042                           ;usb_device.c: 661: }
  3043                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  3044  016C  003D               	movlb	29	; select bank29
  3045  016D  1C8E               	btfss	14,1	;volatile
  3046  016E  2972               	goto	l502
  3047                           
  3048                           ;usb_device.c: 667: {
  3049                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  3050  016F  0020               	movlb	0	; select bank0
  3051  0170  1112               	bcf	18,2	;volatile
  3052                           
  3053                           ;usb_device.c: 669: return;
  3054  0171  0008               	return
  3055  0172                     l502:	
  3056                           
  3057                           ;usb_device.c: 670: }
  3058                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3059  0172  1810               	btfsc	16,0	;volatile
  3060  0173  1C12               	btfss	18,0	;volatile
  3061  0174  2984               	goto	l4811
  3062                           
  3063                           ;usb_device.c: 683: {
  3064                           ;usb_device.c: 684: USBDeviceInit();
  3065  0175  3185  257E  3181   	fcall	_USBDeviceInit
  3066                           
  3067                           ;usb_device.c: 688: ;
  3068                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  3069  0178  3004               	movlw	4
  3070  0179  0021               	movlb	1	; select bank1
  3071  017A  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3072  017B  086A               	movf	??_USBDeviceTasks^(0+128),w
  3073  017C  0022               	movlb	2	; select bank2
  3074  017D  00E6               	movwf	_USBDeviceState^(0+256)
  3075                           
  3076                           ;usb_device.c: 700: (UIR &= 0xFE);
  3077  017E  30FE               	movlw	254
  3078  017F  0021               	movlb	1	; select bank1
  3079  0180  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3080  0181  086A               	movf	??_USBDeviceTasks^(0+128),w
  3081  0182  003D               	movlb	29	; select bank29
  3082  0183  0590               	andwf	16,f	;volatile
  3083  0184                     l4811:	
  3084                           
  3085                           ;usb_device.c: 701: }
  3086                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3087  0184  1A10               	btfsc	16,4	;volatile
  3088  0185  1E12               	btfss	18,4	;volatile
  3089  0186  298A               	goto	l4817
  3090                           
  3091                           ;usb_device.c: 707: {
  3092                           ;usb_device.c: 713: USBSuspend();
  3093  0187  3189  2115  3181   	fcall	_USBSuspend
  3094  018A                     l4817:	
  3095                           
  3096                           ;usb_device.c: 715: }
  3097                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  3098  018A  003D               	movlb	29	; select bank29
  3099  018B  1F10               	btfss	16,6	;volatile
  3100  018C  29B4               	goto	l4835
  3101                           
  3102                           ;usb_device.c: 728: {
  3103                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  3104  018D  1F12               	btfss	18,6	;volatile
  3105  018E  299F               	goto	l4823
  3106                           
  3107                           ;usb_device.c: 731: {
  3108                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3109  018F  3073               	movlw	115
  3110  0190  0020               	movlb	0	; select bank0
  3111  0191  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  3112  0192  3000               	movlw	0
  3113  0193  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  3114  0194  3000               	movlw	0
  3115  0195  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  3116  0196  3000               	movlw	0
  3117  0197  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  3118  0198  3001               	movlw	1
  3119  0199  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  3120  019A  3000               	movlw	0
  3121  019B  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  3122  019C  318A  227F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3123  019F                     l4823:	
  3124                           
  3125                           ;usb_device.c: 733: }
  3126                           ;usb_device.c: 734: (UIR &= 0xBF);
  3127  019F  30BF               	movlw	191
  3128  01A0  0021               	movlb	1	; select bank1
  3129  01A1  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3130  01A2  086A               	movf	??_USBDeviceTasks^(0+128),w
  3131  01A3  003D               	movlb	29	; select bank29
  3132  01A4  0590               	andwf	16,f	;volatile
  3133                           
  3134                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  3135  01A5  3188  20AA  3181   	fcall	_USBIncrement1msInternalTimers
  3136                           
  3137                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  3138  01A8  0023               	movlb	3	; select bank3
  3139  01A9  0849               	movf	_USBStatusStageTimeoutCounter^(0+384),w
  3140  01AA  1903               	btfsc	3,2
  3141  01AB  29AE               	goto	l4831
  3142                           
  3143                           ;usb_device.c: 755: {
  3144                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  3145  01AC  3001               	movlw	1
  3146  01AD  02C9               	subwf	_USBStatusStageTimeoutCounter^(0+384),f
  3147  01AE                     l4831:	
  3148                           
  3149                           ;usb_device.c: 757: }
  3150                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  3151  01AE  08C9               	movf	_USBStatusStageTimeoutCounter^(0+384),f
  3152  01AF  1D03               	skipz
  3153  01B0  29B4               	goto	l4835
  3154                           
  3155                           ;usb_device.c: 764: {
  3156                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  3157  01B1  318D  25CE  3181   	fcall	_USBCtrlEPAllowStatusStage
  3158  01B4                     l4835:	
  3159                           
  3160                           ;usb_device.c: 766: }
  3161                           ;usb_device.c: 768: }
  3162                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3163  01B4  003D               	movlb	29	; select bank29
  3164  01B5  1A90               	btfsc	16,5	;volatile
  3165  01B6  1E92               	btfss	18,5	;volatile
  3166  01B7  29BB               	goto	l4841
  3167                           
  3168                           ;usb_device.c: 771: {
  3169                           ;usb_device.c: 772: USBStallHandler();
  3170  01B8  3189  2196  3181   	fcall	_USBStallHandler
  3171  01BB                     l4841:	
  3172                           
  3173                           ;usb_device.c: 773: }
  3174                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3175  01BB  003D               	movlb	29	; select bank29
  3176  01BC  1890               	btfsc	16,1	;volatile
  3177  01BD  1C92               	btfss	18,1	;volatile
  3178  01BE  29D1               	goto	l4849
  3179                           
  3180                           ;usb_device.c: 776: {
  3181                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3182  01BF  30FF               	movlw	255
  3183  01C0  0020               	movlb	0	; select bank0
  3184  01C1  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  3185  01C2  307F               	movlw	127
  3186  01C3  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  3187  01C4  3000               	movlw	0
  3188  01C5  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  3189  01C6  3000               	movlw	0
  3190  01C7  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  3191  01C8  3001               	movlw	1
  3192  01C9  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  3193  01CA  3000               	movlw	0
  3194  01CB  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  3195  01CC  318A  227F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3196                           
  3197                           ;usb_device.c: 778: {UEIR = 0;};
  3198  01CF  003D               	movlb	29	; select bank29
  3199  01D0  0193               	clrf	19	;volatile
  3200  01D1                     l4849:	
  3201                           
  3202                           ;usb_device.c: 786: }
  3203                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  3204  01D1  3004               	movlw	4
  3205  01D2  0022               	movlb	2	; select bank2
  3206  01D3  0266               	subwf	_USBDeviceState^(0+256),w
  3207  01D4  1803               	skipnc
  3208  01D5  29D9               	goto	l511
  3209                           
  3210                           ;usb_device.c: 794: {
  3211                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  3212  01D6  0020               	movlb	0	; select bank0
  3213  01D7  1112               	bcf	18,2	;volatile
  3214                           
  3215                           ;usb_device.c: 796: return;
  3216  01D8  0008               	return
  3217  01D9                     l511:	
  3218                           
  3219                           ;usb_device.c: 797: }
  3220                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  3221  01D9  003D               	movlb	29	; select bank29
  3222  01DA  1D92               	btfss	18,3	;volatile
  3223  01DB  2A31               	goto	l512
  3224                           
  3225                           ;usb_device.c: 803: {
  3226                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  3227  01DC  0021               	movlb	1	; select bank1
  3228  01DD  01EC               	clrf	USBDeviceTasks@i^(0+128)
  3229  01DE  2A2A               	goto	L2
  3230  01DF                     l4859:	
  3231                           
  3232                           ;usb_device.c: 807: {
  3233                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  3234  01DF  080F               	movf	15,w	;volatile
  3235  01E0  0021               	movlb	1	; select bank1
  3236  01E1  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3237  01E2  086A               	movf	??_USBDeviceTasks^(0+128),w
  3238  01E3  0022               	movlb	2	; select bank2
  3239  01E4  00EF               	movwf	_USTATcopy^(0+256)
  3240                           
  3241                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  3242  01E5  0C6F               	rrf	_USTATcopy^(0+256),w
  3243  01E6  0021               	movlb	1	; select bank1
  3244  01E7  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3245  01E8  0CEA               	rrf	??_USBDeviceTasks^(0+128),f
  3246  01E9  0C6A               	rrf	??_USBDeviceTasks^(0+128),w
  3247  01EA  390F               	andlw	15
  3248  01EB  00EB               	movwf	(??_USBDeviceTasks+1)^(0+128)
  3249  01EC  086B               	movf	(??_USBDeviceTasks+1)^(0+128),w
  3250  01ED  0023               	movlb	3	; select bank3
  3251  01EE  00CF               	movwf	_endpoint_number^(0+384)
  3252                           
  3253                           ;usb_device.c: 812: (UIR &= 0xF7);
  3254  01EF  30F7               	movlw	247
  3255  01F0  0021               	movlb	1	; select bank1
  3256  01F1  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3257  01F2  086A               	movf	??_USBDeviceTasks^(0+128),w
  3258  01F3  003D               	movlb	29	; select bank29
  3259  01F4  0590               	andwf	16,f	;volatile
  3260                           
  3261                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  3262  01F5  0022               	movlb	2	; select bank2
  3263  01F6  196F               	btfsc	_USTATcopy^(0+256),2
  3264  01F7  29FC               	goto	l4869
  3265                           
  3266                           ;usb_device.c: 818: {
  3267                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3268  01F8  0023               	movlb	3	; select bank3
  3269  01F9  084F               	movf	_endpoint_number^(0+384),w
  3270  01FA  3EB1               	addlw	_ep_data_out& (0+255)
  3271  01FB  29FF               	goto	L1
  3272  01FC                     l4869:	
  3273                           ;usb_device.c: 820: }
  3274                           
  3275                           
  3276                           ;usb_device.c: 821: else
  3277                           ;usb_device.c: 822: {
  3278                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3279  01FC  0023               	movlb	3	; select bank3
  3280  01FD  084F               	movf	_endpoint_number^(0+384),w
  3281  01FE  3EAE               	addlw	_ep_data_in& (0+255)
  3282  01FF                     L1:	
  3283  01FF  0086               	movwf	6
  3284  0200  3001               	movlw	1	; select bank3/4
  3285  0201  0087               	movwf	7
  3286  0202  0801               	movf	1,w
  3287  0203  3901               	andlw	1
  3288  0204  0021               	movlb	1	; select bank1
  3289  0205  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3290  0206  3001               	movlw	1
  3291  0207  06EA               	xorwf	??_USBDeviceTasks^(0+128),f
  3292  0208  0801               	movf	1,w
  3293  0209  066A               	xorwf	??_USBDeviceTasks^(0+128),w
  3294  020A  39FE               	andlw	-2
  3295  020B  066A               	xorwf	??_USBDeviceTasks^(0+128),w
  3296  020C  0081               	movwf	1
  3297                           
  3298                           ;usb_device.c: 824: }
  3299                           ;usb_device.c: 829: if(endpoint_number == 0)
  3300  020D  0023               	movlb	3	; select bank3
  3301  020E  08CF               	movf	_endpoint_number^(0+384),f
  3302  020F  1D03               	skipz
  3303  0210  2A15               	goto	l4875
  3304                           
  3305                           ;usb_device.c: 830: {
  3306                           ;usb_device.c: 831: USBCtrlEPService();
  3307  0211  318F  2715  3181   	fcall	_USBCtrlEPService
  3308                           
  3309                           ;usb_device.c: 832: }
  3310  0214  2A25               	goto	l4877
  3311  0215                     l4875:	
  3312                           
  3313                           ;usb_device.c: 833: else
  3314                           ;usb_device.c: 834: {
  3315                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3316  0215  3072               	movlw	114
  3317  0216  0020               	movlb	0	; select bank0
  3318  0217  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  3319  0218  3000               	movlw	0
  3320  0219  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  3321  021A  306F               	movlw	low _USTATcopy
  3322  021B  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  3323  021C  3001               	movlw	high _USTATcopy
  3324  021D  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  3325  021E  3000               	movlw	0
  3326  021F  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  3327  0220  3000               	movlw	0
  3328  0221  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  3329  0222  318A  227F  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3330  0225                     l4877:	
  3331                           ;usb_device.c: 838: else
  3332                           ;usb_device.c: 839: {
  3333                           ;usb_device.c: 840: break;
  3334                           
  3335                           ;usb_device.c: 836: }
  3336                           ;usb_device.c: 837: }
  3337                           
  3338  0225  3001               	movlw	1
  3339  0226  0021               	movlb	1	; select bank1
  3340  0227  00EA               	movwf	??_USBDeviceTasks^(0+128)
  3341  0228  086A               	movf	??_USBDeviceTasks^(0+128),w
  3342  0229  07EC               	addwf	USBDeviceTasks@i^(0+128),f
  3343  022A                     L2:	
  3344  022A  3004               	movlw	4
  3345  022B  026C               	subwf	USBDeviceTasks@i^(0+128),w
  3346  022C  1803               	btfsc	3,0
  3347  022D  2A31               	goto	l512
  3348                           
  3349                           ;usb_device.c: 805: {
  3350                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  3351  022E  003D               	movlb	29	; select bank29
  3352  022F  1990               	btfsc	16,3	;volatile
  3353  0230  29DF               	goto	l4859
  3354  0231                     l512:	
  3355                           
  3356                           ;usb_device.c: 841: }
  3357                           ;usb_device.c: 842: }
  3358                           ;usb_device.c: 843: }
  3359                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  3360  0231  0020               	movlb	0	; select bank0
  3361  0232  1112               	bcf	18,2	;volatile
  3362  0233  0008               	return
  3363  0234                     __end_of_USBDeviceTasks:	
  3364                           
  3365                           	psect	text2
  3366  0F15                     __ptext2:	
  3367 ;; *************** function _USBCtrlEPService *****************
  3368 ;; Defined at:
  3369 ;;		line 2392 in file "../framework/usb/usb_device.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  setup_cnt       1    9[BANK1 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;Total ram usage:        4 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    9
  3390 ;; This function calls:
  3391 ;;		_USBCtrlTrfSetupHandler
  3392 ;;		_USBCtrlTrfOutHandler
  3393 ;;		_USBCtrlTrfInHandler
  3394 ;; This function is called by:
  3395 ;;		_USBDeviceTasks
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function _USBCtrlEPService
  3401  0F15                     _USBCtrlEPService:	
  3402                           
  3403                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in _USBCtrlEPService: [allreg]
  3407  0F15  302D               	movlw	45
  3408  0F16  0021               	movlb	1	; select bank1
  3409  0F17  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3410  0F18  0866               	movf	??_USBCtrlEPService^(0+128),w
  3411  0F19  0023               	movlb	3	; select bank3
  3412  0F1A  00C9               	movwf	_USBStatusStageTimeoutCounter^(0+384)
  3413                           
  3414                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  3415  0F1B  0022               	movlb	2	; select bank2
  3416  0F1C  086F               	movf	_USTATcopy^(0+256),w
  3417  0F1D  39FD               	andlw	253
  3418  0F1E  1D03               	btfss	3,2
  3419  0F1F  2F7B               	goto	l5023
  3420                           
  3421                           ;usb_device.c: 2402: {
  3422                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3423  0F20  366F               	lsrf	_USTATcopy^(0+256),w
  3424  0F21  393F               	andlw	63
  3425  0F22  0021               	movlb	1	; select bank1
  3426  0F23  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3427  0F24  3001               	movlw	1
  3428  0F25                     u4685:	
  3429  0F25  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  3430  0F26  3EFF               	addlw	-1
  3431  0F27  1D03               	skipz
  3432  0F28  2F25               	goto	u4685
  3433  0F29  3566               	lslf	??_USBCtrlEPService^(0+128),w
  3434  0F2A  3E20               	addlw	32
  3435  0F2B  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  3436  0F2C  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  3437  0F2D  00EF               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  3438                           
  3439                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3440  0F2E  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3441  0F2F  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3442  0F30  0866               	movf	??_USBCtrlEPService^(0+128),w
  3443  0F31  00FC               	movwf	_pBDTEntryEP0OutNext
  3444                           
  3445                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  3446  0F32  3004               	movlw	4
  3447  0F33  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3448  0F34  0866               	movf	??_USBCtrlEPService^(0+128),w
  3449  0F35  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  3450                           
  3451                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3452  0F36  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3453  0F37  0086               	movwf	6
  3454  0F38  0187               	clrf	7
  3455  0F39  0C01               	rrf	1,w
  3456  0F3A  0C89               	rrf	9,f
  3457  0F3B  390F               	andlw	15
  3458  0F3C  3A0D               	xorlw	13
  3459  0F3D  1D03               	skipz
  3460  0F3E  2F78               	goto	l5021
  3461                           
  3462                           ;usb_device.c: 2419: {
  3463                           ;usb_device.c: 2420: unsigned char setup_cnt;
  3464                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  3465  0F3F  01E9               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  3466  0F40  3008               	movlw	8
  3467  0F41  0269               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  3468  0F42  1803               	btfsc	3,0
  3469  0F43  2F69               	goto	l5017
  3470  0F44                     l5011:	
  3471                           
  3472                           ;usb_device.c: 2427: {
  3473                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  3474  0F44  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3475  0F45  3E02               	addlw	2
  3476  0F46  0086               	movwf	6
  3477  0F47  0187               	clrf	7
  3478  0F48  3F40               	moviw [0]fsr1
  3479  0F49  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3480  0F4A  3F41               	moviw [1]fsr1
  3481  0F4B  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  3482  0F4C  0866               	movf	??_USBCtrlEPService^(0+128),w
  3483  0F4D  0086               	movwf	6
  3484  0F4E  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  3485  0F4F  0087               	movwf	7
  3486  0F50  0801               	movf	1,w
  3487  0F51  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  3488  0F52  0869               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  3489  0F53  3E50               	addlw	80
  3490  0F54  0086               	movwf	6
  3491  0F55  0187               	clrf	7
  3492  0F56  0868               	movf	(??_USBCtrlEPService+2)^(0+128),w
  3493  0F57  0081               	movwf	1
  3494                           
  3495                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  3496  0F58  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3497  0F59  3E02               	addlw	2
  3498  0F5A  0086               	movwf	6
  3499  0F5B  0187               	clrf	7
  3500  0F5C  3001               	movlw	1
  3501  0F5D  0781               	addwf	1,f
  3502  0F5E  3141               	addfsr 1,1
  3503  0F5F  1803               	skipnc
  3504  0F60  0A81               	incf	1,f
  3505  0F61  3001               	movlw	1
  3506  0F62  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3507  0F63  0866               	movf	??_USBCtrlEPService^(0+128),w
  3508  0F64  07E9               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  3509  0F65  3008               	movlw	8
  3510  0F66  0269               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  3511  0F67  1C03               	skipc
  3512  0F68  2F44               	goto	l5011
  3513  0F69                     l5017:	
  3514                           
  3515                           ;usb_device.c: 2430: }
  3516                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3517  0F69  3050               	movlw	80
  3518  0F6A  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3519  0F6B  3000               	movlw	0
  3520  0F6C  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  3521  0F6D  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3522  0F6E  3E02               	addlw	2
  3523  0F6F  0086               	movwf	6
  3524  0F70  0187               	clrf	7
  3525  0F71  0866               	movf	??_USBCtrlEPService^(0+128),w
  3526  0F72  3FC0               	movwi [0]fsr1
  3527  0F73  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  3528  0F74  3FC1               	movwi [1]fsr1
  3529                           
  3530                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  3531  0F75  318B  23C6         	fcall	_USBCtrlTrfSetupHandler
  3532                           
  3533                           ;usb_device.c: 2435: }
  3534  0F77  0008               	return
  3535  0F78                     l5021:	
  3536                           
  3537                           ;usb_device.c: 2436: else
  3538                           ;usb_device.c: 2437: {
  3539                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  3540  0F78  318A  221A         	fcall	_USBCtrlTrfOutHandler
  3541                           
  3542                           ;usb_device.c: 2440: }
  3543                           ;usb_device.c: 2441: }
  3544  0F7A  0008               	return
  3545  0F7B                     l5023:	
  3546                           
  3547                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  3548  0F7B  30FD               	movlw	253
  3549  0F7C  0022               	movlb	2	; select bank2
  3550  0F7D  056F               	andwf	_USTATcopy^(0+256),w
  3551  0F7E  0021               	movlb	1	; select bank1
  3552  0F7F  00E6               	movwf	??_USBCtrlEPService^(0+128)
  3553  0F80  0866               	movf	??_USBCtrlEPService^(0+128),w
  3554  0F81  3A04               	xorlw	4
  3555  0F82  1D03               	skipz
  3556  0F83  0008               	return
  3557                           
  3558                           ;usb_device.c: 2443: {
  3559                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  3560  0F84  318E  2635         	fcall	_USBCtrlTrfInHandler
  3561  0F86  0008               	return
  3562  0F87                     __end_of_USBCtrlEPService:	
  3563                           
  3564                           	psect	text3
  3565  0E35                     __ptext3:	
  3566 ;; *************** function _USBCtrlTrfInHandler *****************
  3567 ;; Defined at:
  3568 ;;		line 2618 in file "../framework/usb/usb_device.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  lastDTS         1    6[COMMON] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;Total ram usage:        3 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    2
  3589 ;; This function calls:
  3590 ;;		_USBCtrlTrfTxService
  3591 ;;		Absolute function
  3592 ;; This function is called by:
  3593 ;;		_USBCtrlEPService
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _USBCtrlTrfInHandler
  3599  0E35                     _USBCtrlTrfInHandler:	
  3600                           
  3601                           ;usb_device.c: 2619: uint8_t lastDTS;
  3602                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3606  0E35  0022               	movlb	2	; select bank2
  3607  0E36  0860               	movf	_pBDTEntryIn^(0+256),w
  3608  0E37  0086               	movwf	6
  3609  0E38  0187               	clrf	7
  3610  0E39  3000               	movlw	0
  3611  0E3A  1B01               	btfsc	1,6
  3612  0E3B  3001               	movlw	1
  3613  0E3C  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  3614                           
  3615                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  3616  0E3D  3004               	movlw	4
  3617  0E3E  00F4               	movwf	??_USBCtrlTrfInHandler
  3618  0E3F  0874               	movf	??_USBCtrlTrfInHandler,w
  3619  0E40  06E0               	xorwf	_pBDTEntryIn^(0+256),f
  3620                           
  3621                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  3622  0E41  0866               	movf	_USBDeviceState^(0+256),w
  3623  0E42  3A08               	xorlw	8
  3624  0E43  1D03               	skipz
  3625  0E44  2E54               	goto	l676
  3626                           
  3627                           ;usb_device.c: 2630: {
  3628                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  3629  0E45  0020               	movlb	0	; select bank0
  3630  0E46  0852               	movf	82,w	;volatile
  3631  0E47  397F               	andlw	127
  3632  0E48  003D               	movlb	29	; select bank29
  3633  0E49  0096               	movwf	22	;volatile
  3634                           
  3635                           ;usb_device.c: 2632: if(UADDR != 0u)
  3636  0E4A  0816               	movf	22,w	;volatile
  3637  0E4B  1903               	btfsc	3,2
  3638  0E4C  2E4F               	goto	l4145
  3639                           
  3640                           ;usb_device.c: 2633: {
  3641                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  3642  0E4D  3010               	movlw	16
  3643  0E4E  2E50               	goto	L3
  3644  0E4F                     l4145:	
  3645                           ;usb_device.c: 2635: }
  3646                           
  3647                           
  3648                           ;usb_device.c: 2636: else
  3649                           ;usb_device.c: 2637: {
  3650                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  3651  0E4F  3004               	movlw	4
  3652  0E50                     L3:	
  3653  0E50  00F4               	movwf	??_USBCtrlTrfInHandler
  3654  0E51  0874               	movf	??_USBCtrlTrfInHandler,w
  3655  0E52  0022               	movlb	2	; select bank2
  3656  0E53  00E6               	movwf	_USBDeviceState^(0+256)
  3657  0E54                     l676:	
  3658                           
  3659                           ;usb_device.c: 2639: }
  3660                           ;usb_device.c: 2640: }
  3661                           ;usb_device.c: 2643: if(controlTransferState == 1)
  3662  0E54  0868               	movf	_controlTransferState^(0+256),w
  3663  0E55  3A01               	xorlw	1
  3664  0E56  1D03               	skipz
  3665  0E57  2E96               	goto	l679
  3666                           
  3667                           ;usb_device.c: 2644: {
  3668                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  3669  0E58  3058               	movlw	88
  3670  0E59  00F4               	movwf	??_USBCtrlTrfInHandler
  3671  0E5A  3000               	movlw	0
  3672  0E5B  00F5               	movwf	??_USBCtrlTrfInHandler+1
  3673  0E5C  0860               	movf	_pBDTEntryIn^(0+256),w
  3674  0E5D  3E02               	addlw	2
  3675  0E5E  0086               	movwf	6
  3676  0E5F  0187               	clrf	7
  3677  0E60  0874               	movf	??_USBCtrlTrfInHandler,w
  3678  0E61  3FC0               	movwi [0]fsr1
  3679  0E62  0875               	movf	??_USBCtrlTrfInHandler+1,w
  3680  0E63  3FC1               	movwi [1]fsr1
  3681                           
  3682                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  3683  0E64  318E  26A4  318E   	fcall	_USBCtrlTrfTxService
  3684                           
  3685                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  3686  0E67  0023               	movlb	3	; select bank3
  3687  0E68  0855               	movf	_shortPacketStatus^(0+384),w
  3688  0E69  3A02               	xorlw	2
  3689  0E6A  1D03               	skipz
  3690  0E6B  2E79               	goto	l4155
  3691                           
  3692                           ;usb_device.c: 2653: {
  3693                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  3694  0E6C  3004               	movlw	4
  3695  0E6D  00F4               	movwf	??_USBCtrlTrfInHandler
  3696  0E6E  0022               	movlb	2	; select bank2
  3697  0E6F  0860               	movf	_pBDTEntryIn^(0+256),w
  3698  0E70  0086               	movwf	6
  3699  0E71  0187               	clrf	7
  3700  0E72  0874               	movf	??_USBCtrlTrfInHandler,w
  3701  0E73  0081               	movwf	1
  3702                           
  3703                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3704  0E74  0860               	movf	_pBDTEntryIn^(0+256),w
  3705  0E75  0086               	movwf	6
  3706  0E76  0187               	clrf	7
  3707  0E77  1781               	bsf	1,7
  3708                           
  3709                           ;usb_device.c: 2658: }
  3710  0E78  0008               	return
  3711  0E79                     l4155:	
  3712                           
  3713                           ;usb_device.c: 2659: else
  3714                           ;usb_device.c: 2660: {
  3715                           ;usb_device.c: 2661: if(lastDTS == 0)
  3716  0E79  08F6               	movf	USBCtrlTrfInHandler@lastDTS,f
  3717  0E7A  1D03               	skipz
  3718  0E7B  2E89               	goto	l4159
  3719                           
  3720                           ;usb_device.c: 2662: {
  3721                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3722  0E7C  3048               	movlw	72
  3723  0E7D  00F4               	movwf	??_USBCtrlTrfInHandler
  3724  0E7E  0022               	movlb	2	; select bank2
  3725  0E7F  0860               	movf	_pBDTEntryIn^(0+256),w
  3726  0E80  0086               	movwf	6
  3727  0E81  0187               	clrf	7
  3728  0E82  0874               	movf	??_USBCtrlTrfInHandler,w
  3729  0E83  0081               	movwf	1
  3730                           
  3731                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3732  0E84  0860               	movf	_pBDTEntryIn^(0+256),w
  3733  0E85  0086               	movwf	6
  3734  0E86  0187               	clrf	7
  3735  0E87  1781               	bsf	1,7
  3736                           
  3737                           ;usb_device.c: 2665: }
  3738  0E88  0008               	return
  3739  0E89                     l4159:	
  3740                           
  3741                           ;usb_device.c: 2666: else
  3742                           ;usb_device.c: 2667: {
  3743                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  3744  0E89  3008               	movlw	8
  3745  0E8A  00F4               	movwf	??_USBCtrlTrfInHandler
  3746  0E8B  0022               	movlb	2	; select bank2
  3747  0E8C  0860               	movf	_pBDTEntryIn^(0+256),w
  3748  0E8D  0086               	movwf	6
  3749  0E8E  0187               	clrf	7
  3750  0E8F  0874               	movf	??_USBCtrlTrfInHandler,w
  3751  0E90  0081               	movwf	1
  3752                           
  3753                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3754  0E91  0860               	movf	_pBDTEntryIn^(0+256),w
  3755  0E92  0086               	movwf	6
  3756  0E93  0187               	clrf	7
  3757  0E94  1781               	bsf	1,7
  3758                           
  3759                           ;usb_device.c: 2670: }
  3760                           ;usb_device.c: 2671: }
  3761                           ;usb_device.c: 2672: }
  3762  0E95  0008               	return
  3763  0E96                     l679:	
  3764                           
  3765                           ;usb_device.c: 2673: else
  3766                           ;usb_device.c: 2674: {
  3767                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  3768  0E96  0023               	movlb	3	; select bank3
  3769  0E97  1FA2               	btfss	(_outPipes^(0+384)+2),7
  3770  0E98  2EA1               	goto	l4167
  3771                           
  3772                           ;usb_device.c: 2679: {
  3773                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  3774  0E99  0825               	movf	(_outPipes+5)^(0+384),w
  3775  0E9A  1903               	btfsc	3,2
  3776  0E9B  2E9F               	goto	l4165
  3777                           
  3778                           ;usb_device.c: 2681: {
  3779                           ;usb_device.c: 2682: outPipes[0].pFunc();
  3780  0E9C  0825               	movf	(_outPipes+5)^(0+384),w
  3781  0E9D  318E  2E35         	ljmp	$	;if you get stuck here, you called an invalid pointer
  3782  0E9F                     l4165:	
  3783                           
  3784                           ;usb_device.c: 2683: }
  3785                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  3786  0E9F  0023               	movlb	3	; select bank3
  3787  0EA0  13A2               	bcf	(_outPipes^(0+384)+2),7
  3788  0EA1                     l4167:	
  3789                           
  3790                           ;usb_device.c: 2685: }
  3791                           ;usb_device.c: 2687: controlTransferState = 0;
  3792  0EA1  0022               	movlb	2	; select bank2
  3793  0EA2  01E8               	clrf	_controlTransferState^(0+256)
  3794  0EA3  0008               	return
  3795  0EA4                     __end_of_USBCtrlTrfInHandler:	
  3796                           
  3797                           	psect	text4
  3798  0A1A                     __ptext4:	
  3799 ;; *************** function _USBCtrlTrfOutHandler *****************
  3800 ;; Defined at:
  3801 ;;		line 2564 in file "../framework/usb/usb_device.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;		None               void
  3808 ;; Registers used:
  3809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    3
  3822 ;; This function calls:
  3823 ;;		_USBCtrlTrfRxService
  3824 ;; This function is called by:
  3825 ;;		_USBCtrlEPService
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function _USBCtrlTrfOutHandler
  3831  0A1A                     _USBCtrlTrfOutHandler:	
  3832                           
  3833                           ;usb_device.c: 2565: if(controlTransferState == 2)
  3834                           
  3835                           ;incstack = 0
  3836                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3837  0A1A  0022               	movlb	2	; select bank2
  3838  0A1B  0868               	movf	_controlTransferState^(0+256),w
  3839  0A1C  3A02               	xorlw	2
  3840  0A1D  1D03               	skipz
  3841  0A1E  2A22               	goto	l4125
  3842                           
  3843                           ;usb_device.c: 2566: {
  3844                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  3845  0A1F  3186  262C         	fcall	_USBCtrlTrfRxService
  3846                           
  3847                           ;usb_device.c: 2568: }
  3848  0A21  0008               	return
  3849  0A22                     l4125:	
  3850                           
  3851                           ;usb_device.c: 2569: else
  3852                           ;usb_device.c: 2570: {
  3853                           ;usb_device.c: 2573: controlTransferState = 0;
  3854  0A22  0022               	movlb	2	; select bank2
  3855  0A23  01E8               	clrf	_controlTransferState^(0+256)
  3856                           
  3857                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  3858  0A24  0023               	movlb	3	; select bank3
  3859  0A25  08C1               	movf	_BothEP0OutUOWNsSet^(0+384),f
  3860  0A26  1D03               	skipz
  3861  0A27  2A47               	goto	l4131
  3862                           
  3863                           ;usb_device.c: 2581: {
  3864                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  3865  0A28  3008               	movlw	8
  3866  0A29  00F7               	movwf	??_USBCtrlTrfOutHandler
  3867  0A2A  0A7C               	incf	_pBDTEntryEP0OutNext,w
  3868  0A2B  0086               	movwf	6
  3869  0A2C  0187               	clrf	7
  3870  0A2D  0877               	movf	??_USBCtrlTrfOutHandler,w
  3871  0A2E  0081               	movwf	1
  3872                           
  3873                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3874  0A2F  3050               	movlw	80
  3875  0A30  00F7               	movwf	??_USBCtrlTrfOutHandler
  3876  0A31  3000               	movlw	0
  3877  0A32  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  3878  0A33  087C               	movf	_pBDTEntryEP0OutNext,w
  3879  0A34  3E02               	addlw	2
  3880  0A35  0086               	movwf	6
  3881  0A36  0187               	clrf	7
  3882  0A37  0877               	movf	??_USBCtrlTrfOutHandler,w
  3883  0A38  3FC0               	movwi [0]fsr1
  3884  0A39  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  3885  0A3A  3FC1               	movwi [1]fsr1
  3886                           
  3887                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3888  0A3B  300C               	movlw	12
  3889  0A3C  00F7               	movwf	??_USBCtrlTrfOutHandler
  3890  0A3D  087C               	movf	_pBDTEntryEP0OutNext,w
  3891  0A3E  0086               	movwf	6
  3892  0A3F  0187               	clrf	7
  3893  0A40  0877               	movf	??_USBCtrlTrfOutHandler,w
  3894  0A41  0081               	movwf	1
  3895                           
  3896                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3897  0A42  087C               	movf	_pBDTEntryEP0OutNext,w
  3898  0A43  0086               	movwf	6
  3899  0A44  0187               	clrf	7
  3900  0A45  1781               	bsf	1,7
  3901                           
  3902                           ;usb_device.c: 2586: }
  3903  0A46  0008               	return
  3904  0A47                     l4131:	
  3905                           
  3906                           ;usb_device.c: 2587: else
  3907                           ;usb_device.c: 2588: {
  3908                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  3909  0A47  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)
  3910  0A48  0008               	return
  3911  0A49                     __end_of_USBCtrlTrfOutHandler:	
  3912                           
  3913                           	psect	text5
  3914  062C                     __ptext5:	
  3915 ;; *************** function _USBCtrlTrfRxService *****************
  3916 ;; Defined at:
  3917 ;;		line 1872 in file "../framework/usb/usb_device.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  byteToRead      1    6[COMMON] unsigned char 
  3922 ;;  i               1    5[COMMON] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		_USBCtrlEPAllowStatusStage
  3941 ;;		Absolute function
  3942 ;; This function is called by:
  3943 ;;		_USBCtrlTrfOutHandler
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _USBCtrlTrfRxService
  3949  062C                     _USBCtrlTrfRxService:	
  3950                           
  3951                           ;usb_device.c: 1873: uint8_t byteToRead;
  3952                           ;usb_device.c: 1874: uint8_t i;
  3953                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3957  062C  0021               	movlb	1	; select bank1
  3958  062D  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  3959  062E  0086               	movwf	6
  3960  062F  0187               	clrf	7
  3961  0630  3F41               	moviw [1]fsr1
  3962  0631  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  3963                           
  3964                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  3965  0632  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  3966  0633  00F3               	movwf	??_USBCtrlTrfRxService
  3967  0634  01F4               	clrf	??_USBCtrlTrfRxService+1
  3968  0635  0874               	movf	??_USBCtrlTrfRxService+1,w
  3969  0636  0023               	movlb	3	; select bank3
  3970  0637  0224               	subwf	((_outPipes+1)^(0+384)+3),w
  3971  0638  1D03               	skipz
  3972  0639  2E3C               	goto	u3315
  3973  063A  0873               	movf	??_USBCtrlTrfRxService,w
  3974  063B  0223               	subwf	(_outPipes^(0+384)+3),w
  3975  063C                     u3315:	
  3976  063C  1803               	skipnc
  3977  063D  2E42               	goto	l592
  3978                           
  3979                           ;usb_device.c: 1885: {
  3980                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  3981  063E  0823               	movf	(_outPipes^(0+384)+3),w
  3982  063F  00F3               	movwf	??_USBCtrlTrfRxService
  3983  0640  0873               	movf	??_USBCtrlTrfRxService,w
  3984  0641  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  3985  0642                     l592:	
  3986                           
  3987                           ;usb_device.c: 1887: }
  3988                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  3989  0642  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  3990  0643  00F3               	movwf	??_USBCtrlTrfRxService
  3991  0644  01F4               	clrf	??_USBCtrlTrfRxService+1
  3992  0645  0873               	movf	??_USBCtrlTrfRxService,w
  3993  0646  02A3               	subwf	(_outPipes^(0+384)+3),f
  3994  0647  0874               	movf	??_USBCtrlTrfRxService+1,w
  3995  0648  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f
  3996                           
  3997                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  3998  0649  01F5               	clrf	USBCtrlTrfRxService@i
  3999  064A                     l3953:	
  4000  064A  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  4001  064B  0275               	subwf	USBCtrlTrfRxService@i,w
  4002  064C  1803               	btfsc	3,0
  4003  064D  2E63               	goto	l3955
  4004                           
  4005                           ;usb_device.c: 1894: {
  4006                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  4007  064E  0875               	movf	USBCtrlTrfRxService@i,w
  4008  064F  3E58               	addlw	88
  4009  0650  0086               	movwf	6
  4010  0651  0187               	clrf	7
  4011  0652  0801               	movf	1,w
  4012  0653  00F3               	movwf	??_USBCtrlTrfRxService
  4013  0654  0820               	movf	_outPipes^(0+384),w
  4014  0655  0086               	movwf	6
  4015  0656  3001               	movlw	1	; select bank2/3
  4016  0657  0087               	movwf	7
  4017  0658  0873               	movf	??_USBCtrlTrfRxService,w
  4018  0659  0081               	movwf	1
  4019  065A  3001               	movlw	1
  4020  065B  00F3               	movwf	??_USBCtrlTrfRxService
  4021  065C  0873               	movf	??_USBCtrlTrfRxService,w
  4022  065D  07A0               	addwf	_outPipes^(0+384),f
  4023  065E  3001               	movlw	1
  4024  065F  00F3               	movwf	??_USBCtrlTrfRxService
  4025  0660  0873               	movf	??_USBCtrlTrfRxService,w
  4026  0661  07F5               	addwf	USBCtrlTrfRxService@i,f
  4027  0662  2E4A               	goto	l3953
  4028  0663                     l3955:	
  4029                           
  4030                           ;usb_device.c: 1896: }
  4031                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  4032  0663  3003               	movlw	3
  4033  0664  3EA0               	addlw	_outPipes& (0+255)
  4034  0665  0086               	movwf	6
  4035  0666  3001               	movlw	1	; select bank3/4
  4036  0667  0087               	movwf	7
  4037  0668  0016               	moviw fsr1++
  4038  0669  0401               	iorwf	1,w
  4039  066A  1903               	skipnz
  4040  066B  2E9D               	goto	l3963
  4041                           
  4042                           ;usb_device.c: 1901: {
  4043                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  4044  066C  3008               	movlw	8
  4045  066D  00F3               	movwf	??_USBCtrlTrfRxService
  4046  066E  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4047  066F  0086               	movwf	6
  4048  0670  0187               	clrf	7
  4049  0671  0873               	movf	??_USBCtrlTrfRxService,w
  4050  0672  0081               	movwf	1
  4051                           
  4052                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4053  0673  3058               	movlw	88
  4054  0674  00F3               	movwf	??_USBCtrlTrfRxService
  4055  0675  3000               	movlw	0
  4056  0676  00F4               	movwf	??_USBCtrlTrfRxService+1
  4057  0677  087C               	movf	_pBDTEntryEP0OutNext,w
  4058  0678  3E02               	addlw	2
  4059  0679  0086               	movwf	6
  4060  067A  0187               	clrf	7
  4061  067B  0873               	movf	??_USBCtrlTrfRxService,w
  4062  067C  3FC0               	movwi [0]fsr1
  4063  067D  0874               	movf	??_USBCtrlTrfRxService+1,w
  4064  067E  3FC1               	movwi [1]fsr1
  4065                           
  4066                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  4067  067F  0021               	movlb	1	; select bank1
  4068  0680  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4069  0681  0086               	movwf	6
  4070  0682  0187               	clrf	7
  4071  0683  1B01               	btfsc	1,6
  4072  0684  2E91               	goto	l3961
  4073                           
  4074                           ;usb_device.c: 1905: {
  4075                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  4076  0685  3048               	movlw	72
  4077  0686  00F3               	movwf	??_USBCtrlTrfRxService
  4078  0687  087C               	movf	_pBDTEntryEP0OutNext,w
  4079  0688  0086               	movwf	6
  4080  0689  0187               	clrf	7
  4081  068A  0873               	movf	??_USBCtrlTrfRxService,w
  4082  068B  0081               	movwf	1
  4083                           
  4084                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4085  068C  087C               	movf	_pBDTEntryEP0OutNext,w
  4086  068D  0086               	movwf	6
  4087  068E  0187               	clrf	7
  4088  068F  1781               	bsf	1,7
  4089                           
  4090                           ;usb_device.c: 1908: }
  4091  0690  0008               	return
  4092  0691                     l3961:	
  4093                           
  4094                           ;usb_device.c: 1909: else
  4095                           ;usb_device.c: 1910: {
  4096                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  4097  0691  3008               	movlw	8
  4098  0692  00F3               	movwf	??_USBCtrlTrfRxService
  4099  0693  087C               	movf	_pBDTEntryEP0OutNext,w
  4100  0694  0086               	movwf	6
  4101  0695  0187               	clrf	7
  4102  0696  0873               	movf	??_USBCtrlTrfRxService,w
  4103  0697  0081               	movwf	1
  4104                           
  4105                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4106  0698  087C               	movf	_pBDTEntryEP0OutNext,w
  4107  0699  0086               	movwf	6
  4108  069A  0187               	clrf	7
  4109  069B  1781               	bsf	1,7
  4110                           
  4111                           ;usb_device.c: 1913: }
  4112                           ;usb_device.c: 1914: }
  4113  069C  0008               	return
  4114  069D                     l3963:	
  4115                           
  4116                           ;usb_device.c: 1915: else
  4117                           ;usb_device.c: 1916: {
  4118                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  4119  069D  3008               	movlw	8
  4120  069E  00F3               	movwf	??_USBCtrlTrfRxService
  4121  069F  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4122  06A0  0086               	movwf	6
  4123  06A1  0187               	clrf	7
  4124  06A2  0873               	movf	??_USBCtrlTrfRxService,w
  4125  06A3  0081               	movwf	1
  4126                           
  4127                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4128  06A4  3050               	movlw	80
  4129  06A5  00F3               	movwf	??_USBCtrlTrfRxService
  4130  06A6  3000               	movlw	0
  4131  06A7  00F4               	movwf	??_USBCtrlTrfRxService+1
  4132  06A8  087C               	movf	_pBDTEntryEP0OutNext,w
  4133  06A9  3E02               	addlw	2
  4134  06AA  0086               	movwf	6
  4135  06AB  0187               	clrf	7
  4136  06AC  0873               	movf	??_USBCtrlTrfRxService,w
  4137  06AD  3FC0               	movwi [0]fsr1
  4138  06AE  0874               	movf	??_USBCtrlTrfRxService+1,w
  4139  06AF  3FC1               	movwi [1]fsr1
  4140                           
  4141                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4142  06B0  3004               	movlw	4
  4143  06B1  00F3               	movwf	??_USBCtrlTrfRxService
  4144  06B2  087C               	movf	_pBDTEntryEP0OutNext,w
  4145  06B3  0086               	movwf	6
  4146  06B4  0187               	clrf	7
  4147  06B5  0873               	movf	??_USBCtrlTrfRxService,w
  4148  06B6  0081               	movwf	1
  4149                           
  4150                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4151  06B7  087C               	movf	_pBDTEntryEP0OutNext,w
  4152  06B8  0086               	movwf	6
  4153  06B9  0187               	clrf	7
  4154  06BA  1781               	bsf	1,7
  4155                           
  4156                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  4157  06BB  0023               	movlb	3	; select bank3
  4158  06BC  0825               	movf	(_outPipes+5)^(0+384),w
  4159  06BD  1903               	btfsc	3,2
  4160  06BE  2EC2               	goto	l3969
  4161                           
  4162                           ;usb_device.c: 1934: {
  4163                           ;usb_device.c: 1940: outPipes[0].pFunc();
  4164  06BF  0825               	movf	(_outPipes+5)^(0+384),w
  4165  06C0  3186  2E2C         	ljmp	$	;if you get stuck here, you called an invalid pointer
  4166  06C2                     l3969:	
  4167                           
  4168                           ;usb_device.c: 1945: }
  4169                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  4170  06C2  0023               	movlb	3	; select bank3
  4171  06C3  13A2               	bcf	(_outPipes^(0+384)+2),7
  4172                           
  4173                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  4174  06C4  0022               	movlb	2	; select bank2
  4175  06C5  08E5               	movf	_USBDeferStatusStagePacket^(0+256),f
  4176  06C6  1D03               	skipz
  4177  06C7  0008               	return
  4178                           
  4179                           ;usb_device.c: 1961: {
  4180                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  4181  06C8  318D  25CE         	fcall	_USBCtrlEPAllowStatusStage
  4182  06CA  0008               	return
  4183  06CB                     __end_of_USBCtrlTrfRxService:	
  4184                           
  4185                           	psect	text6
  4186  0BC6                     __ptext6:	
  4187 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4188 ;; Defined at:
  4189 ;;		line 2492 in file "../framework/usb/usb_device.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    8
  4210 ;; This function calls:
  4211 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4212 ;;		_USBCtrlEPServiceComplete
  4213 ;;		_USBCheckStdRequest
  4214 ;; This function is called by:
  4215 ;;		_USBCtrlEPService
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _USBCtrlTrfSetupHandler
  4221  0BC6                     _USBCtrlTrfSetupHandler:	
  4222                           
  4223                           ;usb_device.c: 2496: shortPacketStatus = 0;
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  4227  0BC6  0023               	movlb	3	; select bank3
  4228  0BC7  01D5               	clrf	_shortPacketStatus^(0+384)
  4229                           
  4230                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  4231  0BC8  0022               	movlb	2	; select bank2
  4232  0BC9  01E5               	clrf	_USBDeferStatusStagePacket^(0+256)	;volatile
  4233                           
  4234                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  4235  0BCA  0023               	movlb	3	; select bank3
  4236  0BCB  01C5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4237                           
  4238                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  4239  0BCC  01C6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4240                           
  4241                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  4242  0BCD  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)
  4243                           
  4244                           ;usb_device.c: 2501: controlTransferState = 0;
  4245  0BCE  0022               	movlb	2	; select bank2
  4246  0BCF  01E8               	clrf	_controlTransferState^(0+256)
  4247                           
  4248                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4249  0BD0  307F               	movlw	127
  4250  0BD1  0021               	movlb	1	; select bank1
  4251  0BD2  00E5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4252  0BD3  0022               	movlb	2	; select bank2
  4253  0BD4  0860               	movf	_pBDTEntryIn^(0+256),w
  4254  0BD5  0086               	movwf	6
  4255  0BD6  0187               	clrf	7
  4256  0BD7  0021               	movlb	1	; select bank1
  4257  0BD8  0865               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4258  0BD9  0581               	andwf	1,f
  4259                           
  4260                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4261  0BDA  3004               	movlw	4
  4262  0BDB  00E5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4263  0BDC  0865               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4264  0BDD  0022               	movlb	2	; select bank2
  4265  0BDE  06E0               	xorwf	_pBDTEntryIn^(0+256),f
  4266                           
  4267                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4268  0BDF  307F               	movlw	127
  4269  0BE0  0021               	movlb	1	; select bank1
  4270  0BE1  00E5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4271  0BE2  0022               	movlb	2	; select bank2
  4272  0BE3  0860               	movf	_pBDTEntryIn^(0+256),w
  4273  0BE4  0086               	movwf	6
  4274  0BE5  0187               	clrf	7
  4275  0BE6  0021               	movlb	1	; select bank1
  4276  0BE7  0865               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4277  0BE8  0581               	andwf	1,f
  4278                           
  4279                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4280  0BE9  3004               	movlw	4
  4281  0BEA  00E5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4282  0BEB  0865               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4283  0BEC  0022               	movlb	2	; select bank2
  4284  0BED  06E0               	xorwf	_pBDTEntryIn^(0+256),f
  4285                           
  4286                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4287  0BEE  307F               	movlw	127
  4288  0BEF  0021               	movlb	1	; select bank1
  4289  0BF0  00E5               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4290  0BF1  087C               	movf	_pBDTEntryEP0OutNext,w
  4291  0BF2  0086               	movwf	6
  4292  0BF3  0187               	clrf	7
  4293  0BF4  0865               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4294  0BF5  0581               	andwf	1,f
  4295                           
  4296                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  4297  0BF6  0022               	movlb	2	; select bank2
  4298  0BF7  01EC               	clrf	(_inPipes^(0+256)+2)
  4299                           
  4300                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  4301  0BF8  01ED               	clrf	(_inPipes^(0+256)+3)
  4302  0BF9  01EE               	clrf	((_inPipes+1)^(0+256)+3)
  4303                           
  4304                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  4305  0BFA  0023               	movlb	3	; select bank3
  4306  0BFB  01A2               	clrf	(_outPipes^(0+384)+2)
  4307                           
  4308                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  4309  0BFC  01A3               	clrf	(_outPipes^(0+384)+3)
  4310  0BFD  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  4311                           
  4312                           ;usb_device.c: 2525: USBCheckStdRequest();
  4313  0BFE  318D  250D  318B   	fcall	_USBCheckStdRequest
  4314                           
  4315                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4316  0C01  3003               	movlw	3
  4317  0C02  0020               	movlb	0	; select bank0
  4318  0C03  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4319  0C04  3000               	movlw	0
  4320  0C05  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4321  0C06  3000               	movlw	0
  4322  0C07  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4323  0C08  3000               	movlw	0
  4324  0C09  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4325  0C0A  3000               	movlw	0
  4326  0C0B  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4327  0C0C  3000               	movlw	0
  4328  0C0D  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4329  0C0E  318A  227F  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4330                           
  4331                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  4332  0C11  3182  2234         	fcall	_USBCtrlEPServiceComplete
  4333  0C13  0008               	return
  4334  0C14                     __end_of_USBCtrlTrfSetupHandler:	
  4335                           
  4336                           	psect	text7
  4337  0D0D                     __ptext7:	
  4338 ;; *************** function _USBCheckStdRequest *****************
  4339 ;; Defined at:
  4340 ;;		line 2712 in file "../framework/usb/usb_device.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;		None               void
  4347 ;; Registers used:
  4348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;Total ram usage:        1 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    7
  4361 ;; This function calls:
  4362 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4363 ;;		_USBStdSetCfgHandler
  4364 ;;		_USBStdGetDscHandler
  4365 ;;		_USBStdGetStatusHandler
  4366 ;;		_USBStdFeatureReqHandler
  4367 ;; This function is called by:
  4368 ;;		_USBCtrlTrfSetupHandler
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _USBCheckStdRequest
  4374  0D0D                     _USBCheckStdRequest:	
  4375                           
  4376                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in _USBCheckStdRequest: [allreg]
  4380  0D0D  0020               	movlb	0	; select bank0
  4381  0D0E  0E50               	swapf	80,w	;volatile
  4382  0D0F  0C89               	rrf	9,f
  4383  0D10  3903               	andlw	3
  4384  0D11  3A00               	xorlw	0
  4385  0D12  1D03               	btfss	3,2
  4386  0D13  0008               	return
  4387  0D14  2D60               	goto	l5199
  4388  0D15                     l693:	
  4389                           ;usb_device.c: 2716: {
  4390                           ;usb_device.c: 2717: case 5:
  4391                           
  4392                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  4393                           
  4394                           
  4395                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  4396  0D15  0022               	movlb	2	; select bank2
  4397  0D16  17EC               	bsf	(_inPipes^(0+256)+2),7
  4398                           
  4399                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  4400  0D17  3008               	movlw	8
  4401  0D18  0021               	movlb	1	; select bank1
  4402  0D19  00E4               	movwf	??_USBCheckStdRequest^(0+128)
  4403  0D1A  0864               	movf	??_USBCheckStdRequest^(0+128),w
  4404  0D1B  0022               	movlb	2	; select bank2
  4405  0D1C  00E6               	movwf	_USBDeviceState^(0+256)
  4406                           
  4407                           ;usb_device.c: 2721: break;
  4408  0D1D  0008               	return
  4409  0D1E                     l5169:	
  4410                           ;usb_device.c: 2722: case 6:
  4411                           
  4412                           
  4413                           ;usb_device.c: 2723: USBStdGetDscHandler();
  4414  0D1E  318F  2787         	fcall	_USBStdGetDscHandler
  4415                           
  4416                           ;usb_device.c: 2724: break;
  4417  0D20  0008               	return
  4418  0D21                     l5171:	
  4419                           ;usb_device.c: 2725: case 9:
  4420                           
  4421                           
  4422                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  4423  0D21  3186  26CB         	fcall	_USBStdSetCfgHandler
  4424                           
  4425                           ;usb_device.c: 2727: break;
  4426  0D23  0008               	return
  4427  0D24                     l5173:	
  4428                           ;usb_device.c: 2728: case 8:
  4429                           
  4430                           
  4431                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4432  0D24  30EA               	movlw	low _USBActiveConfiguration
  4433  0D25  0022               	movlb	2	; select bank2
  4434  0D26  00EA               	movwf	_inPipes^(0+256)
  4435  0D27  3001               	movlw	high _USBActiveConfiguration
  4436  0D28  00EB               	movwf	(_inPipes+1)^(0+256)
  4437                           
  4438                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4439  0D29  146C               	bsf	(_inPipes^(0+256)+2),0
  4440                           
  4441                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  4442  0D2A  01ED               	clrf	(_inPipes^(0+256)+3)
  4443  0D2B  0AED               	incf	(_inPipes^(0+256)+3),f
  4444                           
  4445                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  4446  0D2C  17EC               	bsf	(_inPipes^(0+256)+2),7
  4447                           
  4448                           ;usb_device.c: 2733: break;
  4449  0D2D  0008               	return
  4450  0D2E                     l5181:	
  4451                           ;usb_device.c: 2734: case 0:
  4452                           
  4453                           
  4454                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  4455  0D2E  318B  2379         	fcall	_USBStdGetStatusHandler
  4456                           
  4457                           ;usb_device.c: 2736: break;
  4458  0D30  0008               	return
  4459  0D31                     l5183:	
  4460                           ;usb_device.c: 2737: case 1:
  4461                           
  4462                           
  4463                           ;usb_device.c: 2738: case 3:
  4464                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  4465  0D31  3180  200D         	fcall	_USBStdFeatureReqHandler
  4466                           
  4467                           ;usb_device.c: 2740: break;
  4468  0D33  0008               	return
  4469  0D34                     l5185:	
  4470                           ;usb_device.c: 2741: case 10:
  4471                           
  4472                           
  4473                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4474  0D34  0020               	movlb	0	; select bank0
  4475  0D35  0854               	movf	84,w	;volatile
  4476  0D36  3EE8               	addlw	_USBAlternateInterface& (0+255)
  4477  0D37  0022               	movlb	2	; select bank2
  4478  0D38  00EA               	movwf	_inPipes^(0+256)
  4479  0D39  3001               	movlw	1
  4480  0D3A  00EB               	movwf	(_inPipes+1)^(0+256)
  4481                           
  4482                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4483  0D3B  146C               	bsf	(_inPipes^(0+256)+2),0
  4484                           
  4485                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  4486  0D3C  01ED               	clrf	(_inPipes^(0+256)+3)
  4487  0D3D  0AED               	incf	(_inPipes^(0+256)+3),f
  4488                           
  4489                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  4490  0D3E  17EC               	bsf	(_inPipes^(0+256)+2),7
  4491                           
  4492                           ;usb_device.c: 2746: break;
  4493  0D3F  0008               	return
  4494  0D40                     l702:	
  4495                           ;usb_device.c: 2747: case 11:
  4496                           
  4497                           
  4498                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  4499  0D40  0022               	movlb	2	; select bank2
  4500  0D41  17EC               	bsf	(_inPipes^(0+256)+2),7
  4501                           
  4502                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4503  0D42  0020               	movlb	0	; select bank0
  4504  0D43  0852               	movf	82,w	;volatile
  4505  0D44  0021               	movlb	1	; select bank1
  4506  0D45  00E4               	movwf	??_USBCheckStdRequest^(0+128)
  4507  0D46  0020               	movlb	0	; select bank0
  4508  0D47  0854               	movf	84,w	;volatile
  4509  0D48  3EE8               	addlw	_USBAlternateInterface& (0+255)
  4510  0D49  0086               	movwf	6
  4511  0D4A  3001               	movlw	1	; select bank3/4
  4512  0D4B  0087               	movwf	7
  4513  0D4C  0021               	movlb	1	; select bank1
  4514  0D4D  0864               	movf	??_USBCheckStdRequest^(0+128),w
  4515  0D4E  0081               	movwf	1
  4516                           
  4517                           ;usb_device.c: 2750: break;
  4518  0D4F  0008               	return
  4519  0D50                     l5195:	
  4520                           ;usb_device.c: 2751: case 7:
  4521                           
  4522                           
  4523                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4524  0D50  3002               	movlw	2
  4525  0D51  0020               	movlb	0	; select bank0
  4526  0D52  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4527  0D53  3000               	movlw	0
  4528  0D54  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4529  0D55  3000               	movlw	0
  4530  0D56  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4531  0D57  3000               	movlw	0
  4532  0D58  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4533  0D59  3000               	movlw	0
  4534  0D5A  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4535  0D5B  3000               	movlw	0
  4536  0D5C  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4537  0D5D  318A  227F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4538                           
  4539                           ;usb_device.c: 2757: }
  4540                           
  4541                           ;usb_device.c: 2756: break;
  4542                           
  4543                           ;usb_device.c: 2755: default:
  4544                           
  4545                           ;usb_device.c: 2754: case 12:
  4546                           
  4547                           ;usb_device.c: 2753: break;
  4548  0D5F  0008               	return
  4549  0D60                     l5199:	
  4550  0D60  0020               	movlb	0	; select bank0
  4551  0D61  0851               	movf	81,w	;volatile
  4552                           
  4553                           ; Switch size 1, requested type "space"
  4554                           ; Number of cases is 11, Range of values is 0 to 12
  4555                           ; switch strategies available:
  4556                           ; Name         Instructions Cycles
  4557                           ; direct_byte           32     6 (fixed)
  4558                           ; simple_byte           34    18 (average)
  4559                           ; jumptable            260     6 (fixed)
  4560                           ; rangetable            17     4 (fixed)
  4561                           ; spacedrange           31     6 (fixed)
  4562                           ; locatedrange          13     3 (fixed)
  4563                           ;	Chosen strategy is direct_byte
  4564  0D62  0084               	movwf	4
  4565  0D63  300D               	movlw	13
  4566  0D64  0204               	subwf	4,w
  4567  0D65  1803               	skipnc
  4568  0D66  0008               	return
  4569  0D67  3188               	movlp	high S5457
  4570  0D68  3504               	lslf	4,w
  4571  0D69  3E00               	addlw	low S5457
  4572  0D6A  0082               	movwf	2
  4573  0D6B                     l691:	
  4574  0D6B  0008               	return
  4575  0D6C                     __end_of_USBCheckStdRequest:	
  4576                           
  4577                           	psect	swtext1
  4578  0800                     __pswtext1:	
  4579  0800                     S5457:	
  4580  0800  318D  2D2E         	ljmp	l5181
  4581  0802  318D  2D31         	ljmp	l5183
  4582  0804  318D  2D6B         	ljmp	l691
  4583  0806  318D  2D31         	ljmp	l5183
  4584  0808  318D  2D6B         	ljmp	l691
  4585  080A  318D  2D15         	ljmp	l693
  4586  080C  318D  2D1E         	ljmp	l5169
  4587  080E  318D  2D50         	ljmp	l5195
  4588  0810  318D  2D24         	ljmp	l5173
  4589  0812  318D  2D21         	ljmp	l5171
  4590  0814  318D  2D34         	ljmp	l5185
  4591  0816  318D  2D40         	ljmp	l702
  4592  0818  318D  2D6B         	ljmp	l691
  4593                           
  4594                           	psect	text8
  4595  000D                     __ptext8:	
  4596 ;; *************** function _USBStdFeatureReqHandler *****************
  4597 ;; Defined at:
  4598 ;;		line 2780 in file "../framework/usb/usb_device.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  pUEP            2    0[BANK1 ] PTR unsigned char 
  4603 ;;		 -> UEP0(1), 
  4604 ;;  p               1    3[BANK1 ] PTR struct __BDT
  4605 ;;		 -> NULL(0), BDT(48), 
  4606 ;;  current_ep_d    1    2[BANK1 ] struct .
  4607 ;; Return value:  Size  Location     Type
  4608 ;;		None               void
  4609 ;; Registers used:
  4610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;Total ram usage:        6 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    6
  4623 ;; This function calls:
  4624 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4625 ;; This function is called by:
  4626 ;;		_USBCheckStdRequest
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function _USBStdFeatureReqHandler
  4632  000D                     _USBStdFeatureReqHandler:	
  4633                           
  4634                           ;usb_device.c: 2781: BDT_ENTRY *p;
  4635                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  4636                           ;usb_device.c: 2786: unsigned char* pUEP;
  4637                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  4638                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  4642  000D  0020               	movlb	0	; select bank0
  4643  000E  0852               	movf	82,w	;volatile
  4644  000F  3A01               	xorlw	1
  4645  0010  1D03               	skipz
  4646  0011  2824               	goto	l5217
  4647  0012  0850               	movf	80,w	;volatile
  4648  0013  391F               	andlw	31
  4649  0014  3800               	iorlw	0
  4650  0015  1D03               	skipz
  4651  0016  2824               	goto	l5217
  4652                           
  4653                           ;usb_device.c: 2826: {
  4654                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  4655  0017  0022               	movlb	2	; select bank2
  4656  0018  17EC               	bsf	(_inPipes^(0+256)+2),7
  4657                           
  4658                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  4659  0019  0020               	movlb	0	; select bank0
  4660  001A  0851               	movf	81,w	;volatile
  4661  001B  3A03               	xorlw	3
  4662  001C  1D03               	skipz
  4663  001D  2822               	goto	l5215
  4664                           
  4665                           ;usb_device.c: 2829: RemoteWakeup = 1;
  4666  001E  0023               	movlb	3	; select bank3
  4667  001F  01C3               	clrf	_RemoteWakeup^(0+384)
  4668  0020  0AC3               	incf	_RemoteWakeup^(0+384),f
  4669  0021  2824               	goto	l5217
  4670  0022                     l5215:	
  4671                           
  4672                           ;usb_device.c: 2830: else
  4673                           ;usb_device.c: 2831: RemoteWakeup = 0;
  4674  0022  0023               	movlb	3	; select bank3
  4675  0023  01C3               	clrf	_RemoteWakeup^(0+384)
  4676  0024                     l5217:	
  4677                           
  4678                           ;usb_device.c: 2832: }
  4679                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  4680                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  4681                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  4682                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  4683  0024  0020               	movlb	0	; select bank0
  4684  0025  0852               	movf	82,w
  4685  0026  1D03               	skipz
  4686  0027  0008               	return
  4687  0028  0850               	movf	80,w	;volatile
  4688  0029  391F               	andlw	31
  4689  002A  3A02               	xorlw	2
  4690  002B  1D03               	skipz
  4691  002C  0008               	return
  4692  002D  0854               	movf	84,w	;volatile
  4693  002E  390F               	andlw	15
  4694  002F  3A00               	xorlw	0
  4695  0030  1903               	skipnz
  4696  0031  0008               	return
  4697  0032  0854               	movf	84,w	;volatile
  4698  0033  390F               	andlw	15
  4699  0034  00EB               	movwf	??_USBStdFeatureReqHandler
  4700  0035  3003               	movlw	3
  4701  0036  026B               	subwf	??_USBStdFeatureReqHandler,w
  4702  0037  1803               	skipnc
  4703  0038  0008               	return
  4704  0039  0022               	movlb	2	; select bank2
  4705  003A  0866               	movf	_USBDeviceState^(0+256),w
  4706  003B  3A20               	xorlw	32
  4707  003C  1D03               	skipz
  4708  003D  0008               	return
  4709                           
  4710                           ;usb_device.c: 2839: {
  4711                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  4712  003E  17EC               	bsf	(_inPipes^(0+256)+2),7
  4713                           
  4714                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  4715  003F  0020               	movlb	0	; select bank0
  4716  0040  1BD4               	btfsc	84,7	;volatile
  4717  0041  2852               	goto	l5231
  4718                           
  4719                           ;usb_device.c: 2846: {
  4720                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4721  0042  0854               	movf	84,w	;volatile
  4722  0043  390F               	andlw	15
  4723  0044  3EB4               	addlw	_pBDTEntryOut& (0+255)
  4724  0045  0086               	movwf	6
  4725  0046  3001               	movlw	1	; select bank3/4
  4726  0047  0087               	movwf	7
  4727  0048  0801               	movf	1,w
  4728  0049  00EB               	movwf	??_USBStdFeatureReqHandler
  4729  004A  086B               	movf	??_USBStdFeatureReqHandler,w
  4730  004B  0021               	movlb	1	; select bank1
  4731  004C  00E3               	movwf	USBStdFeatureReqHandler@p^(0+128)
  4732                           
  4733                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  4734  004D  0020               	movlb	0	; select bank0
  4735  004E  0854               	movf	84,w	;volatile
  4736  004F  390F               	andlw	15
  4737  0050  3EB1               	addlw	_ep_data_out& (0+255)
  4738  0051  2862               	goto	L4
  4739  0052                     l5231:	
  4740                           ;usb_device.c: 2849: }
  4741                           
  4742                           
  4743                           ;usb_device.c: 2850: else
  4744                           ;usb_device.c: 2851: {
  4745                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4746  0052  0020               	movlb	0	; select bank0
  4747  0053  0854               	movf	84,w	;volatile
  4748  0054  390F               	andlw	15
  4749  0055  3E60               	addlw	_pBDTEntryIn& (0+255)
  4750  0056  0086               	movwf	6
  4751  0057  3001               	movlw	1	; select bank2/3
  4752  0058  0087               	movwf	7
  4753  0059  0801               	movf	1,w
  4754  005A  00EB               	movwf	??_USBStdFeatureReqHandler
  4755  005B  086B               	movf	??_USBStdFeatureReqHandler,w
  4756  005C  0021               	movlb	1	; select bank1
  4757  005D  00E3               	movwf	USBStdFeatureReqHandler@p^(0+128)
  4758                           
  4759                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  4760  005E  0020               	movlb	0	; select bank0
  4761  005F  0854               	movf	84,w	;volatile
  4762  0060  390F               	andlw	15
  4763  0061  3EAE               	addlw	_ep_data_in& (0+255)
  4764  0062                     L4:	
  4765  0062  0086               	movwf	6
  4766  0063  3001               	movlw	1	; select bank3/4
  4767  0064  0087               	movwf	7
  4768  0065  0801               	movf	1,w
  4769  0066  00EB               	movwf	??_USBStdFeatureReqHandler
  4770  0067  086B               	movf	??_USBStdFeatureReqHandler,w
  4771  0068  0021               	movlb	1	; select bank1
  4772  0069  00E2               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
  4773                           
  4774                           ;usb_device.c: 2854: }
  4775                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  4776  006A  1862               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
  4777  006B  2873               	goto	l714
  4778                           
  4779                           ;usb_device.c: 2861: {
  4780                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  4781  006C  30FB               	movlw	251
  4782  006D  0020               	movlb	0	; select bank0
  4783  006E  00EB               	movwf	??_USBStdFeatureReqHandler
  4784  006F  086B               	movf	??_USBStdFeatureReqHandler,w
  4785  0070  0021               	movlb	1	; select bank1
  4786  0071  05E3               	andwf	USBStdFeatureReqHandler@p^(0+128),f
  4787                           
  4788                           ;usb_device.c: 2863: }
  4789  0072  2874               	goto	l715
  4790  0073                     l714:	
  4791                           
  4792                           ;usb_device.c: 2864: else
  4793                           ;usb_device.c: 2865: {
  4794                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  4795  0073  1563               	bsf	USBStdFeatureReqHandler@p^(0+128),2
  4796  0074                     l715:	
  4797                           
  4798                           ;usb_device.c: 2867: }
  4799                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  4800  0074  0020               	movlb	0	; select bank0
  4801  0075  1BD4               	btfsc	84,7	;volatile
  4802  0076  287F               	goto	l5239
  4803                           
  4804                           ;usb_device.c: 2873: {
  4805                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4806  0077  0021               	movlb	1	; select bank1
  4807  0078  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4808  0079  0020               	movlb	0	; select bank0
  4809  007A  00EB               	movwf	??_USBStdFeatureReqHandler
  4810  007B  0854               	movf	84,w	;volatile
  4811  007C  390F               	andlw	15
  4812  007D  3EB4               	addlw	_pBDTEntryOut& (0+255)
  4813  007E  2886               	goto	L5
  4814  007F                     l5239:	
  4815                           ;usb_device.c: 2875: }
  4816                           
  4817                           
  4818                           ;usb_device.c: 2876: else
  4819                           ;usb_device.c: 2877: {
  4820                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4821  007F  0021               	movlb	1	; select bank1
  4822  0080  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4823  0081  0020               	movlb	0	; select bank0
  4824  0082  00EB               	movwf	??_USBStdFeatureReqHandler
  4825  0083  0854               	movf	84,w	;volatile
  4826  0084  390F               	andlw	15
  4827  0085  3E60               	addlw	_pBDTEntryIn& (0+255)
  4828  0086                     L5:	
  4829  0086  0086               	movwf	6
  4830  0087  3001               	movlw	1	; select bank2/3
  4831  0088  0087               	movwf	7
  4832  0089  086B               	movf	??_USBStdFeatureReqHandler,w
  4833  008A  0081               	movwf	1
  4834                           
  4835                           ;usb_device.c: 2879: }
  4836                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  4837  008B  0851               	movf	81,w	;volatile
  4838  008C  3A03               	xorlw	3
  4839  008D  1D03               	skipz
  4840  008E  28AD               	goto	l5255
  4841                           
  4842                           ;usb_device.c: 2883: {
  4843                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  4844  008F  0021               	movlb	1	; select bank1
  4845  0090  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4846  0091  0086               	movwf	6
  4847  0092  0187               	clrf	7
  4848  0093  1F81               	btfss	1,7
  4849  0094  28A3               	goto	l5251
  4850                           
  4851                           ;usb_device.c: 2885: {
  4852                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  4853  0095  0020               	movlb	0	; select bank0
  4854  0096  1BD4               	btfsc	84,7	;volatile
  4855  0097  289C               	goto	l5249
  4856                           
  4857                           ;usb_device.c: 2889: {
  4858                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4859  0098  0854               	movf	84,w	;volatile
  4860  0099  390F               	andlw	15
  4861  009A  3EB1               	addlw	_ep_data_out& (0+255)
  4862  009B  289F               	goto	L6
  4863  009C                     l5249:	
  4864                           ;usb_device.c: 2891: }
  4865                           
  4866                           
  4867                           ;usb_device.c: 2892: else
  4868                           ;usb_device.c: 2893: {
  4869                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4870  009C  0854               	movf	84,w	;volatile
  4871  009D  390F               	andlw	15
  4872  009E  3EAE               	addlw	_ep_data_in& (0+255)
  4873  009F                     L6:	
  4874  009F  0086               	movwf	6
  4875  00A0  3001               	movlw	1	; select bank3/4
  4876  00A1  0087               	movwf	7
  4877  00A2  1481               	bsf	1,1
  4878  00A3                     l5251:	
  4879                           
  4880                           ;usb_device.c: 2895: }
  4881                           ;usb_device.c: 2896: }
  4882                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  4883  00A3  0021               	movlb	1	; select bank1
  4884  00A4  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4885  00A5  0086               	movwf	6
  4886  00A6  0187               	clrf	7
  4887  00A7  1501               	bsf	1,2
  4888                           
  4889                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  4890  00A8  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4891  00A9  0086               	movwf	6
  4892  00AA  0187               	clrf	7
  4893  00AB  1781               	bsf	1,7
  4894                           
  4895                           ;usb_device.c: 2901: }
  4896  00AC  0008               	return
  4897  00AD                     l5255:	
  4898                           
  4899                           ;usb_device.c: 2902: else
  4900                           ;usb_device.c: 2903: {
  4901                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  4902  00AD  3004               	movlw	4
  4903  00AE  0020               	movlb	0	; select bank0
  4904  00AF  00EB               	movwf	??_USBStdFeatureReqHandler
  4905  00B0  086B               	movf	??_USBStdFeatureReqHandler,w
  4906  00B1  0021               	movlb	1	; select bank1
  4907  00B2  06E3               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
  4908                           
  4909                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  4910  00B3  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4911  00B4  0086               	movwf	6
  4912  00B5  0187               	clrf	7
  4913  00B6  1F81               	btfss	1,7
  4914  00B7  28DA               	goto	l5265
  4915                           
  4916                           ;usb_device.c: 2910: {
  4917                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  4918  00B8  307F               	movlw	127
  4919  00B9  0020               	movlb	0	; select bank0
  4920  00BA  00EB               	movwf	??_USBStdFeatureReqHandler
  4921  00BB  0021               	movlb	1	; select bank1
  4922  00BC  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4923  00BD  0086               	movwf	6
  4924  00BE  0187               	clrf	7
  4925  00BF  0020               	movlb	0	; select bank0
  4926  00C0  086B               	movf	??_USBStdFeatureReqHandler,w
  4927  00C1  0581               	andwf	1,f
  4928                           
  4929                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  4930  00C2  0021               	movlb	1	; select bank1
  4931  00C3  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4932  00C4  0086               	movwf	6
  4933  00C5  0187               	clrf	7
  4934  00C6  1701               	bsf	1,6
  4935                           
  4936                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4937  00C7  3005               	movlw	5
  4938  00C8  0020               	movlb	0	; select bank0
  4939  00C9  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4940  00CA  3000               	movlw	0
  4941  00CB  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4942  00CC  0021               	movlb	1	; select bank1
  4943  00CD  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4944  00CE  0020               	movlb	0	; select bank0
  4945  00CF  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4946  00D0  3000               	movlw	0
  4947  00D1  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4948  00D2  3001               	movlw	1
  4949  00D3  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4950  00D4  3000               	movlw	0
  4951  00D5  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4952  00D6  318A  227F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4953                           
  4954                           ;usb_device.c: 2916: }
  4955  00D9  28DF               	goto	l5267
  4956  00DA                     l5265:	
  4957                           
  4958                           ;usb_device.c: 2917: else
  4959                           ;usb_device.c: 2918: {
  4960                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  4961  00DA  0021               	movlb	1	; select bank1
  4962  00DB  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4963  00DC  0086               	movwf	6
  4964  00DD  0187               	clrf	7
  4965  00DE  1701               	bsf	1,6
  4966  00DF                     l5267:	
  4967                           
  4968                           ;usb_device.c: 2921: }
  4969                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  4970  00DF  3004               	movlw	4
  4971  00E0  0020               	movlb	0	; select bank0
  4972  00E1  00EB               	movwf	??_USBStdFeatureReqHandler
  4973  00E2  086B               	movf	??_USBStdFeatureReqHandler,w
  4974  00E3  0021               	movlb	1	; select bank1
  4975  00E4  06E3               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
  4976                           
  4977                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  4978  00E5  18E2               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
  4979  00E6  28EC               	goto	l727
  4980  00E7  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  4981  00E8  0086               	movwf	6
  4982  00E9  0187               	clrf	7
  4983  00EA  1F81               	btfss	1,7
  4984  00EB  2915               	goto	l5279
  4985  00EC                     l727:	
  4986                           
  4987                           ;usb_device.c: 2932: {
  4988                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  4989  00EC  0020               	movlb	0	; select bank0
  4990  00ED  1BD4               	btfsc	84,7	;volatile
  4991  00EE  28F3               	goto	l5275
  4992                           
  4993                           ;usb_device.c: 2934: {
  4994                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4995  00EF  0854               	movf	84,w	;volatile
  4996  00F0  390F               	andlw	15
  4997  00F1  3EB1               	addlw	_ep_data_out& (0+255)
  4998  00F2  28F6               	goto	L7
  4999  00F3                     l5275:	
  5000                           ;usb_device.c: 2936: }
  5001                           
  5002                           
  5003                           ;usb_device.c: 2937: else
  5004                           ;usb_device.c: 2938: {
  5005                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5006  00F3  0854               	movf	84,w	;volatile
  5007  00F4  390F               	andlw	15
  5008  00F5  3EAE               	addlw	_ep_data_in& (0+255)
  5009  00F6                     L7:	
  5010  00F6  0086               	movwf	6
  5011  00F7  3001               	movlw	1	; select bank3/4
  5012  00F8  0087               	movwf	7
  5013  00F9  1081               	bcf	1,1
  5014                           
  5015                           ;usb_device.c: 2940: }
  5016                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5017  00FA  303B               	movlw	59
  5018  00FB  00EB               	movwf	??_USBStdFeatureReqHandler
  5019  00FC  0021               	movlb	1	; select bank1
  5020  00FD  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5021  00FE  0086               	movwf	6
  5022  00FF  0187               	clrf	7
  5023  0100  0020               	movlb	0	; select bank0
  5024  0101  086B               	movf	??_USBStdFeatureReqHandler,w
  5025  0102  0581               	andwf	1,f
  5026                           
  5027                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5028  0103  3005               	movlw	5
  5029  0104  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  5030  0105  3000               	movlw	0
  5031  0106  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  5032  0107  0021               	movlb	1	; select bank1
  5033  0108  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5034  0109  0020               	movlb	0	; select bank0
  5035  010A  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5036  010B  3000               	movlw	0
  5037  010C  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5038  010D  3001               	movlw	1
  5039  010E  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5040  010F  3000               	movlw	0
  5041  0110  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  5042  0111  318A  227F  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5043                           
  5044                           ;usb_device.c: 2946: }
  5045  0114  291F               	goto	l5281
  5046  0115                     l5279:	
  5047                           
  5048                           ;usb_device.c: 2947: else
  5049                           ;usb_device.c: 2948: {
  5050                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5051  0115  303B               	movlw	59
  5052  0116  0020               	movlb	0	; select bank0
  5053  0117  00EB               	movwf	??_USBStdFeatureReqHandler
  5054  0118  0021               	movlb	1	; select bank1
  5055  0119  0863               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5056  011A  0086               	movwf	6
  5057  011B  0187               	clrf	7
  5058  011C  0020               	movlb	0	; select bank0
  5059  011D  086B               	movf	??_USBStdFeatureReqHandler,w
  5060  011E  0581               	andwf	1,f
  5061  011F                     l5281:	
  5062                           
  5063                           ;usb_device.c: 2951: }
  5064                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  5065  011F  0020               	movlb	0	; select bank0
  5066  0120  0854               	movf	84,w	;volatile
  5067  0121  390F               	andlw	15
  5068  0122  3E98               	addlw	152
  5069  0123  00EB               	movwf	??_USBStdFeatureReqHandler
  5070  0124  01EC               	clrf	??_USBStdFeatureReqHandler+1
  5071  0125  300E               	movlw	14
  5072  0126  3DEC               	addwfc	??_USBStdFeatureReqHandler+1,f
  5073  0127  086B               	movf	??_USBStdFeatureReqHandler,w
  5074  0128  0021               	movlb	1	; select bank1
  5075  0129  00E0               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
  5076  012A  0020               	movlb	0	; select bank0
  5077  012B  086C               	movf	??_USBStdFeatureReqHandler+1,w
  5078  012C  0021               	movlb	1	; select bank1
  5079  012D  00E1               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
  5080                           
  5081                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  5082  012E  30FE               	movlw	254
  5083  012F  0020               	movlb	0	; select bank0
  5084  0130  00EB               	movwf	??_USBStdFeatureReqHandler
  5085  0131  0021               	movlb	1	; select bank1
  5086  0132  0860               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
  5087  0133  0086               	movwf	6
  5088  0134  0861               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  5089  0135  0087               	movwf	7
  5090  0136  0020               	movlb	0	; select bank0
  5091  0137  086B               	movf	??_USBStdFeatureReqHandler,w
  5092  0138  0581               	andwf	1,f
  5093  0139  0008               	return
  5094  013A                     __end_of_USBStdFeatureReqHandler:	
  5095                           
  5096                           	psect	text9
  5097  0B79                     __ptext9:	
  5098 ;; *************** function _USBStdGetStatusHandler *****************
  5099 ;; Defined at:
  5100 ;;		line 2149 in file "../framework/usb/usb_device.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  p               1    2[COMMON] PTR struct __BDT
  5105 ;;		 -> NULL(0), BDT(48), 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_USBCheckStdRequest
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _USBStdGetStatusHandler
  5131  0B79                     _USBStdGetStatusHandler:	
  5132                           
  5133                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  5134                           
  5135                           ;incstack = 0
  5136                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5137  0B79  0020               	movlb	0	; select bank0
  5138  0B7A  01D8               	clrf	88	;volatile
  5139                           
  5140                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  5141  0B7B  3000               	movlw	0
  5142  0B7C  00D9               	movwf	89	;volatile
  5143                           
  5144                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  5145  0B7D  2BAD               	goto	l4087
  5146  0B7E                     l629:	
  5147                           ;usb_device.c: 2154: {
  5148                           ;usb_device.c: 2155: case (0x00):
  5149                           
  5150                           
  5151                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5152  0B7E  0022               	movlb	2	; select bank2
  5153  0B7F  17EC               	bsf	(_inPipes^(0+256)+2),7
  5154                           
  5155                           ;usb_device.c: 2164: }
  5156                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  5157                           
  5158                           ;usb_device.c: 2162: {
  5159                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  5160                           
  5161                           ;usb_device.c: 2161: if(0 == 1)
  5162  0B80  0023               	movlb	3	; select bank3
  5163  0B81  0843               	movf	_RemoteWakeup^(0+384),w
  5164  0B82  3A01               	xorlw	1
  5165  0B83  1D03               	skipz
  5166  0B84  2BB9               	goto	l632
  5167                           
  5168                           ;usb_device.c: 2167: {
  5169                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  5170  0B85  0020               	movlb	0	; select bank0
  5171  0B86  14D8               	bsf	88,1	;volatile
  5172                           
  5173                           ;usb_device.c: 2169: }
  5174                           ;usb_device.c: 2170: break;
  5175  0B87  2BB9               	goto	l632
  5176  0B88                     l633:	
  5177                           ;usb_device.c: 2171: case (0x01):
  5178                           
  5179                           
  5180                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  5181  0B88  0022               	movlb	2	; select bank2
  5182  0B89  17EC               	bsf	(_inPipes^(0+256)+2),7
  5183                           
  5184                           ;usb_device.c: 2173: break;
  5185  0B8A  2BB9               	goto	l632
  5186  0B8B                     l634:	
  5187                           ;usb_device.c: 2174: case (0x02):
  5188                           
  5189                           
  5190                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  5191  0B8B  0022               	movlb	2	; select bank2
  5192  0B8C  17EC               	bsf	(_inPipes^(0+256)+2),7
  5193                           
  5194                           ;usb_device.c: 2179: {
  5195                           ;usb_device.c: 2180: BDT_ENTRY *p;
  5196                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  5197  0B8D  0020               	movlb	0	; select bank0
  5198  0B8E  1BD4               	btfsc	84,7	;volatile
  5199  0B8F  2B94               	goto	l4077
  5200                           
  5201                           ;usb_device.c: 2183: {
  5202                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5203  0B90  0854               	movf	84,w	;volatile
  5204  0B91  390F               	andlw	15
  5205  0B92  3EB4               	addlw	_pBDTEntryOut& (0+255)
  5206  0B93  2B97               	goto	L8
  5207  0B94                     l4077:	
  5208                           ;usb_device.c: 2185: }
  5209                           
  5210                           
  5211                           ;usb_device.c: 2186: else
  5212                           ;usb_device.c: 2187: {
  5213                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5214  0B94  0854               	movf	84,w	;volatile
  5215  0B95  390F               	andlw	15
  5216  0B96  3E60               	addlw	_pBDTEntryIn& (0+255)
  5217  0B97                     L8:	
  5218  0B97  0086               	movwf	6
  5219  0B98  3001               	movlw	1	; select bank2/3
  5220  0B99  0087               	movwf	7
  5221  0B9A  0801               	movf	1,w
  5222  0B9B  00F1               	movwf	??_USBStdGetStatusHandler
  5223  0B9C  0871               	movf	??_USBStdGetStatusHandler,w
  5224  0B9D  00F2               	movwf	USBStdGetStatusHandler@p
  5225                           
  5226                           ;usb_device.c: 2189: }
  5227                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5228  0B9E  0872               	movf	USBStdGetStatusHandler@p,w
  5229  0B9F  0086               	movwf	6
  5230  0BA0  0187               	clrf	7
  5231  0BA1  1F81               	btfss	1,7
  5232  0BA2  2BB9               	goto	l632
  5233  0BA3  0872               	movf	USBStdGetStatusHandler@p,w
  5234  0BA4  0086               	movwf	6
  5235  0BA5  0187               	clrf	7
  5236  0BA6  1D01               	btfss	1,2
  5237  0BA7  2BB9               	goto	l632
  5238                           
  5239                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  5240  0BA8  3001               	movlw	1
  5241  0BA9  00F1               	movwf	??_USBStdGetStatusHandler
  5242  0BAA  0871               	movf	??_USBStdGetStatusHandler,w
  5243  0BAB  00D8               	movwf	88	;volatile
  5244                           
  5245                           ;usb_device.c: 2194: }
  5246                           ;usb_device.c: 2195: }
  5247                           
  5248                           ;usb_device.c: 2193: break;
  5249  0BAC  2BB9               	goto	l632
  5250  0BAD                     l4087:	
  5251  0BAD  0850               	movf	80,w	;volatile
  5252  0BAE  391F               	andlw	31
  5253                           
  5254                           ; Switch size 1, requested type "space"
  5255                           ; Number of cases is 3, Range of values is 0 to 2
  5256                           ; switch strategies available:
  5257                           ; Name         Instructions Cycles
  5258                           ; simple_byte           10     6 (average)
  5259                           ; direct_byte           12     6 (fixed)
  5260                           ; jumptable            260     6 (fixed)
  5261                           ; rangetable             7     4 (fixed)
  5262                           ; spacedrange           11     6 (fixed)
  5263                           ; locatedrange           3     3 (fixed)
  5264                           ;	Chosen strategy is simple_byte
  5265  0BAF  3A00               	xorlw	0	; case 0
  5266  0BB0  1903               	skipnz
  5267  0BB1  2B7E               	goto	l629
  5268  0BB2  3A01               	xorlw	1	; case 1
  5269  0BB3  1903               	skipnz
  5270  0BB4  2B88               	goto	l633
  5271  0BB5  3A03               	xorlw	3	; case 2
  5272  0BB6  1903               	skipnz
  5273  0BB7  2B8B               	goto	l634
  5274  0BB8  2BB9               	goto	l632
  5275  0BB9                     l632:	
  5276                           
  5277                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  5278  0BB9  0022               	movlb	2	; select bank2
  5279  0BBA  1FEC               	btfss	(_inPipes^(0+256)+2),7
  5280  0BBB  0008               	return
  5281                           
  5282                           ;usb_device.c: 2198: {
  5283                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5284  0BBC  3058               	movlw	88
  5285  0BBD  00EA               	movwf	_inPipes^(0+256)
  5286  0BBE  3000               	movlw	0
  5287  0BBF  00EB               	movwf	(_inPipes+1)^(0+256)
  5288                           
  5289                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5290  0BC0  146C               	bsf	(_inPipes^(0+256)+2),0
  5291                           
  5292                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  5293  0BC1  3002               	movlw	2
  5294  0BC2  00F1               	movwf	??_USBStdGetStatusHandler
  5295  0BC3  0871               	movf	??_USBStdGetStatusHandler,w
  5296  0BC4  00ED               	movwf	(_inPipes^(0+256)+3)
  5297  0BC5  0008               	return
  5298  0BC6                     __end_of_USBStdGetStatusHandler:	
  5299                           
  5300                           	psect	text10
  5301  0F87                     __ptext10:	
  5302 ;; *************** function _USBStdGetDscHandler *****************
  5303 ;; Defined at:
  5304 ;;		line 2063 in file "../framework/usb/usb_device.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;		None               void
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;Total ram usage:        3 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_USBCheckStdRequest
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _USBStdGetDscHandler
  5334  0F87                     _USBStdGetDscHandler:	
  5335                           
  5336                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5340  0F87  0020               	movlb	0	; select bank0
  5341  0F88  0850               	movf	80,w	;volatile
  5342  0F89  3A80               	xorlw	128
  5343  0F8A  1D03               	skipz
  5344  0F8B  0008               	return
  5345                           
  5346                           ;usb_device.c: 2065: {
  5347                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5348  0F8C  30C0               	movlw	192
  5349  0F8D  00F1               	movwf	??_USBStdGetDscHandler
  5350  0F8E  0871               	movf	??_USBStdGetDscHandler,w
  5351  0F8F  0022               	movlb	2	; select bank2
  5352  0F90  00EC               	movwf	(_inPipes^(0+256)+2)
  5353                           
  5354                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  5355  0F91  2FF3               	goto	l4063
  5356  0F92                     l4039:	
  5357                           ;usb_device.c: 2069: {
  5358                           ;usb_device.c: 2070: case 0x01:
  5359                           
  5360                           
  5361                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5362  0F92  30BA               	movlw	low (_device_dsc| (0+32768))
  5363  0F93  0022               	movlb	2	; select bank2
  5364  0F94  00EA               	movwf	_inPipes^(0+256)
  5365  0F95  3083               	movlw	high (_device_dsc| (0+32768))
  5366  0F96  00EB               	movwf	(_inPipes+1)^(0+256)
  5367                           
  5368                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  5369  0F97  3012               	movlw	18
  5370  0F98  00ED               	movwf	(_inPipes^(0+256)+3)
  5371  0F99  3000               	movlw	0
  5372  0F9A  00EE               	movwf	(_inPipes^(0+256)+4)
  5373                           
  5374                           ;usb_device.c: 2077: break;
  5375  0F9B  0008               	return
  5376  0F9C                     l4041:	
  5377                           ;usb_device.c: 2078: case 0x02:
  5378                           
  5379                           
  5380                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  5381  0F9C  0020               	movlb	0	; select bank0
  5382  0F9D  0852               	movf	82,w
  5383  0F9E  1D03               	skipz
  5384  0F9F  2FCC               	goto	l4049
  5385                           
  5386                           ;usb_device.c: 2083: {
  5387                           ;usb_device.c: 2087: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5388  0FA0  300E               	movlw	low (_USB_CD_Ptr| (0+32768))
  5389  0FA1  0084               	movwf	4
  5390  0FA2  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  5391  0FA3  0085               	movwf	5
  5392  0FA4  0852               	movf	82,w	;volatile
  5393  0FA5  0784               	addwf	4,f
  5394  0FA6  1803               	skipnc
  5395  0FA7  0A85               	incf	5,f
  5396  0FA8  3F00               	moviw [0]fsr0
  5397  0FA9  0022               	movlb	2	; select bank2
  5398  0FAA  00EA               	movwf	_inPipes^(0+256)
  5399  0FAB  3083               	movlw	(high __stringtab)| (0+128)
  5400  0FAC  00EB               	movwf	(_inPipes+1)^(0+256)
  5401                           
  5402                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5403  0FAD  086B               	movf	(_inPipes+1)^(0+256),w
  5404  0FAE  00F2               	movwf	??_USBStdGetDscHandler+1
  5405  0FAF  086A               	movf	_inPipes^(0+256),w
  5406  0FB0  00F1               	movwf	??_USBStdGetDscHandler
  5407  0FB1  3002               	movlw	2
  5408  0FB2  0771               	addwf	??_USBStdGetDscHandler,w
  5409  0FB3  0084               	movwf	4
  5410  0FB4  0872               	movf	??_USBStdGetDscHandler+1,w
  5411  0FB5  1803               	skipnc
  5412  0FB6  0A72               	incf	??_USBStdGetDscHandler+1,w
  5413  0FB7  0085               	movwf	5
  5414  0FB8  0800               	movf	0,w	;code access
  5415  0FB9  00F3               	movwf	??_USBStdGetDscHandler+2
  5416  0FBA  0873               	movf	??_USBStdGetDscHandler+2,w
  5417  0FBB  00ED               	movwf	(_inPipes^(0+256)+3)
  5418                           
  5419                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5420  0FBC  086B               	movf	(_inPipes+1)^(0+256),w
  5421  0FBD  00F2               	movwf	??_USBStdGetDscHandler+1
  5422  0FBE  086A               	movf	_inPipes^(0+256),w
  5423  0FBF  00F1               	movwf	??_USBStdGetDscHandler
  5424  0FC0  3003               	movlw	3
  5425  0FC1  0771               	addwf	??_USBStdGetDscHandler,w
  5426  0FC2  0084               	movwf	4
  5427  0FC3  0872               	movf	??_USBStdGetDscHandler+1,w
  5428  0FC4  1803               	skipnc
  5429  0FC5  0A72               	incf	??_USBStdGetDscHandler+1,w
  5430  0FC6  0085               	movwf	5
  5431  0FC7  0800               	movf	0,w	;code access
  5432  0FC8  00F3               	movwf	??_USBStdGetDscHandler+2
  5433  0FC9  0873               	movf	??_USBStdGetDscHandler+2,w
  5434  0FCA  00EE               	movwf	(_inPipes^(0+256)+4)
  5435                           
  5436                           ;usb_device.c: 2095: }
  5437  0FCB  0008               	return
  5438  0FCC                     l4049:	
  5439                           
  5440                           ;usb_device.c: 2096: else
  5441                           ;usb_device.c: 2097: {
  5442                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  5443  0FCC  0022               	movlb	2	; select bank2
  5444  0FCD  01EC               	clrf	(_inPipes^(0+256)+2)
  5445                           
  5446                           ;usb_device.c: 2099: }
  5447                           ;usb_device.c: 2100: break;
  5448  0FCE  0008               	return
  5449  0FCF                     l4051:	
  5450                           ;usb_device.c: 2101: case 0x03:
  5451                           
  5452                           
  5453                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  5454  0FCF  3003               	movlw	3
  5455  0FD0  0020               	movlb	0	; select bank0
  5456  0FD1  0252               	subwf	82,w	;volatile
  5457  0FD2  1803               	skipnc
  5458  0FD3  2FED               	goto	l4057
  5459                           
  5460                           ;usb_device.c: 2106: {
  5461                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5462  0FD4  300B               	movlw	low (_USB_SD_Ptr| (0+32768))
  5463  0FD5  0084               	movwf	4
  5464  0FD6  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  5465  0FD7  0085               	movwf	5
  5466  0FD8  0852               	movf	82,w	;volatile
  5467  0FD9  0784               	addwf	4,f
  5468  0FDA  1803               	skipnc
  5469  0FDB  0A85               	incf	5,f
  5470  0FDC  3F00               	moviw [0]fsr0
  5471  0FDD  0022               	movlb	2	; select bank2
  5472  0FDE  00EA               	movwf	_inPipes^(0+256)
  5473  0FDF  3083               	movlw	(high __stringtab)| (0+128)
  5474  0FE0  00EB               	movwf	(_inPipes+1)^(0+256)
  5475                           
  5476                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5477  0FE1  086A               	movf	_inPipes^(0+256),w
  5478  0FE2  0084               	movwf	4
  5479  0FE3  086B               	movf	(_inPipes+1)^(0+256),w
  5480  0FE4  0085               	movwf	5
  5481  0FE5  0800               	movf	0,w	;code access
  5482  0FE6  00F1               	movwf	??_USBStdGetDscHandler
  5483  0FE7  01F2               	clrf	??_USBStdGetDscHandler+1
  5484  0FE8  0871               	movf	??_USBStdGetDscHandler,w
  5485  0FE9  00ED               	movwf	(_inPipes^(0+256)+3)
  5486  0FEA  0872               	movf	??_USBStdGetDscHandler+1,w
  5487  0FEB  00EE               	movwf	((_inPipes+1)^(0+256)+3)
  5488                           
  5489                           ;usb_device.c: 2111: }
  5490  0FEC  0008               	return
  5491  0FED                     l4057:	
  5492                           
  5493                           ;usb_device.c: 2121: else
  5494                           ;usb_device.c: 2122: {
  5495                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  5496  0FED  0022               	movlb	2	; select bank2
  5497  0FEE  01EC               	clrf	(_inPipes^(0+256)+2)
  5498                           
  5499                           ;usb_device.c: 2124: }
  5500                           ;usb_device.c: 2125: break;
  5501  0FEF  0008               	return
  5502  0FF0                     l4059:	
  5503                           ;usb_device.c: 2126: default:
  5504                           
  5505                           
  5506                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  5507  0FF0  0022               	movlb	2	; select bank2
  5508  0FF1  01EC               	clrf	(_inPipes^(0+256)+2)
  5509                           
  5510                           ;usb_device.c: 2129: }
  5511                           
  5512                           ;usb_device.c: 2128: break;
  5513  0FF2  0008               	return
  5514  0FF3                     l4063:	
  5515  0FF3  0020               	movlb	0	; select bank0
  5516  0FF4  0853               	movf	83,w	;volatile
  5517                           
  5518                           ; Switch size 1, requested type "space"
  5519                           ; Number of cases is 3, Range of values is 1 to 3
  5520                           ; switch strategies available:
  5521                           ; Name         Instructions Cycles
  5522                           ; simple_byte           10     6 (average)
  5523                           ; direct_byte           15     9 (fixed)
  5524                           ; jumptable            263     9 (fixed)
  5525                           ;	Chosen strategy is simple_byte
  5526  0FF5  3A01               	xorlw	1	; case 1
  5527  0FF6  1903               	skipnz
  5528  0FF7  2F92               	goto	l4039
  5529  0FF8  3A03               	xorlw	3	; case 2
  5530  0FF9  1903               	skipnz
  5531  0FFA  2F9C               	goto	l4041
  5532  0FFB  3A01               	xorlw	1	; case 3
  5533  0FFC  1903               	skipnz
  5534  0FFD  2FCF               	goto	l4051
  5535  0FFE  2FF0               	goto	l4059
  5536  0FFF  0008               	return
  5537  1000                     __end_of_USBStdGetDscHandler:	
  5538                           
  5539                           	psect	text11
  5540  06CB                     __ptext11:	
  5541 ;; *************** function _USBStdSetCfgHandler *****************
  5542 ;; Defined at:
  5543 ;;		line 1988 in file "../framework/usb/usb_device.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;		None
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  p               2   12[BANK0 ] PTR unsigned char 
  5548 ;;		 -> UEP1(1), 
  5549 ;;  i               1   14[BANK0 ] unsigned char 
  5550 ;;  i               1   15[BANK0 ] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;Total ram usage:        5 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    6
  5567 ;; This function calls:
  5568 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5569 ;;		_memset
  5570 ;; This function is called by:
  5571 ;;		_USBCheckStdRequest
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _USBStdSetCfgHandler
  5577  06CB                     _USBStdSetCfgHandler:	
  5578                           
  5579                           ;usb_device.c: 1989: uint8_t i;
  5580                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  5584  06CB  0022               	movlb	2	; select bank2
  5585  06CC  17EC               	bsf	(_inPipes^(0+256)+2),7
  5586                           
  5587                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  5588  06CD  300E               	movlw	14
  5589  06CE  0020               	movlb	0	; select bank0
  5590  06CF  00ED               	movwf	USBStdSetCfgHandler@p+1
  5591  06D0  3099               	movlw	153
  5592  06D1  00EC               	movwf	USBStdSetCfgHandler@p
  5593  06D2  01EE               	clrf	USBStdSetCfgHandler@i_1819
  5594  06D3  3002               	movlw	2
  5595  06D4  026E               	subwf	USBStdSetCfgHandler@i_1819,w
  5596  06D5  1803               	btfsc	3,0
  5597  06D6  2EE8               	goto	l5101
  5598  06D7                     l5093:	
  5599  06D7  086C               	movf	USBStdSetCfgHandler@p,w
  5600  06D8  0086               	movwf	6
  5601  06D9  086D               	movf	USBStdSetCfgHandler@p+1,w
  5602  06DA  0087               	movwf	7
  5603  06DB  0181               	clrf	1
  5604  06DC  3001               	movlw	1
  5605  06DD  07EC               	addwf	USBStdSetCfgHandler@p,f
  5606  06DE  3000               	movlw	0
  5607  06DF  3DED               	addwfc	USBStdSetCfgHandler@p+1,f
  5608  06E0  3001               	movlw	1
  5609  06E1  00EB               	movwf	??_USBStdSetCfgHandler
  5610  06E2  086B               	movf	??_USBStdSetCfgHandler,w
  5611  06E3  07EE               	addwf	USBStdSetCfgHandler@i_1819,f
  5612  06E4  3002               	movlw	2
  5613  06E5  026E               	subwf	USBStdSetCfgHandler@i_1819,w
  5614  06E6  1C03               	skipc
  5615  06E7  2ED7               	goto	l5093
  5616  06E8                     l5101:	
  5617                           
  5618                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5619  06E8  3020               	movlw	32
  5620  06E9  00F1               	movwf	?_memset
  5621  06EA  3000               	movlw	0
  5622  06EB  00F2               	movwf	?_memset+1
  5623  06EC  3000               	movlw	0
  5624  06ED  00F3               	movwf	?_memset+2
  5625  06EE  3000               	movlw	0
  5626  06EF  00F4               	movwf	?_memset+3
  5627  06F0  3030               	movlw	48
  5628  06F1  00F5               	movwf	?_memset+4
  5629  06F2  3000               	movlw	0
  5630  06F3  00F6               	movwf	?_memset+5
  5631  06F4  3187  27E1  3186   	fcall	_memset
  5632                           
  5633                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  5634  06F7  003D               	movlb	29	; select bank29
  5635  06F8  170E               	bsf	14,6	;volatile
  5636                           
  5637                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(2+1u); i++)
  5638  06F9  0020               	movlb	0	; select bank0
  5639  06FA  01EF               	clrf	USBStdSetCfgHandler@i
  5640  06FB  3003               	movlw	3
  5641  06FC  026F               	subwf	USBStdSetCfgHandler@i,w
  5642  06FD  1803               	btfsc	3,0
  5643  06FE  2F13               	goto	l5117
  5644  06FF                     l5111:	
  5645                           
  5646                           ;usb_device.c: 2007: {
  5647                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  5648  06FF  086F               	movf	USBStdSetCfgHandler@i,w
  5649  0700  3EAE               	addlw	_ep_data_in& (0+255)
  5650  0701  0086               	movwf	6
  5651  0702  3001               	movlw	1	; select bank3/4
  5652  0703  0087               	movwf	7
  5653  0704  0181               	clrf	1
  5654                           
  5655                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  5656  0705  086F               	movf	USBStdSetCfgHandler@i,w
  5657  0706  3EB1               	addlw	_ep_data_out& (0+255)
  5658  0707  0086               	movwf	6
  5659  0708  3001               	movlw	1	; select bank3/4
  5660  0709  0087               	movwf	7
  5661  070A  0181               	clrf	1
  5662  070B  3001               	movlw	1
  5663  070C  00EB               	movwf	??_USBStdSetCfgHandler
  5664  070D  086B               	movf	??_USBStdSetCfgHandler,w
  5665  070E  07EF               	addwf	USBStdSetCfgHandler@i,f
  5666  070F  3003               	movlw	3
  5667  0710  026F               	subwf	USBStdSetCfgHandler@i,w
  5668  0711  1C03               	skipc
  5669  0712  2EFF               	goto	l5111
  5670  0713                     l5117:	
  5671                           
  5672                           ;usb_device.c: 2010: }
  5673                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,2);
  5674  0713  30E8               	movlw	low _USBAlternateInterface
  5675  0714  00F1               	movwf	?_memset
  5676  0715  3001               	movlw	high _USBAlternateInterface
  5677  0716  00F2               	movwf	?_memset+1
  5678  0717  3000               	movlw	0
  5679  0718  00F3               	movwf	?_memset+2
  5680  0719  3000               	movlw	0
  5681  071A  00F4               	movwf	?_memset+3
  5682  071B  3002               	movlw	2
  5683  071C  00F5               	movwf	?_memset+4
  5684  071D  3000               	movlw	0
  5685  071E  00F6               	movwf	?_memset+5
  5686  071F  3187  27E1  3186   	fcall	_memset
  5687                           
  5688                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  5689  0722  003D               	movlb	29	; select bank29
  5690  0723  130E               	bcf	14,6	;volatile
  5691                           
  5692                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5693  0724  3028               	movlw	40
  5694  0725  0020               	movlb	0	; select bank0
  5695  0726  00EB               	movwf	??_USBStdSetCfgHandler
  5696  0727  086B               	movf	??_USBStdSetCfgHandler,w
  5697  0728  0022               	movlb	2	; select bank2
  5698  0729  00E0               	movwf	_pBDTEntryIn^(0+256)
  5699                           
  5700                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5701  072A  3020               	movlw	32
  5702  072B  0020               	movlb	0	; select bank0
  5703  072C  00EB               	movwf	??_USBStdSetCfgHandler
  5704  072D  086B               	movf	??_USBStdSetCfgHandler,w
  5705  072E  0021               	movlb	1	; select bank1
  5706  072F  00EF               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5707                           
  5708                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5709  0730  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5710  0731  0020               	movlb	0	; select bank0
  5711  0732  00EB               	movwf	??_USBStdSetCfgHandler
  5712  0733  086B               	movf	??_USBStdSetCfgHandler,w
  5713  0734  00FC               	movwf	_pBDTEntryEP0OutNext
  5714                           
  5715                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5716  0735  0852               	movf	82,w	;volatile
  5717  0736  00EB               	movwf	??_USBStdSetCfgHandler
  5718  0737  086B               	movf	??_USBStdSetCfgHandler,w
  5719  0738  0023               	movlb	3	; select bank3
  5720  0739  00EA               	movwf	_USBActiveConfiguration^(0+384)
  5721                           
  5722                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  5723  073A  08EA               	movf	_USBActiveConfiguration^(0+384),f
  5724  073B  1D03               	skipz
  5725  073C  2F44               	goto	l5133
  5726                           
  5727                           ;usb_device.c: 2029: {
  5728                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  5729  073D  3010               	movlw	16
  5730  073E  0020               	movlb	0	; select bank0
  5731  073F  00EB               	movwf	??_USBStdSetCfgHandler
  5732  0740  086B               	movf	??_USBStdSetCfgHandler,w
  5733  0741  0022               	movlb	2	; select bank2
  5734  0742  00E6               	movwf	_USBDeviceState^(0+256)
  5735                           
  5736                           ;usb_device.c: 2032: }
  5737  0743  0008               	return
  5738  0744                     l5133:	
  5739                           
  5740                           ;usb_device.c: 2033: else
  5741                           ;usb_device.c: 2034: {
  5742                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5743  0744  3001               	movlw	1
  5744  0745  0020               	movlb	0	; select bank0
  5745  0746  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  5746  0747  3000               	movlw	0
  5747  0748  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  5748  0749  30EA               	movlw	low _USBActiveConfiguration
  5749  074A  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5750  074B  3001               	movlw	high _USBActiveConfiguration
  5751  074C  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5752  074D  3001               	movlw	1
  5753  074E  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5754  074F  3000               	movlw	0
  5755  0750  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  5756  0751  318A  227F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5757                           
  5758                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  5759  0753  3020               	movlw	32
  5760  0754  0020               	movlb	0	; select bank0
  5761  0755  00EB               	movwf	??_USBStdSetCfgHandler
  5762  0756  086B               	movf	??_USBStdSetCfgHandler,w
  5763  0757  0022               	movlb	2	; select bank2
  5764  0758  00E6               	movwf	_USBDeviceState^(0+256)
  5765  0759  0008               	return
  5766  075A                     __end_of_USBStdSetCfgHandler:	
  5767                           
  5768                           	psect	text12
  5769  07E1                     __ptext12:	
  5770 ;; *************** function _memset *****************
  5771 ;; Defined at:
  5772 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\memset.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  p1              2    1[COMMON] PTR void 
  5775 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5776 ;;  c               2    3[COMMON] int 
  5777 ;;  n               2    5[COMMON] unsigned int 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  p               2    8[COMMON] PTR unsigned char 
  5780 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  2    wreg      PTR void 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5790 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;Total ram usage:        9 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    1
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_USBStdSetCfgHandler
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _memset
  5806  07E1                     _memset:	
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5810  07E1  0872               	movf	memset@p1+1,w
  5811  07E2  01F9               	clrf	memset@p+1
  5812  07E3  07F9               	addwf	memset@p+1,f
  5813  07E4  0871               	movf	memset@p1,w
  5814  07E5  01F8               	clrf	memset@p
  5815  07E6  07F8               	addwf	memset@p,f
  5816  07E7                     l4033:	
  5817  07E7  3001               	movlw	1
  5818  07E8  02F5               	subwf	memset@n,f
  5819  07E9  3000               	movlw	0
  5820  07EA  3BF6               	subwfb	memset@n+1,f
  5821  07EB  30FF               	movlw	255
  5822  07EC  0676               	xorwf	memset@n+1,w
  5823  07ED  1D03               	skipz
  5824  07EE  2FF1               	goto	u3425
  5825  07EF  30FF               	movlw	255
  5826  07F0  0675               	xorwf	memset@n,w
  5827  07F1                     u3425:	
  5828  07F1  1903               	btfsc	3,2
  5829  07F2  0008               	return
  5830  07F3  0873               	movf	memset@c,w
  5831  07F4  00F7               	movwf	??_memset
  5832  07F5  0878               	movf	memset@p,w
  5833  07F6  0086               	movwf	6
  5834  07F7  0879               	movf	memset@p+1,w
  5835  07F8  0087               	movwf	7
  5836  07F9  0877               	movf	??_memset,w
  5837  07FA  0081               	movwf	1
  5838  07FB  3001               	movlw	1
  5839  07FC  07F8               	addwf	memset@p,f
  5840  07FD  3000               	movlw	0
  5841  07FE  3DF9               	addwfc	memset@p+1,f
  5842  07FF  2FE7               	goto	l4033
  5843  0800                     __end_of_memset:	
  5844                           ;	Return value of _memset is never used
  5845                           
  5846                           
  5847                           	psect	text13
  5848  0234                     __ptext13:	
  5849 ;; *************** function _USBCtrlEPServiceComplete *****************
  5850 ;; Defined at:
  5851 ;;		line 1636 in file "../framework/usb/usb_device.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;		None               void
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;Total ram usage:        2 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    3
  5872 ;; This function calls:
  5873 ;;		_USBCtrlEPAllowStatusStage
  5874 ;;		_USBCtrlEPAllowDataStage
  5875 ;; This function is called by:
  5876 ;;		_USBCtrlTrfSetupHandler
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _USBCtrlEPServiceComplete
  5882  0234                     _USBCtrlEPServiceComplete:	
  5883                           
  5884                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  5885                           
  5886                           ;incstack = 0
  5887                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5888  0234  003D               	movlb	29	; select bank29
  5889  0235  120E               	bcf	14,4	;volatile
  5890                           
  5891                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  5892  0236  0022               	movlb	2	; select bank2
  5893  0237  1BEC               	btfsc	(_inPipes^(0+256)+2),7
  5894  0238  2A76               	goto	l564
  5895                           
  5896                           ;usb_device.c: 1648: {
  5897                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  5898  0239  0023               	movlb	3	; select bank3
  5899  023A  1FA2               	btfss	(_outPipes^(0+384)+2),7
  5900  023B  2A4B               	goto	l3905
  5901                           
  5902                           ;usb_device.c: 1650: {
  5903                           ;usb_device.c: 1651: controlTransferState = 2;
  5904  023C  3002               	movlw	2
  5905  023D  00F6               	movwf	??_USBCtrlEPServiceComplete
  5906  023E  0876               	movf	??_USBCtrlEPServiceComplete,w
  5907  023F  0022               	movlb	2	; select bank2
  5908  0240  00E8               	movwf	_controlTransferState^(0+256)
  5909                           
  5910                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  5911  0241  0023               	movlb	3	; select bank3
  5912  0242  08C6               	movf	_USBDeferOUTDataStagePackets^(0+384),f
  5913  0243  1D03               	skipz
  5914  0244  2A47               	goto	l3901
  5915                           
  5916                           ;usb_device.c: 1663: {
  5917                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  5918  0245  318C  24B6         	fcall	_USBCtrlEPAllowDataStage
  5919  0247                     l3901:	
  5920                           
  5921                           ;usb_device.c: 1665: }
  5922                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  5923  0247  0023               	movlb	3	; select bank3
  5924  0248  01C8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5925                           
  5926                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  5927  0249  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5928                           
  5929                           ;usb_device.c: 1671: }
  5930  024A  0008               	return
  5931  024B                     l3905:	
  5932                           
  5933                           ;usb_device.c: 1672: else
  5934                           ;usb_device.c: 1673: {
  5935                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  5936  024B  3008               	movlw	8
  5937  024C  00F6               	movwf	??_USBCtrlEPServiceComplete
  5938  024D  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5939  024E  0086               	movwf	6
  5940  024F  0187               	clrf	7
  5941  0250  0876               	movf	??_USBCtrlEPServiceComplete,w
  5942  0251  0081               	movwf	1
  5943                           
  5944                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5945  0252  3050               	movlw	80
  5946  0253  00F6               	movwf	??_USBCtrlEPServiceComplete
  5947  0254  3000               	movlw	0
  5948  0255  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  5949  0256  087C               	movf	_pBDTEntryEP0OutNext,w
  5950  0257  3E02               	addlw	2
  5951  0258  0086               	movwf	6
  5952  0259  0187               	clrf	7
  5953  025A  0876               	movf	??_USBCtrlEPServiceComplete,w
  5954  025B  3FC0               	movwi [0]fsr1
  5955  025C  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  5956  025D  3FC1               	movwi [1]fsr1
  5957                           
  5958                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5959  025E  300C               	movlw	12
  5960  025F  00F6               	movwf	??_USBCtrlEPServiceComplete
  5961  0260  087C               	movf	_pBDTEntryEP0OutNext,w
  5962  0261  0086               	movwf	6
  5963  0262  0187               	clrf	7
  5964  0263  0876               	movf	??_USBCtrlEPServiceComplete,w
  5965  0264  0081               	movwf	1
  5966                           
  5967                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5968  0265  087C               	movf	_pBDTEntryEP0OutNext,w
  5969  0266  0086               	movwf	6
  5970  0267  0187               	clrf	7
  5971  0268  1781               	bsf	1,7
  5972                           
  5973                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  5974  0269  3004               	movlw	4
  5975  026A  00F6               	movwf	??_USBCtrlEPServiceComplete
  5976  026B  0022               	movlb	2	; select bank2
  5977  026C  0860               	movf	_pBDTEntryIn^(0+256),w
  5978  026D  0086               	movwf	6
  5979  026E  0187               	clrf	7
  5980  026F  0876               	movf	??_USBCtrlEPServiceComplete,w
  5981  0270  0081               	movwf	1
  5982                           
  5983                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5984  0271  0860               	movf	_pBDTEntryIn^(0+256),w
  5985  0272  0086               	movwf	6
  5986  0273  0187               	clrf	7
  5987  0274  1781               	bsf	1,7
  5988                           
  5989                           ;usb_device.c: 1684: }
  5990                           ;usb_device.c: 1685: }
  5991  0275  0008               	return
  5992  0276                     l564:	
  5993                           
  5994                           ;usb_device.c: 1686: else
  5995                           ;usb_device.c: 1687: {
  5996                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  5997  0276  0020               	movlb	0	; select bank0
  5998  0277  1FD0               	btfss	80,7	;volatile
  5999  0278  2A8D               	goto	l3921
  6000                           
  6001                           ;usb_device.c: 1689: {
  6002                           ;usb_device.c: 1690: controlTransferState = 1;
  6003  0279  0022               	movlb	2	; select bank2
  6004  027A  01E8               	clrf	_controlTransferState^(0+256)
  6005  027B  0AE8               	incf	_controlTransferState^(0+256),f
  6006                           
  6007                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  6008  027C  0023               	movlb	3	; select bank3
  6009  027D  08C5               	movf	_USBDeferINDataStagePackets^(0+384),f
  6010  027E  1D03               	skipz
  6011  027F  2A83               	goto	l3913
  6012                           
  6013                           ;usb_device.c: 1705: {
  6014                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  6015  0280  318C  24B6  3182   	fcall	_USBCtrlEPAllowDataStage
  6016  0283                     l3913:	
  6017                           
  6018                           ;usb_device.c: 1707: }
  6019                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  6020  0283  0023               	movlb	3	; select bank3
  6021  0284  01C8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6022                           
  6023                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  6024  0285  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6025                           
  6026                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  6027  0286  0022               	movlb	2	; select bank2
  6028  0287  08E5               	movf	_USBDeferStatusStagePacket^(0+256),f
  6029  0288  1D03               	skipz
  6030  0289  0008               	return
  6031                           
  6032                           ;usb_device.c: 1732: {
  6033                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  6034  028A  318D  25CE         	fcall	_USBCtrlEPAllowStatusStage
  6035                           
  6036                           ;usb_device.c: 1734: }
  6037                           ;usb_device.c: 1735: }
  6038  028C  0008               	return
  6039  028D                     l3921:	
  6040                           
  6041                           ;usb_device.c: 1736: else
  6042                           ;usb_device.c: 1737: {
  6043                           ;usb_device.c: 1748: controlTransferState = 2;
  6044  028D  3002               	movlw	2
  6045  028E  00F6               	movwf	??_USBCtrlEPServiceComplete
  6046  028F  0876               	movf	??_USBCtrlEPServiceComplete,w
  6047  0290  0022               	movlb	2	; select bank2
  6048  0291  00E8               	movwf	_controlTransferState^(0+256)
  6049                           
  6050                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  6051  0292  3008               	movlw	8
  6052  0293  00F6               	movwf	??_USBCtrlEPServiceComplete
  6053  0294  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6054  0295  0086               	movwf	6
  6055  0296  0187               	clrf	7
  6056  0297  0876               	movf	??_USBCtrlEPServiceComplete,w
  6057  0298  0081               	movwf	1
  6058                           
  6059                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6060  0299  3050               	movlw	80
  6061  029A  00F6               	movwf	??_USBCtrlEPServiceComplete
  6062  029B  3000               	movlw	0
  6063  029C  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  6064  029D  087C               	movf	_pBDTEntryEP0OutNext,w
  6065  029E  3E02               	addlw	2
  6066  029F  0086               	movwf	6
  6067  02A0  0187               	clrf	7
  6068  02A1  0876               	movf	??_USBCtrlEPServiceComplete,w
  6069  02A2  3FC0               	movwi [0]fsr1
  6070  02A3  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  6071  02A4  3FC1               	movwi [1]fsr1
  6072                           
  6073                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6074  02A5  3004               	movlw	4
  6075  02A6  00F6               	movwf	??_USBCtrlEPServiceComplete
  6076  02A7  087C               	movf	_pBDTEntryEP0OutNext,w
  6077  02A8  0086               	movwf	6
  6078  02A9  0187               	clrf	7
  6079  02AA  0876               	movf	??_USBCtrlEPServiceComplete,w
  6080  02AB  0081               	movwf	1
  6081                           
  6082                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6083  02AC  087C               	movf	_pBDTEntryEP0OutNext,w
  6084  02AD  0086               	movwf	6
  6085  02AE  0187               	clrf	7
  6086  02AF  1781               	bsf	1,7
  6087                           
  6088                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  6089  02B0  0023               	movlb	3	; select bank3
  6090  02B1  01C8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6091                           
  6092                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  6093  02B2  01C7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6094                           
  6095                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  6096  02B3  0022               	movlb	2	; select bank2
  6097  02B4  08E5               	movf	_USBDeferStatusStagePacket^(0+256),f
  6098  02B5  1D03               	skipz
  6099  02B6  0008               	return
  6100                           
  6101                           ;usb_device.c: 1760: {
  6102                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  6103  02B7  318D  25CE         	fcall	_USBCtrlEPAllowStatusStage
  6104  02B9  0008               	return
  6105  02BA                     __end_of_USBCtrlEPServiceComplete:	
  6106                           
  6107                           	psect	text14
  6108  0CB6                     __ptext14:	
  6109 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6110 ;; Defined at:
  6111 ;;		line 1508 in file "../framework/usb/usb_device.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;		None               void
  6118 ;; Registers used:
  6119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;Total ram usage:        2 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    2
  6132 ;; This function calls:
  6133 ;;		_USBCtrlTrfTxService
  6134 ;; This function is called by:
  6135 ;;		_USBCtrlEPServiceComplete
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _USBCtrlEPAllowDataStage
  6141  0CB6                     _USBCtrlEPAllowDataStage:	
  6142                           
  6143                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6147  0CB6  0023               	movlb	3	; select bank3
  6148  0CB7  01C5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6149                           
  6150                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  6151  0CB8  01C6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6152                           
  6153                           ;usb_device.c: 1512: if(controlTransferState == 2)
  6154  0CB9  0022               	movlb	2	; select bank2
  6155  0CBA  0868               	movf	_controlTransferState^(0+256),w
  6156  0CBB  3A02               	xorlw	2
  6157  0CBC  1D03               	skipz
  6158  0CBD  2CDD               	goto	l3839
  6159                           
  6160                           ;usb_device.c: 1513: {
  6161                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  6162  0CBE  3008               	movlw	8
  6163  0CBF  00F4               	movwf	??_USBCtrlEPAllowDataStage
  6164  0CC0  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6165  0CC1  0086               	movwf	6
  6166  0CC2  0187               	clrf	7
  6167  0CC3  0874               	movf	??_USBCtrlEPAllowDataStage,w
  6168  0CC4  0081               	movwf	1
  6169                           
  6170                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6171  0CC5  3058               	movlw	88
  6172  0CC6  00F4               	movwf	??_USBCtrlEPAllowDataStage
  6173  0CC7  3000               	movlw	0
  6174  0CC8  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  6175  0CC9  087C               	movf	_pBDTEntryEP0OutNext,w
  6176  0CCA  3E02               	addlw	2
  6177  0CCB  0086               	movwf	6
  6178  0CCC  0187               	clrf	7
  6179  0CCD  0874               	movf	??_USBCtrlEPAllowDataStage,w
  6180  0CCE  3FC0               	movwi [0]fsr1
  6181  0CCF  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  6182  0CD0  3FC1               	movwi [1]fsr1
  6183                           
  6184                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6185  0CD1  3048               	movlw	72
  6186  0CD2  00F4               	movwf	??_USBCtrlEPAllowDataStage
  6187  0CD3  087C               	movf	_pBDTEntryEP0OutNext,w
  6188  0CD4  0086               	movwf	6
  6189  0CD5  0187               	clrf	7
  6190  0CD6  0874               	movf	??_USBCtrlEPAllowDataStage,w
  6191  0CD7  0081               	movwf	1
  6192                           
  6193                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6194  0CD8  087C               	movf	_pBDTEntryEP0OutNext,w
  6195  0CD9  0086               	movwf	6
  6196  0CDA  0187               	clrf	7
  6197  0CDB  1781               	bsf	1,7
  6198                           
  6199                           ;usb_device.c: 1519: }
  6200  0CDC  0008               	return
  6201  0CDD                     l3839:	
  6202                           
  6203                           ;usb_device.c: 1520: else
  6204                           ;usb_device.c: 1521: {
  6205                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6206  0CDD  086E               	movf	((_inPipes+1)^(0+256)+3),w
  6207  0CDE  0020               	movlb	0	; select bank0
  6208  0CDF  0257               	subwf	87,w	;volatile
  6209  0CE0  1D03               	skipz
  6210  0CE1  2CE6               	goto	u3175
  6211  0CE2  0022               	movlb	2	; select bank2
  6212  0CE3  086D               	movf	(_inPipes^(0+256)+3),w
  6213  0CE4  0020               	movlb	0	; select bank0
  6214  0CE5  0256               	subwf	86,w	;volatile
  6215  0CE6                     u3175:	
  6216  0CE6  1803               	skipnc
  6217  0CE7  2CF1               	goto	l3843
  6218                           
  6219                           ;usb_device.c: 1525: {
  6220                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  6221  0CE8  0857               	movf	87,w	;volatile
  6222  0CE9  0022               	movlb	2	; select bank2
  6223  0CEA  01EE               	clrf	((_inPipes+1)^(0+256)+3)
  6224  0CEB  07EE               	addwf	((_inPipes+1)^(0+256)+3),f
  6225  0CEC  0020               	movlb	0	; select bank0
  6226  0CED  0856               	movf	86,w	;volatile
  6227  0CEE  0022               	movlb	2	; select bank2
  6228  0CEF  01ED               	clrf	(_inPipes^(0+256)+3)
  6229  0CF0  07ED               	addwf	(_inPipes^(0+256)+3),f
  6230  0CF1                     l3843:	
  6231                           
  6232                           ;usb_device.c: 1527: }
  6233                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  6234  0CF1  318E  26A4  318C   	fcall	_USBCtrlTrfTxService
  6235                           
  6236                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6237  0CF4  3058               	movlw	88
  6238  0CF5  00F4               	movwf	??_USBCtrlEPAllowDataStage
  6239  0CF6  3000               	movlw	0
  6240  0CF7  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  6241  0CF8  0022               	movlb	2	; select bank2
  6242  0CF9  0860               	movf	_pBDTEntryIn^(0+256),w
  6243  0CFA  3E02               	addlw	2
  6244  0CFB  0086               	movwf	6
  6245  0CFC  0187               	clrf	7
  6246  0CFD  0874               	movf	??_USBCtrlEPAllowDataStage,w
  6247  0CFE  3FC0               	movwi [0]fsr1
  6248  0CFF  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  6249  0D00  3FC1               	movwi [1]fsr1
  6250                           
  6251                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6252  0D01  3048               	movlw	72
  6253  0D02  00F4               	movwf	??_USBCtrlEPAllowDataStage
  6254  0D03  0860               	movf	_pBDTEntryIn^(0+256),w
  6255  0D04  0086               	movwf	6
  6256  0D05  0187               	clrf	7
  6257  0D06  0874               	movf	??_USBCtrlEPAllowDataStage,w
  6258  0D07  0081               	movwf	1
  6259                           
  6260                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6261  0D08  0860               	movf	_pBDTEntryIn^(0+256),w
  6262  0D09  0086               	movwf	6
  6263  0D0A  0187               	clrf	7
  6264  0D0B  1781               	bsf	1,7
  6265  0D0C  0008               	return
  6266  0D0D                     __end_of_USBCtrlEPAllowDataStage:	
  6267                           
  6268                           	psect	text15
  6269  0EA4                     __ptext15:	
  6270 ;; *************** function _USBCtrlTrfTxService *****************
  6271 ;; Defined at:
  6272 ;;		line 1791 in file "../framework/usb/usb_device.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  byteToSend      1    3[COMMON] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;		None               void
  6279 ;; Registers used:
  6280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;Total ram usage:        3 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    1
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_USBCtrlEPAllowDataStage
  6297 ;;		_USBCtrlTrfInHandler
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _USBCtrlTrfTxService
  6303  0EA4                     _USBCtrlTrfTxService:	
  6304                           
  6305                           ;usb_device.c: 1792: uint8_t byteToSend;
  6306                           ;usb_device.c: 1796: byteToSend = 8;
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  6310  0EA4  3008               	movlw	8
  6311  0EA5  00F1               	movwf	??_USBCtrlTrfTxService
  6312  0EA6  0871               	movf	??_USBCtrlTrfTxService,w
  6313  0EA7  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  6314                           
  6315                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  6316  0EA8  3000               	movlw	0
  6317  0EA9  0022               	movlb	2	; select bank2
  6318  0EAA  026E               	subwf	((_inPipes+1)^(0+256)+3),w
  6319  0EAB  3008               	movlw	8
  6320  0EAC  1903               	skipnz
  6321  0EAD  026D               	subwf	(_inPipes^(0+256)+3),w
  6322  0EAE  1803               	skipnc
  6323  0EAF  2EC3               	goto	l577
  6324                           
  6325                           ;usb_device.c: 1798: {
  6326                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  6327  0EB0  086D               	movf	(_inPipes^(0+256)+3),w
  6328  0EB1  00F1               	movwf	??_USBCtrlTrfTxService
  6329  0EB2  0871               	movf	??_USBCtrlTrfTxService,w
  6330  0EB3  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  6331                           
  6332                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  6333  0EB4  0023               	movlb	3	; select bank3
  6334  0EB5  08D5               	movf	_shortPacketStatus^(0+384),f
  6335  0EB6  1D03               	skipz
  6336  0EB7  2EBB               	goto	l3859
  6337                           
  6338                           ;usb_device.c: 1807: {
  6339                           ;usb_device.c: 1808: shortPacketStatus = 1;
  6340  0EB8  01D5               	clrf	_shortPacketStatus^(0+384)
  6341  0EB9  0AD5               	incf	_shortPacketStatus^(0+384),f
  6342                           
  6343                           ;usb_device.c: 1809: }
  6344  0EBA  2EC3               	goto	l577
  6345  0EBB                     l3859:	
  6346                           
  6347                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  6348  0EBB  0855               	movf	_shortPacketStatus^(0+384),w
  6349  0EBC  3A01               	xorlw	1
  6350  0EBD  1D03               	skipz
  6351  0EBE  2EC3               	goto	l577
  6352                           
  6353                           ;usb_device.c: 1811: {
  6354                           ;usb_device.c: 1812: shortPacketStatus = 2;
  6355  0EBF  3002               	movlw	2
  6356  0EC0  00F1               	movwf	??_USBCtrlTrfTxService
  6357  0EC1  0871               	movf	??_USBCtrlTrfTxService,w
  6358  0EC2  00D5               	movwf	_shortPacketStatus^(0+384)
  6359  0EC3                     l577:	
  6360                           
  6361                           ;usb_device.c: 1813: }
  6362                           ;usb_device.c: 1814: }
  6363                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  6364  0EC3  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  6365  0EC4  00F1               	movwf	??_USBCtrlTrfTxService
  6366  0EC5  01F2               	clrf	??_USBCtrlTrfTxService+1
  6367  0EC6  0871               	movf	??_USBCtrlTrfTxService,w
  6368  0EC7  0022               	movlb	2	; select bank2
  6369  0EC8  02ED               	subwf	(_inPipes^(0+256)+3),f
  6370  0EC9  0872               	movf	??_USBCtrlTrfTxService+1,w
  6371  0ECA  3BEE               	subwfb	((_inPipes+1)^(0+256)+3),f
  6372                           
  6373                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  6374  0ECB  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  6375  0ECC  00F1               	movwf	??_USBCtrlTrfTxService
  6376  0ECD  0A60               	incf	_pBDTEntryIn^(0+256),w
  6377  0ECE  0086               	movwf	6
  6378  0ECF  0187               	clrf	7
  6379  0ED0  0871               	movf	??_USBCtrlTrfTxService,w
  6380  0ED1  0081               	movwf	1
  6381                           
  6382                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  6383  0ED2  3058               	movlw	88
  6384  0ED3  00F1               	movwf	??_USBCtrlTrfTxService
  6385  0ED4  0871               	movf	??_USBCtrlTrfTxService,w
  6386  0ED5  0023               	movlb	3	; select bank3
  6387  0ED6  00D1               	movwf	_pDst^(0+384)
  6388                           
  6389                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  6390  0ED7  0022               	movlb	2	; select bank2
  6391  0ED8  1C6C               	btfss	(_inPipes^(0+256)+2),0
  6392  0ED9  2EF4               	goto	l3879
  6393  0EDA  2F11               	goto	l3889
  6394  0EDB                     l3871:	
  6395                           ;usb_device.c: 1829: {
  6396                           ;usb_device.c: 1830: while(byteToSend)
  6397                           
  6398                           
  6399                           ;usb_device.c: 1831: {
  6400                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  6401  0EDB  0022               	movlb	2	; select bank2
  6402  0EDC  086A               	movf	_inPipes^(0+256),w
  6403  0EDD  0084               	movwf	4
  6404  0EDE  086B               	movf	(_inPipes+1)^(0+256),w
  6405  0EDF  0085               	movwf	5
  6406  0EE0  0800               	movf	0,w	;code access
  6407  0EE1  00F1               	movwf	??_USBCtrlTrfTxService
  6408  0EE2  0023               	movlb	3	; select bank3
  6409  0EE3  0851               	movf	_pDst^(0+384),w
  6410  0EE4  0086               	movwf	6
  6411  0EE5  0187               	clrf	7
  6412  0EE6  0871               	movf	??_USBCtrlTrfTxService,w
  6413  0EE7  0081               	movwf	1
  6414  0EE8  3001               	movlw	1
  6415  0EE9  0022               	movlb	2	; select bank2
  6416  0EEA  07EA               	addwf	_inPipes^(0+256),f
  6417  0EEB  3000               	movlw	0
  6418  0EEC  3DEB               	addwfc	(_inPipes+1)^(0+256),f
  6419  0EED  3001               	movlw	1
  6420  0EEE  00F1               	movwf	??_USBCtrlTrfTxService
  6421  0EEF  0871               	movf	??_USBCtrlTrfTxService,w
  6422  0EF0  0023               	movlb	3	; select bank3
  6423  0EF1  07D1               	addwf	_pDst^(0+384),f
  6424                           
  6425                           ;usb_device.c: 1833: byteToSend--;
  6426  0EF2  3001               	movlw	1
  6427  0EF3  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  6428  0EF4                     l3879:	
  6429  0EF4  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  6430  0EF5  1903               	btfsc	3,2
  6431  0EF6  0008               	return
  6432  0EF7  2EDB               	goto	l3871
  6433  0EF8                     l3881:	
  6434                           ;usb_device.c: 1836: else
  6435                           ;usb_device.c: 1837: {
  6436                           ;usb_device.c: 1838: while(byteToSend)
  6437                           
  6438                           ;usb_device.c: 1834: }
  6439                           ;usb_device.c: 1835: }
  6440                           
  6441                           
  6442                           ;usb_device.c: 1839: {
  6443                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  6444  0EF8  0022               	movlb	2	; select bank2
  6445  0EF9  086A               	movf	_inPipes^(0+256),w
  6446  0EFA  0084               	movwf	4
  6447  0EFB  086B               	movf	(_inPipes+1)^(0+256),w
  6448  0EFC  0085               	movwf	5
  6449  0EFD  0800               	movf	0,w	;code access
  6450  0EFE  00F1               	movwf	??_USBCtrlTrfTxService
  6451  0EFF  0023               	movlb	3	; select bank3
  6452  0F00  0851               	movf	_pDst^(0+384),w
  6453  0F01  0086               	movwf	6
  6454  0F02  0187               	clrf	7
  6455  0F03  0871               	movf	??_USBCtrlTrfTxService,w
  6456  0F04  0081               	movwf	1
  6457  0F05  3001               	movlw	1
  6458  0F06  0022               	movlb	2	; select bank2
  6459  0F07  07EA               	addwf	_inPipes^(0+256),f
  6460  0F08  3000               	movlw	0
  6461  0F09  3DEB               	addwfc	(_inPipes+1)^(0+256),f
  6462  0F0A  3001               	movlw	1
  6463  0F0B  00F1               	movwf	??_USBCtrlTrfTxService
  6464  0F0C  0871               	movf	??_USBCtrlTrfTxService,w
  6465  0F0D  0023               	movlb	3	; select bank3
  6466  0F0E  07D1               	addwf	_pDst^(0+384),f
  6467                           
  6468                           ;usb_device.c: 1841: byteToSend--;
  6469  0F0F  3001               	movlw	1
  6470  0F10  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  6471  0F11                     l3889:	
  6472  0F11  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  6473  0F12  1903               	btfsc	3,2
  6474  0F13  0008               	return
  6475  0F14  2EF8               	goto	l3881
  6476  0F15                     __end_of_USBCtrlTrfTxService:	
  6477                           
  6478                           	psect	text16
  6479  0DCE                     __ptext16:	
  6480 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6481 ;; Defined at:
  6482 ;;		line 1436 in file "../framework/usb/usb_device.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;		None               void
  6489 ;; Registers used:
  6490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;Total ram usage:        2 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_USBDeviceTasks
  6507 ;;		_USBCtrlEPServiceComplete
  6508 ;;		_USBCtrlTrfRxService
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _USBCtrlEPAllowStatusStage
  6514  0DCE                     _USBCtrlEPAllowStatusStage:	
  6515                           
  6516                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6520  0DCE  0023               	movlb	3	; select bank3
  6521  0DCF  08C7               	movf	_USBStatusStageEnabledFlag1^(0+384),f
  6522  0DD0  1D03               	skipz
  6523  0DD1  0008               	return
  6524                           
  6525                           ;usb_device.c: 1443: {
  6526                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  6527  0DD2  3001               	movlw	1
  6528  0DD3  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6529  0DD4  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6530  0DD5  00C7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6531                           
  6532                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  6533  0DD6  08C8               	movf	_USBStatusStageEnabledFlag2^(0+384),f
  6534  0DD7  1D03               	skipz
  6535  0DD8  0008               	return
  6536                           
  6537                           ;usb_device.c: 1446: {
  6538                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  6539  0DD9  3001               	movlw	1
  6540  0DDA  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6541  0DDB  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6542  0DDC  00C8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6543                           
  6544                           ;usb_device.c: 1451: if(controlTransferState == 2)
  6545  0DDD  0022               	movlb	2	; select bank2
  6546  0DDE  0868               	movf	_controlTransferState^(0+256),w
  6547  0DDF  3A02               	xorlw	2
  6548  0DE0  1D03               	skipz
  6549  0DE1  2DF2               	goto	l3691
  6550                           
  6551                           ;usb_device.c: 1452: {
  6552                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  6553  0DE2  0A60               	incf	_pBDTEntryIn^(0+256),w
  6554  0DE3  0086               	movwf	6
  6555  0DE4  0187               	clrf	7
  6556  0DE5  0181               	clrf	1
  6557                           
  6558                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6559  0DE6  3048               	movlw	72
  6560  0DE7  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6561  0DE8  0860               	movf	_pBDTEntryIn^(0+256),w
  6562  0DE9  0086               	movwf	6
  6563  0DEA  0187               	clrf	7
  6564  0DEB  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6565  0DEC  0081               	movwf	1
  6566                           
  6567                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6568  0DED  0860               	movf	_pBDTEntryIn^(0+256),w
  6569  0DEE  0086               	movwf	6
  6570  0DEF  0187               	clrf	7
  6571  0DF0  1781               	bsf	1,7
  6572                           
  6573                           ;usb_device.c: 1456: }
  6574  0DF1  0008               	return
  6575  0DF2                     l3691:	
  6576                           
  6577                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  6578  0DF2  0868               	movf	_controlTransferState^(0+256),w
  6579  0DF3  3A01               	xorlw	1
  6580  0DF4  1D03               	skipz
  6581  0DF5  0008               	return
  6582                           
  6583                           ;usb_device.c: 1458: {
  6584                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  6585  0DF6  0023               	movlb	3	; select bank3
  6586  0DF7  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)
  6587                           
  6588                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  6589  0DF8  3008               	movlw	8
  6590  0DF9  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6591  0DFA  0021               	movlb	1	; select bank1
  6592  0DFB  0A6F               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  6593  0DFC  0086               	movwf	6
  6594  0DFD  0187               	clrf	7
  6595  0DFE  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6596  0DFF  0081               	movwf	1
  6597                           
  6598                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6599  0E00  3050               	movlw	80
  6600  0E01  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6601  0E02  3000               	movlw	0
  6602  0E03  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  6603  0E04  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6604  0E05  3E02               	addlw	2
  6605  0E06  0086               	movwf	6
  6606  0E07  0187               	clrf	7
  6607  0E08  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6608  0E09  3FC0               	movwi [0]fsr1
  6609  0E0A  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  6610  0E0B  3FC1               	movwi [1]fsr1
  6611                           
  6612                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6613  0E0C  3004               	movlw	4
  6614  0E0D  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6615  0E0E  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6616  0E0F  0086               	movwf	6
  6617  0E10  0187               	clrf	7
  6618  0E11  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6619  0E12  0081               	movwf	1
  6620                           
  6621                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6622  0E13  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6623  0E14  0086               	movwf	6
  6624  0E15  0187               	clrf	7
  6625  0E16  1781               	bsf	1,7
  6626                           
  6627                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  6628  0E17  0023               	movlb	3	; select bank3
  6629  0E18  01C1               	clrf	_BothEP0OutUOWNsSet^(0+384)
  6630  0E19  0AC1               	incf	_BothEP0OutUOWNsSet^(0+384),f
  6631                           
  6632                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  6633  0E1A  3008               	movlw	8
  6634  0E1B  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6635  0E1C  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6636  0E1D  0086               	movwf	6
  6637  0E1E  0187               	clrf	7
  6638  0E1F  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6639  0E20  0081               	movwf	1
  6640                           
  6641                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6642  0E21  3050               	movlw	80
  6643  0E22  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6644  0E23  3000               	movlw	0
  6645  0E24  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  6646  0E25  087C               	movf	_pBDTEntryEP0OutNext,w
  6647  0E26  3E02               	addlw	2
  6648  0E27  0086               	movwf	6
  6649  0E28  0187               	clrf	7
  6650  0E29  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6651  0E2A  3FC0               	movwi [0]fsr1
  6652  0E2B  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  6653  0E2C  3FC1               	movwi [1]fsr1
  6654                           
  6655                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  6656  0E2D  3080               	movlw	128
  6657  0E2E  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6658  0E2F  087C               	movf	_pBDTEntryEP0OutNext,w
  6659  0E30  0086               	movwf	6
  6660  0E31  0187               	clrf	7
  6661  0E32  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6662  0E33  0081               	movwf	1
  6663  0E34  0008               	return
  6664  0E35                     __end_of_USBCtrlEPAllowStatusStage:	
  6665                           
  6666                           	psect	text17
  6667  0996                     __ptext17:	
  6668 ;; *************** function _USBStallHandler *****************
  6669 ;; Defined at:
  6670 ;;		line 2222 in file "../framework/usb/usb_device.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;Total ram usage:        1 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_USBDeviceTasks
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _USBStallHandler
  6700  0996                     _USBStallHandler:	
  6701                           
  6702                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6706  0996  003D               	movlb	29	; select bank29
  6707  0997  1C18               	btfss	24,0	;volatile
  6708  0998  29B7               	goto	l3721
  6709                           
  6710                           ;usb_device.c: 2234: {
  6711                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6712  0999  0021               	movlb	1	; select bank1
  6713  099A  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6714  099B  0086               	movwf	6
  6715  099C  0187               	clrf	7
  6716  099D  0801               	movf	1,w
  6717  099E  3A80               	xorlw	128
  6718  099F  1D03               	skipz
  6719  09A0  29B5               	goto	l3719
  6720  09A1  0022               	movlb	2	; select bank2
  6721  09A2  0860               	movf	_pBDTEntryIn^(0+256),w
  6722  09A3  0086               	movwf	6
  6723  09A4  0187               	clrf	7
  6724  09A5  0801               	movf	1,w
  6725  09A6  3A84               	xorlw	132
  6726  09A7  1D03               	skipz
  6727  09A8  29B5               	goto	l3719
  6728                           
  6729                           ;usb_device.c: 2237: {
  6730                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6731  09A9  300C               	movlw	12
  6732  09AA  00F1               	movwf	??_USBStallHandler
  6733  09AB  0021               	movlb	1	; select bank1
  6734  09AC  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6735  09AD  0086               	movwf	6
  6736  09AE  0187               	clrf	7
  6737  09AF  0871               	movf	??_USBStallHandler,w
  6738  09B0  0081               	movwf	1
  6739                           
  6740                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6741  09B1  086F               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6742  09B2  0086               	movwf	6
  6743  09B3  0187               	clrf	7
  6744  09B4  1781               	bsf	1,7
  6745  09B5                     l3719:	
  6746                           
  6747                           ;usb_device.c: 2241: }
  6748                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  6749  09B5  003D               	movlb	29	; select bank29
  6750  09B6  1018               	bcf	24,0	;volatile
  6751  09B7                     l3721:	
  6752                           
  6753                           ;usb_device.c: 2243: }
  6754                           ;usb_device.c: 2245: (UIR &= 0xDF);
  6755  09B7  30DF               	movlw	223
  6756  09B8  00F1               	movwf	??_USBStallHandler
  6757  09B9  0871               	movf	??_USBStallHandler,w
  6758  09BA  0590               	andwf	16,f	;volatile
  6759  09BB  0008               	return
  6760  09BC                     __end_of_USBStallHandler:	
  6761                           
  6762                           	psect	text18
  6763  08AA                     __ptext18:	
  6764 ;; *************** function _USBIncrement1msInternalTimers *****************
  6765 ;; Defined at:
  6766 ;;		line 3051 in file "../framework/usb/usb_device.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;		None
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;		None
  6771 ;; Return value:  Size  Location     Type
  6772 ;;		None               void
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;Total ram usage:        1 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; Hardware stack levels required when called:    1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_USBDeviceTasks
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _USBIncrement1msInternalTimers
  6796  08AA                     _USBIncrement1msInternalTimers:	
  6797                           
  6798                           ;usb_device.c: 3058: USB1msTickCount++;
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  6802  08AA  3001               	movlw	1
  6803  08AB  0023               	movlb	3	; select bank3
  6804  08AC  07AA               	addwf	_USB1msTickCount^(0+384),f
  6805  08AD  3000               	movlw	0
  6806  08AE  3DAB               	addwfc	(_USB1msTickCount+1)^(0+384),f
  6807  08AF  3000               	movlw	0
  6808  08B0  3DAC               	addwfc	(_USB1msTickCount+2)^(0+384),f
  6809  08B1  3000               	movlw	0
  6810  08B2  3DAD               	addwfc	(_USB1msTickCount+3)^(0+384),f
  6811                           
  6812                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  6813  08B3  08C4               	movf	_USBBusIsSuspended^(0+384),f
  6814  08B4  1D03               	skipz
  6815  08B5  0008               	return
  6816                           
  6817                           ;usb_device.c: 3060: {
  6818                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  6819  08B6  3001               	movlw	1
  6820  08B7  00F1               	movwf	??_USBIncrement1msInternalTimers
  6821  08B8  0871               	movf	??_USBIncrement1msInternalTimers,w
  6822  08B9  07CA               	addwf	_USBTicksSinceSuspendEnd^(0+384),f
  6823                           
  6824                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  6825  08BA  08CA               	movf	_USBTicksSinceSuspendEnd^(0+384),f
  6826  08BB  1D03               	skipz
  6827  08BC  0008               	return
  6828                           
  6829                           ;usb_device.c: 3064: {
  6830                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  6831  08BD  30FF               	movlw	255
  6832  08BE  00F1               	movwf	??_USBIncrement1msInternalTimers
  6833  08BF  0871               	movf	??_USBIncrement1msInternalTimers,w
  6834  08C0  00CA               	movwf	_USBTicksSinceSuspendEnd^(0+384)
  6835  08C1  0008               	return
  6836  08C2                     __end_of_USBIncrement1msInternalTimers:	
  6837                           
  6838                           	psect	text19
  6839  0915                     __ptext19:	
  6840 ;; *************** function _USBSuspend *****************
  6841 ;; Defined at:
  6842 ;;		line 2265 in file "../framework/usb/usb_device.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;Total ram usage:        1 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    6
  6863 ;; This function calls:
  6864 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6865 ;; This function is called by:
  6866 ;;		_USBDeviceTasks
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           
  6871                           ;psect for function _USBSuspend
  6872  0915                     _USBSuspend:	
  6873                           
  6874                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  6875                           
  6876                           ;incstack = 0
  6877                           ; Regs used in _USBSuspend: [allreg]
  6878  0915  003D               	movlb	29	; select bank29
  6879  0916  1512               	bsf	18,2	;volatile
  6880                           
  6881                           ;usb_device.c: 2290: (UIR &= 0xEF);
  6882  0917  30EF               	movlw	239
  6883  0918  0020               	movlb	0	; select bank0
  6884  0919  00EB               	movwf	??_USBSuspend
  6885  091A  086B               	movf	??_USBSuspend,w
  6886  091B  003D               	movlb	29	; select bank29
  6887  091C  0590               	andwf	16,f	;volatile
  6888                           
  6889                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  6890  091D  148E               	bsf	14,1	;volatile
  6891                           
  6892                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  6893  091E  0023               	movlb	3	; select bank3
  6894  091F  01C4               	clrf	_USBBusIsSuspended^(0+384)
  6895  0920  0AC4               	incf	_USBBusIsSuspended^(0+384),f
  6896                           
  6897                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  6898  0921  01CA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  6899                           
  6900                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6901  0922  3075               	movlw	117
  6902  0923  0020               	movlb	0	; select bank0
  6903  0924  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6904  0925  3000               	movlw	0
  6905  0926  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6906  0927  3000               	movlw	0
  6907  0928  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6908  0929  3000               	movlw	0
  6909  092A  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6910  092B  3000               	movlw	0
  6911  092C  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6912  092D  3000               	movlw	0
  6913  092E  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  6914  092F  318A  227F         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6915  0931  0008               	return
  6916  0932                     __end_of_USBSuspend:	
  6917                           
  6918                           	psect	text20
  6919  0950                     __ptext20:	
  6920 ;; *************** function _USBWakeFromSuspend *****************
  6921 ;; Defined at:
  6922 ;;		line 2323 in file "../framework/usb/usb_device.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;Total ram usage:        1 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    6
  6943 ;; This function calls:
  6944 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6945 ;; This function is called by:
  6946 ;;		_USBDeviceTasks
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function _USBWakeFromSuspend
  6952  0950                     _USBWakeFromSuspend:	
  6953                           
  6954                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  6955                           
  6956                           ;incstack = 0
  6957                           ; Regs used in _USBWakeFromSuspend: [allreg]
  6958  0950  0023               	movlb	3	; select bank3
  6959  0951  01C4               	clrf	_USBBusIsSuspended^(0+384)
  6960                           
  6961                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6962  0952  3074               	movlw	116
  6963  0953  0020               	movlb	0	; select bank0
  6964  0954  00E5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6965  0955  3000               	movlw	0
  6966  0956  00E6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6967  0957  3000               	movlw	0
  6968  0958  00E7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6969  0959  3000               	movlw	0
  6970  095A  00E8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6971  095B  3000               	movlw	0
  6972  095C  00E9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6973  095D  3000               	movlw	0
  6974  095E  00EA               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  6975  095F  318A  227F  3189   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6976                           
  6977                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  6978  0962  003D               	movlb	29	; select bank29
  6979  0963  108E               	bcf	14,1	;volatile
  6980                           
  6981                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  6982  0964  1112               	bcf	18,2	;volatile
  6983  0965                     l4977:	
  6984                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  6985                           
  6986  0965  1D10               	btfss	16,2	;volatile
  6987  0966  296E               	goto	l4979
  6988                           
  6989                           ;usb_device.c: 2362: {
  6990                           ;usb_device.c: 2363: (UIR &= 0xFB);
  6991  0967  30FB               	movlw	251
  6992  0968  0020               	movlb	0	; select bank0
  6993  0969  00EB               	movwf	??_USBWakeFromSuspend
  6994  096A  086B               	movf	??_USBWakeFromSuspend,w
  6995  096B  003D               	movlb	29	; select bank29
  6996  096C  0590               	andwf	16,f	;volatile
  6997  096D  2965               	goto	l4977
  6998  096E                     l4979:	
  6999                           
  7000                           ;usb_device.c: 2364: }
  7001                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  7002  096E  0023               	movlb	3	; select bank3
  7003  096F  01CA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  7004  0970  0008               	return
  7005  0971                     __end_of_USBWakeFromSuspend:	
  7006                           
  7007                           	psect	text21
  7008  0A7F                     __ptext21:	
  7009 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7010 ;; Defined at:
  7011 ;;		line 114 in file "../src/main.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  event           2    5[BANK0 ] enum E2680
  7014 ;;  pdata           2    7[BANK0 ] PTR void 
  7015 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  7016 ;;  size            2    9[BANK0 ] unsigned int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      unsigned char 
  7021 ;; Registers used:
  7022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;Total ram usage:        6 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:    5
  7035 ;; This function calls:
  7036 ;;		_APP_DeviceCDCBasicDemoInitialize
  7037 ;;		_APP_LEDUpdateUSBStatus
  7038 ;;		_USBCheckCDCRequest
  7039 ;; This function is called by:
  7040 ;;		_USBDeviceTasks
  7041 ;;		_USBStdSetCfgHandler
  7042 ;;		_USBSuspend
  7043 ;;		_USBWakeFromSuspend
  7044 ;;		_USBCtrlTrfSetupHandler
  7045 ;;		_USBCheckStdRequest
  7046 ;;		_USBStdFeatureReqHandler
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           
  7051                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7052  0A7F                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7053                           
  7054                           ;main.c: 115: switch( (int) event )
  7055                           
  7056                           ;incstack = 0
  7057                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  7058  0A7F  2A8F               	goto	l4895
  7059  0A80                     l4883:	
  7060                           ;main.c: 120: case EVENT_SOF:
  7061                           
  7062                           ;main.c: 118: break;
  7063                           
  7064                           ;main.c: 116: {
  7065                           ;main.c: 117: case EVENT_TRANSFER:
  7066                           
  7067                           
  7068                           ;main.c: 123: APP_LEDUpdateUSBStatus();
  7069  0A80  318C  2414         	fcall	_APP_LEDUpdateUSBStatus
  7070                           
  7071                           ;main.c: 124: break;
  7072  0A82  0008               	return
  7073  0A83                     l4885:	
  7074                           ;main.c: 126: case EVENT_SUSPEND:
  7075                           
  7076                           
  7077                           ;main.c: 128: APP_LEDUpdateUSBStatus();
  7078  0A83  318C  2414         	fcall	_APP_LEDUpdateUSBStatus
  7079                           
  7080                           ;main.c: 129: break;
  7081  0A85  0008               	return
  7082  0A86                     l4887:	
  7083                           ;main.c: 131: case EVENT_RESUME:
  7084                           
  7085                           
  7086                           ;main.c: 133: APP_LEDUpdateUSBStatus();
  7087  0A86  318C  2414         	fcall	_APP_LEDUpdateUSBStatus
  7088                           
  7089                           ;main.c: 134: break;
  7090  0A88  0008               	return
  7091  0A89                     l4889:	
  7092                           ;main.c: 136: case EVENT_CONFIGURED:
  7093                           
  7094                           
  7095                           ;main.c: 139: APP_DeviceCDCBasicDemoInitialize();
  7096  0A89  3188  2081         	fcall	_APP_DeviceCDCBasicDemoInitialize
  7097                           
  7098                           ;main.c: 143: break;
  7099                           
  7100                           ;main.c: 142: case EVENT_SET_DESCRIPTOR:
  7101                           
  7102                           ;main.c: 140: break;
  7103  0A8B  0008               	return
  7104  0A8C                     l4891:	
  7105                           ;main.c: 145: case EVENT_EP0_REQUEST:
  7106                           
  7107                           
  7108                           ;main.c: 148: USBCheckCDCRequest();
  7109  0A8C  318D  256C         	fcall	_USBCheckCDCRequest
  7110                           
  7111                           ;main.c: 159: }
  7112                           
  7113                           ;main.c: 158: break;
  7114                           
  7115                           ;main.c: 157: default:
  7116                           
  7117                           ;main.c: 155: break;
  7118                           
  7119                           ;main.c: 154: case EVENT_TRANSFER_TERMINATED:
  7120                           
  7121                           ;main.c: 152: break;
  7122                           
  7123                           ;main.c: 151: case EVENT_BUS_ERROR:
  7124                           
  7125                           ;main.c: 149: break;
  7126  0A8E  0008               	return
  7127  0A8F                     l4895:	
  7128                           
  7129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7130                           ; Switch size 1, requested type "space"
  7131                           ; Number of cases is 2, Range of values is 0 to 127
  7132                           ; switch strategies available:
  7133                           ; Name         Instructions Cycles
  7134                           ; simple_byte            7     4 (average)
  7135                           ; direct_byte          262     6 (fixed)
  7136                           ; jumptable            260     6 (fixed)
  7137                           ; rangetable           132     6 (fixed)
  7138                           ; spacedrange          261     8 (fixed)
  7139                           ; locatedrange         128     3 (fixed)
  7140                           ;	Chosen strategy is simple_byte
  7141  0A8F  0020               	movlb	0	; select bank0
  7142  0A90  0866               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7143  0A91  3A00               	xorlw	0	; case 0
  7144  0A92  1903               	skipnz
  7145  0A93  2A98               	goto	l5459
  7146  0A94  3A7F               	xorlw	127	; case 127
  7147  0A95  1903               	skipnz
  7148  0A96  2AB2               	goto	l5461
  7149  0A97  2AB7               	goto	l110
  7150  0A98                     l5459:	
  7151                           
  7152                           ; Switch size 1, requested type "space"
  7153                           ; Number of cases is 8, Range of values is 1 to 117
  7154                           ; switch strategies available:
  7155                           ; Name         Instructions Cycles
  7156                           ; simple_byte           25    13 (average)
  7157                           ; direct_byte          243     9 (fixed)
  7158                           ; jumptable            263     9 (fixed)
  7159                           ;	Chosen strategy is simple_byte
  7160  0A98  0865               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7161  0A99  3A01               	xorlw	1	; case 1
  7162  0A9A  1903               	skipnz
  7163  0A9B  2A89               	goto	l4889
  7164  0A9C  3A03               	xorlw	3	; case 2
  7165  0A9D  1903               	skipnz
  7166  0A9E  2AB7               	goto	l110
  7167  0A9F  3A01               	xorlw	1	; case 3
  7168  0AA0  1903               	skipnz
  7169  0AA1  2A8C               	goto	l4891
  7170  0AA2  3A06               	xorlw	6	; case 5
  7171  0AA3  1903               	skipnz
  7172  0AA4  2AB7               	goto	l110
  7173  0AA5  3A77               	xorlw	119	; case 114
  7174  0AA6  1903               	skipnz
  7175  0AA7  2AB7               	goto	l110
  7176  0AA8  3A01               	xorlw	1	; case 115
  7177  0AA9  1903               	skipnz
  7178  0AAA  2A80               	goto	l4883
  7179  0AAB  3A07               	xorlw	7	; case 116
  7180  0AAC  1903               	skipnz
  7181  0AAD  2A86               	goto	l4887
  7182  0AAE  3A01               	xorlw	1	; case 117
  7183  0AAF  1903               	skipnz
  7184  0AB0  2A83               	goto	l4885
  7185  0AB1  2AB7               	goto	l110
  7186  0AB2                     l5461:	
  7187                           
  7188                           ; Switch size 1, requested type "space"
  7189                           ; Number of cases is 1, Range of values is 255 to 255
  7190                           ; switch strategies available:
  7191                           ; Name         Instructions Cycles
  7192                           ; simple_byte            4     3 (average)
  7193                           ; direct_byte            7     5 (fixed)
  7194                           ; jumptable            263     9 (fixed)
  7195                           ;	Chosen strategy is simple_byte
  7196  0AB2  0865               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7197  0AB3  3AFF               	xorlw	255	; case 255
  7198  0AB4  1903               	skipnz
  7199  0AB5  2AB7               	goto	l110
  7200  0AB6  2AB7               	goto	l110
  7201  0AB7                     l110:	
  7202                           ;main.c: 160: return 1;
  7203                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7204                           
  7205  0AB7  0008               	return
  7206  0AB8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7207                           
  7208                           	psect	text22
  7209  0D6C                     __ptext22:	
  7210 ;; *************** function _USBCheckCDCRequest *****************
  7211 ;; Defined at:
  7212 ;;		line 205 in file "../framework/usb/usb_device_cdc.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;		None               void
  7219 ;; Registers used:
  7220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;Total ram usage:        1 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    1
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           
  7241                           ;psect for function _USBCheckCDCRequest
  7242  0D6C                     _USBCheckCDCRequest:	
  7243                           
  7244                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  7245                           
  7246                           ;incstack = 0
  7247                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7248  0D6C  0020               	movlb	0	; select bank0
  7249  0D6D  0850               	movf	80,w	;volatile
  7250  0D6E  391F               	andlw	31
  7251  0D6F  3A01               	xorlw	1
  7252  0D70  1D03               	btfss	3,2
  7253  0D71  0008               	return
  7254                           
  7255                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  7256  0D72  0E50               	swapf	80,w	;volatile
  7257  0D73  0C89               	rrf	9,f
  7258  0D74  3903               	andlw	3
  7259  0D75  3A01               	xorlw	1
  7260  0D76  1D03               	btfss	3,2
  7261  0D77  0008               	return
  7262                           
  7263                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  7264                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  7265  0D78  0854               	movf	84,w	;volatile
  7266  0D79  1903               	btfsc	3,2
  7267  0D7A  2DBB               	goto	l4951
  7268  0D7B  0854               	movf	84,w	;volatile
  7269  0D7C  3A01               	xorlw	1
  7270  0D7D  1D03               	btfss	3,2
  7271  0D7E  0008               	return
  7272  0D7F  2DBB               	goto	l4951
  7273  0D80                     l4919:	
  7274                           ;usb_device_cdc.c: 224: {
  7275                           ;usb_device_cdc.c: 226: case 0x00:
  7276                           
  7277                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
  7278                           
  7279                           
  7280                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7281  0D80  30D9               	movlw	low _dummy_encapsulated_cmd_response
  7282  0D81  0022               	movlb	2	; select bank2
  7283  0D82  00EA               	movwf	_inPipes^(0+256)
  7284  0D83  3001               	movlw	high _dummy_encapsulated_cmd_response
  7285  0D84  00EB               	movwf	(_inPipes+1)^(0+256)
  7286                           
  7287                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  7288  0D85  3008               	movlw	8
  7289  0D86  00ED               	movwf	(_inPipes^(0+256)+3)
  7290  0D87  3000               	movlw	0
  7291  0D88  00EE               	movwf	(_inPipes^(0+256)+4)
  7292                           
  7293                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7294  0D89  146C               	bsf	(_inPipes^(0+256)+2),0
  7295                           
  7296                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  7297  0D8A  17EC               	bsf	(_inPipes^(0+256)+2),7
  7298                           
  7299                           ;usb_device_cdc.c: 232: break;
  7300  0D8B  0008               	return
  7301  0D8C                     l4927:	
  7302                           ;usb_device_cdc.c: 233: case 0x01:
  7303                           
  7304                           
  7305                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7306  0D8C  30D9               	movlw	low _dummy_encapsulated_cmd_response
  7307  0D8D  0022               	movlb	2	; select bank2
  7308  0D8E  00EA               	movwf	_inPipes^(0+256)
  7309  0D8F  3001               	movlw	high _dummy_encapsulated_cmd_response
  7310  0D90  00EB               	movwf	(_inPipes+1)^(0+256)
  7311                           
  7312                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
  7313  0D91  17EC               	bsf	(_inPipes^(0+256)+2),7
  7314                           
  7315                           ;usb_device_cdc.c: 237: break;
  7316  0D92  0008               	return
  7317  0D93                     l4931:	
  7318                           ;usb_device_cdc.c: 241: case 0x20:
  7319                           
  7320                           
  7321                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  7322  0D93  0020               	movlb	0	; select bank0
  7323  0D94  0857               	movf	87,w	;volatile
  7324  0D95  0023               	movlb	3	; select bank3
  7325  0D96  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  7326  0D97  07A4               	addwf	((_outPipes+1)^(0+384)+3),f
  7327  0D98  0020               	movlb	0	; select bank0
  7328  0D99  0856               	movf	86,w	;volatile
  7329  0D9A  0023               	movlb	3	; select bank3
  7330  0D9B  01A3               	clrf	(_outPipes^(0+384)+3)
  7331  0D9C  07A3               	addwf	(_outPipes^(0+384)+3),f
  7332                           
  7333                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7334  0D9D  30E1               	movlw	_line_coding& (0+255)
  7335  0D9E  00F1               	movwf	??_USBCheckCDCRequest
  7336  0D9F  0871               	movf	??_USBCheckCDCRequest,w
  7337  0DA0  00A0               	movwf	_outPipes^(0+384)
  7338                           
  7339                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  7340  0DA1  01A5               	clrf	(_outPipes+5)^(0+384)
  7341                           
  7342                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  7343  0DA2  17A2               	bsf	(_outPipes^(0+384)+2),7
  7344                           
  7345                           ;usb_device_cdc.c: 246: break;
  7346  0DA3  0008               	return
  7347  0DA4                     l4939:	
  7348                           ;usb_device_cdc.c: 248: case 0x21:
  7349                           
  7350                           
  7351                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7352  0DA4  30E1               	movlw	low _line_coding
  7353  0DA5  0022               	movlb	2	; select bank2
  7354  0DA6  00EA               	movwf	_inPipes^(0+256)
  7355  0DA7  3001               	movlw	high _line_coding
  7356  0DA8  00EB               	movwf	(_inPipes+1)^(0+256)
  7357  0DA9  3007               	movlw	7
  7358  0DAA  00ED               	movwf	(_inPipes^(0+256)+3)
  7359  0DAB  3000               	movlw	0
  7360  0DAC  00EE               	movwf	(_inPipes^(0+256)+4)
  7361  0DAD  30C1               	movlw	193
  7362  0DAE  00F1               	movwf	??_USBCheckCDCRequest
  7363  0DAF  0871               	movf	??_USBCheckCDCRequest,w
  7364  0DB0  00EC               	movwf	(_inPipes^(0+256)+2)
  7365                           
  7366                           ;usb_device_cdc.c: 253: break;
  7367  0DB1  0008               	return
  7368  0DB2                     l4945:	
  7369                           ;usb_device_cdc.c: 255: case 0x22:
  7370                           
  7371                           
  7372                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7373  0DB2  0020               	movlb	0	; select bank0
  7374  0DB3  0852               	movf	82,w	;volatile
  7375  0DB4  00F1               	movwf	??_USBCheckCDCRequest
  7376  0DB5  0871               	movf	??_USBCheckCDCRequest,w
  7377  0DB6  0023               	movlb	3	; select bank3
  7378  0DB7  00CE               	movwf	_control_signal_bitmap^(0+384)
  7379                           
  7380                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
  7381  0DB8  0022               	movlb	2	; select bank2
  7382  0DB9  17EC               	bsf	(_inPipes^(0+256)+2),7
  7383                           
  7384                           ;usb_device_cdc.c: 315: }
  7385                           
  7386                           ;usb_device_cdc.c: 314: break;
  7387                           
  7388                           ;usb_device_cdc.c: 313: default:
  7389                           
  7390                           ;usb_device_cdc.c: 289: break;
  7391  0DBA  0008               	return
  7392  0DBB                     l4951:	
  7393  0DBB  0020               	movlb	0	; select bank0
  7394  0DBC  0851               	movf	81,w	;volatile
  7395                           
  7396                           ; Switch size 1, requested type "space"
  7397                           ; Number of cases is 5, Range of values is 0 to 34
  7398                           ; switch strategies available:
  7399                           ; Name         Instructions Cycles
  7400                           ; simple_byte           16     9 (average)
  7401                           ; direct_byte           76     6 (fixed)
  7402                           ; jumptable            260     6 (fixed)
  7403                           ; rangetable            39     4 (fixed)
  7404                           ; spacedrange           75     6 (fixed)
  7405                           ; locatedrange          35     3 (fixed)
  7406                           ;	Chosen strategy is simple_byte
  7407  0DBD  3A00               	xorlw	0	; case 0
  7408  0DBE  1903               	skipnz
  7409  0DBF  2D80               	goto	l4919
  7410  0DC0  3A01               	xorlw	1	; case 1
  7411  0DC1  1903               	skipnz
  7412  0DC2  2D8C               	goto	l4927
  7413  0DC3  3A21               	xorlw	33	; case 32
  7414  0DC4  1903               	skipnz
  7415  0DC5  2D93               	goto	l4931
  7416  0DC6  3A01               	xorlw	1	; case 33
  7417  0DC7  1903               	skipnz
  7418  0DC8  2DA4               	goto	l4939
  7419  0DC9  3A03               	xorlw	3	; case 34
  7420  0DCA  1903               	skipnz
  7421  0DCB  2DB2               	goto	l4945
  7422  0DCC  2DCD               	goto	l783
  7423  0DCD                     l783:	
  7424  0DCD  0008               	return
  7425  0DCE                     __end_of_USBCheckCDCRequest:	
  7426                           
  7427                           	psect	text23
  7428  0C14                     __ptext23:	
  7429 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  7430 ;; Defined at:
  7431 ;;		line 76 in file "../src/app_led_usb_status.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;		None               void
  7438 ;; Registers used:
  7439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    2
  7452 ;; This function calls:
  7453 ;;		_LED_Off
  7454 ;;		_LED_On
  7455 ;; This function is called by:
  7456 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           
  7461                           ;psect for function _APP_LEDUpdateUSBStatus
  7462  0C14                     _APP_LEDUpdateUSBStatus:	
  7463                           
  7464                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  7465                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  7466                           
  7467                           ;incstack = 0
  7468                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7469  0C14  003D               	movlb	29	; select bank29
  7470  0C15  1C8E               	btfss	14,1	;volatile
  7471  0C16  2C57               	goto	l4729
  7472                           
  7473                           ;app_led_usb_status.c: 80: {
  7474                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
  7475  0C17  3001               	movlw	1
  7476  0C18  3188  2040         	fcall	_LED_Off
  7477                           
  7478                           ;app_led_usb_status.c: 82: return;
  7479  0C1A  0008               	return
  7480  0C1B                     l4703:	
  7481                           ;app_led_usb_status.c: 86: {
  7482                           ;app_led_usb_status.c: 87: case CONFIGURED_STATE:
  7483                           
  7484                           ;app_led_usb_status.c: 83: }
  7485                           ;app_led_usb_status.c: 85: switch(USBDeviceState)
  7486                           
  7487                           
  7488                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  7489  0C1B  3001               	movlw	1
  7490  0C1C  0023               	movlb	3	; select bank3
  7491  0C1D  0637               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  7492  0C1E  0438               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7493  0C1F  1D03               	skipz
  7494  0C20  2C26               	goto	l4707
  7495                           
  7496                           ;app_led_usb_status.c: 91: {
  7497                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
  7498  0C21  3001               	movlw	1
  7499  0C22  3188  204E  318C   	fcall	_LED_On
  7500                           
  7501                           ;app_led_usb_status.c: 93: }
  7502  0C25  2C5D               	goto	l4731
  7503  0C26                     l4707:	
  7504                           
  7505                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  7506  0C26  304B               	movlw	75
  7507  0C27  0023               	movlb	3	; select bank3
  7508  0C28  0637               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  7509  0C29  0438               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7510  0C2A  1D03               	skipz
  7511  0C2B  2C31               	goto	l4711
  7512                           
  7513                           ;app_led_usb_status.c: 95: {
  7514                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
  7515  0C2C  3001               	movlw	1
  7516  0C2D  3188  2040  318C   	fcall	_LED_Off
  7517                           
  7518                           ;app_led_usb_status.c: 97: }
  7519  0C30  2C5D               	goto	l4731
  7520  0C31                     l4711:	
  7521                           
  7522                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  7523  0C31  3000               	movlw	0
  7524  0C32  0023               	movlb	3	; select bank3
  7525  0C33  0238               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7526  0C34  3097               	movlw	151
  7527  0C35  2C50               	goto	L9
  7528  0C36                     l4715:	
  7529                           ;app_led_usb_status.c: 104: default:
  7530                           
  7531                           ;app_led_usb_status.c: 101: }
  7532                           ;app_led_usb_status.c: 102: break;
  7533                           
  7534                           ;app_led_usb_status.c: 99: {
  7535                           ;app_led_usb_status.c: 100: ledCount = 0;
  7536                           
  7537                           
  7538                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  7539  0C36  3001               	movlw	1
  7540  0C37  0023               	movlb	3	; select bank3
  7541  0C38  0637               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  7542  0C39  0438               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7543  0C3A  1D03               	skipz
  7544  0C3B  2C41               	goto	l4719
  7545                           
  7546                           ;app_led_usb_status.c: 108: {
  7547                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
  7548  0C3C  3001               	movlw	1
  7549  0C3D  3188  204E  318C   	fcall	_LED_On
  7550                           
  7551                           ;app_led_usb_status.c: 110: }
  7552  0C40  2C5D               	goto	l4731
  7553  0C41                     l4719:	
  7554                           
  7555                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  7556  0C41  3032               	movlw	50
  7557  0C42  0023               	movlb	3	; select bank3
  7558  0C43  0637               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  7559  0C44  0438               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7560  0C45  1D03               	skipz
  7561  0C46  2C4C               	goto	l4723
  7562                           
  7563                           ;app_led_usb_status.c: 112: {
  7564                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
  7565  0C47  3001               	movlw	1
  7566  0C48  3188  2040  318C   	fcall	_LED_Off
  7567                           
  7568                           ;app_led_usb_status.c: 114: }
  7569  0C4B  2C5D               	goto	l4731
  7570  0C4C                     l4723:	
  7571                           
  7572                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  7573  0C4C  3003               	movlw	3
  7574  0C4D  0023               	movlb	3	; select bank3
  7575  0C4E  0238               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  7576  0C4F  30B7               	movlw	183
  7577  0C50                     L9:	
  7578  0C50  1903               	skipnz
  7579  0C51  0237               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  7580  0C52  1C03               	skipc
  7581  0C53  2C5D               	goto	l4731
  7582                           
  7583                           ;app_led_usb_status.c: 116: {
  7584                           ;app_led_usb_status.c: 117: ledCount = 0;
  7585  0C54  01B7               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+384)
  7586  0C55  01B8               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384)
  7587                           
  7588                           ;app_led_usb_status.c: 120: }
  7589                           
  7590                           ;app_led_usb_status.c: 118: }
  7591                           ;app_led_usb_status.c: 119: break;
  7592  0C56  2C5D               	goto	l4731
  7593  0C57                     l4729:	
  7594  0C57  0022               	movlb	2	; select bank2
  7595  0C58  0866               	movf	_USBDeviceState^(0+256),w
  7596                           
  7597                           ; Switch size 1, requested type "space"
  7598                           ; Number of cases is 1, Range of values is 32 to 32
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; simple_byte            4     3 (average)
  7602                           ; direct_byte           11     9 (fixed)
  7603                           ; jumptable            263     9 (fixed)
  7604                           ;	Chosen strategy is simple_byte
  7605  0C59  3A20               	xorlw	32	; case 32
  7606  0C5A  1903               	skipnz
  7607  0C5B  2C1B               	goto	l4703
  7608  0C5C  2C36               	goto	l4715
  7609  0C5D                     l4731:	
  7610                           
  7611                           ;app_led_usb_status.c: 123: ledCount++;
  7612  0C5D  3001               	movlw	1
  7613  0C5E  0023               	movlb	3	; select bank3
  7614  0C5F  07B7               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),f
  7615  0C60  3000               	movlw	0
  7616  0C61  3DB8               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),f
  7617  0C62  0008               	return
  7618  0C63                     __end_of_APP_LEDUpdateUSBStatus:	
  7619                           
  7620                           	psect	text24
  7621  084E                     __ptext24:	
  7622 ;; *************** function _LED_On *****************
  7623 ;; Defined at:
  7624 ;;		line 54 in file "../bsp/pic16f1459/leds.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  led             1    wreg     enum E2
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  led             1    1[COMMON] enum E2
  7629 ;; Return value:  Size  Location     Type
  7630 ;;		None               void
  7631 ;; Registers used:
  7632 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;Total ram usage:        1 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_APP_LEDUpdateUSBStatus
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _LED_On
  7654  084E                     _LED_On:	
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  7658                           ;LED_On@led stored from wreg
  7659  084E  00F1               	movwf	LED_On@led
  7660                           
  7661                           ;leds.c: 55: switch(led)
  7662  084F  2853               	goto	l4743
  7663  0850                     l320:	
  7664                           ;leds.c: 56: {
  7665                           ;leds.c: 57: case LED_D1:
  7666                           
  7667                           
  7668                           ;leds.c: 58: LATCbits.LATC2 = 1;
  7669  0850  0022               	movlb	2	; select bank2
  7670  0851  150E               	bsf	14,2	;volatile
  7671                           
  7672                           ;leds.c: 63: }
  7673                           
  7674                           ;leds.c: 62: break;
  7675                           
  7676                           ;leds.c: 61: case LED_NONE:
  7677                           
  7678                           ;leds.c: 59: break;
  7679  0852  0008               	return
  7680  0853                     l4743:	
  7681  0853  0871               	movf	LED_On@led,w
  7682                           
  7683                           ; Switch size 1, requested type "space"
  7684                           ; Number of cases is 2, Range of values is 0 to 1
  7685                           ; switch strategies available:
  7686                           ; Name         Instructions Cycles
  7687                           ; simple_byte            7     4 (average)
  7688                           ; direct_byte           10     6 (fixed)
  7689                           ; jumptable            260     6 (fixed)
  7690                           ; rangetable             6     4 (fixed)
  7691                           ; spacedrange            9     6 (fixed)
  7692                           ; locatedrange           2     3 (fixed)
  7693                           ;	Chosen strategy is simple_byte
  7694  0854  3A00               	xorlw	0	; case 0
  7695  0855  1903               	skipnz
  7696  0856  285B               	goto	l323
  7697  0857  3A01               	xorlw	1	; case 1
  7698  0858  1903               	skipnz
  7699  0859  2850               	goto	l320
  7700  085A  285B               	goto	l323
  7701  085B                     l323:	
  7702  085B  0008               	return
  7703  085C                     __end_of_LED_On:	
  7704                           
  7705                           	psect	text25
  7706  0840                     __ptext25:	
  7707 ;; *************** function _LED_Off *****************
  7708 ;; Defined at:
  7709 ;;		line 83 in file "../bsp/pic16f1459/leds.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  led             1    wreg     enum E2
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  led             1    1[COMMON] enum E2
  7714 ;; Return value:  Size  Location     Type
  7715 ;;		None               void
  7716 ;; Registers used:
  7717 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;Total ram usage:        1 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    1
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_APP_LEDUpdateUSBStatus
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           
  7738                           ;psect for function _LED_Off
  7739  0840                     _LED_Off:	
  7740                           
  7741                           ;incstack = 0
  7742                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  7743                           ;LED_Off@led stored from wreg
  7744  0840  00F1               	movwf	LED_Off@led
  7745                           
  7746                           ;leds.c: 84: switch(led)
  7747  0841  2845               	goto	l4737
  7748  0842                     l327:	
  7749                           ;leds.c: 85: {
  7750                           ;leds.c: 86: case LED_D1:
  7751                           
  7752                           
  7753                           ;leds.c: 87: LATCbits.LATC2 = 0;
  7754  0842  0022               	movlb	2	; select bank2
  7755  0843  110E               	bcf	14,2	;volatile
  7756                           
  7757                           ;leds.c: 92: }
  7758                           
  7759                           ;leds.c: 91: break;
  7760                           
  7761                           ;leds.c: 90: case LED_NONE:
  7762                           
  7763                           ;leds.c: 88: break;
  7764  0844  0008               	return
  7765  0845                     l4737:	
  7766  0845  0871               	movf	LED_Off@led,w
  7767                           
  7768                           ; Switch size 1, requested type "space"
  7769                           ; Number of cases is 2, Range of values is 0 to 1
  7770                           ; switch strategies available:
  7771                           ; Name         Instructions Cycles
  7772                           ; simple_byte            7     4 (average)
  7773                           ; direct_byte           10     6 (fixed)
  7774                           ; jumptable            260     6 (fixed)
  7775                           ; rangetable             6     4 (fixed)
  7776                           ; spacedrange            9     6 (fixed)
  7777                           ; locatedrange           2     3 (fixed)
  7778                           ;	Chosen strategy is simple_byte
  7779  0846  3A00               	xorlw	0	; case 0
  7780  0847  1903               	skipnz
  7781  0848  284D               	goto	l330
  7782  0849  3A01               	xorlw	1	; case 1
  7783  084A  1903               	skipnz
  7784  084B  2842               	goto	l327
  7785  084C  284D               	goto	l330
  7786  084D                     l330:	
  7787  084D  0008               	return
  7788  084E                     __end_of_LED_Off:	
  7789                           
  7790                           	psect	text26
  7791  0881                     __ptext26:	
  7792 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  7793 ;; Defined at:
  7794 ;;		line 65 in file "../src/app_device_cdc_basic.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;		None               void
  7801 ;; Registers used:
  7802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;Total ram usage:        1 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    4
  7815 ;; This function calls:
  7816 ;;		_CDCInitEP
  7817 ;; This function is called by:
  7818 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function _APP_DeviceCDCBasicDemoInitialize
  7824  0881                     _APP_DeviceCDCBasicDemoInitialize:	
  7825                           
  7826                           ;app_device_cdc_basic.c: 66: CDCInitEP();
  7827                           
  7828                           ;incstack = 0
  7829                           ; Regs used in _APP_DeviceCDCBasicDemoInitialize: [allreg]
  7830  0881  318A  22F2         	fcall	_CDCInitEP
  7831                           
  7832                           ;app_device_cdc_basic.c: 69: line_coding.bCharFormat = 0;
  7833  0883  0023               	movlb	3	; select bank3
  7834  0884  01E5               	clrf	(_line_coding^(0+384)+4)
  7835                           
  7836                           ;app_device_cdc_basic.c: 70: line_coding.bDataBits = 8;
  7837  0885  3008               	movlw	8
  7838  0886  00FB               	movwf	??_APP_DeviceCDCBasicDemoInitialize
  7839  0887  087B               	movf	??_APP_DeviceCDCBasicDemoInitialize,w
  7840  0888  00E7               	movwf	(_line_coding^(0+384)+6)
  7841                           
  7842                           ;app_device_cdc_basic.c: 71: line_coding.bParityType = 0;
  7843  0889  01E6               	clrf	(_line_coding^(0+384)+5)
  7844                           
  7845                           ;app_device_cdc_basic.c: 72: line_coding.dwDTERate = 9600;
  7846  088A  3000               	movlw	0
  7847  088B  00E4               	movwf	(_line_coding+3)^(0+384)
  7848  088C  3000               	movlw	0
  7849  088D  00E3               	movwf	(_line_coding+2)^(0+384)
  7850  088E  3025               	movlw	37
  7851  088F  00E2               	movwf	(_line_coding+1)^(0+384)
  7852  0890  3080               	movlw	128
  7853  0891  00E1               	movwf	_line_coding^(0+384)
  7854                           
  7855                           ;app_device_cdc_basic.c: 74: buttonPressed = 0;
  7856  0892  01CB               	clrf	_buttonPressed^(0+384)
  7857  0893  0008               	return
  7858  0894                     __end_of_APP_DeviceCDCBasicDemoInitialize:	
  7859                           
  7860                           	psect	text27
  7861  0AF2                     __ptext27:	
  7862 ;; *************** function _CDCInitEP *****************
  7863 ;; Defined at:
  7864 ;;		line 352 in file "../framework/usb/usb_device_cdc.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;		None               void
  7871 ;; Registers used:
  7872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;Total ram usage:        2 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    3
  7885 ;; This function calls:
  7886 ;;		_USBEnableEndpoint
  7887 ;;		_USBTransferOnePacket
  7888 ;; This function is called by:
  7889 ;;		_APP_DeviceCDCBasicDemoInitialize
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _CDCInitEP
  7895  0AF2                     _CDCInitEP:	
  7896                           
  7897                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7901  0AF2  3000               	movlw	0
  7902  0AF3  0023               	movlb	3	; select bank3
  7903  0AF4  00E4               	movwf	(_line_coding+3)^(0+384)
  7904  0AF5  3000               	movlw	0
  7905  0AF6  00E3               	movwf	(_line_coding+2)^(0+384)
  7906  0AF7  304B               	movlw	75
  7907  0AF8  00E2               	movwf	(_line_coding+1)^(0+384)
  7908  0AF9  3000               	movlw	0
  7909  0AFA  00E1               	movwf	_line_coding^(0+384)
  7910                           
  7911                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  7912  0AFB  01E5               	clrf	(_line_coding^(0+384)+4)
  7913                           
  7914                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
  7915  0AFC  01E6               	clrf	(_line_coding^(0+384)+5)
  7916                           
  7917                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  7918  0AFD  3008               	movlw	8
  7919  0AFE  0020               	movlb	0	; select bank0
  7920  0AFF  00E3               	movwf	??_CDCInitEP
  7921  0B00  0863               	movf	??_CDCInitEP,w
  7922  0B01  0023               	movlb	3	; select bank3
  7923  0B02  00E7               	movwf	(_line_coding^(0+384)+6)
  7924                           
  7925                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  7926  0B03  01CD               	clrf	_cdc_rx_len^(0+384)
  7927                           
  7928                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  7929  0B04  301A               	movlw	26
  7930  0B05  0020               	movlb	0	; select bank0
  7931  0B06  00E3               	movwf	??_CDCInitEP
  7932  0B07  0863               	movf	??_CDCInitEP,w
  7933  0B08  00F8               	movwf	?_USBEnableEndpoint
  7934  0B09  3001               	movlw	1
  7935  0B0A  3189  2171  318A   	fcall	_USBEnableEndpoint
  7936                           
  7937                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7938  0B0D  301E               	movlw	30
  7939  0B0E  0020               	movlb	0	; select bank0
  7940  0B0F  00E3               	movwf	??_CDCInitEP
  7941  0B10  0863               	movf	??_CDCInitEP,w
  7942  0B11  00F8               	movwf	?_USBEnableEndpoint
  7943  0B12  3002               	movlw	2
  7944  0B13  3189  2171  318A   	fcall	_USBEnableEndpoint
  7945                           
  7946                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7947  0B16  01F1               	clrf	?_USBTransferOnePacket
  7948  0B17  3020               	movlw	32
  7949  0B18  00F2               	movwf	?_USBTransferOnePacket+1
  7950  0B19  3001               	movlw	1
  7951  0B1A  00F3               	movwf	?_USBTransferOnePacket+2
  7952  0B1B  3040               	movlw	64
  7953  0B1C  0020               	movlb	0	; select bank0
  7954  0B1D  00E3               	movwf	??_CDCInitEP
  7955  0B1E  0863               	movf	??_CDCInitEP,w
  7956  0B1F  00F4               	movwf	?_USBTransferOnePacket+3
  7957  0B20  3002               	movlw	2
  7958  0B21  318B  232D         	fcall	_USBTransferOnePacket
  7959  0B23  0020               	movlb	0	; select bank0
  7960  0B24  00E4               	movwf	??_CDCInitEP+1
  7961  0B25  0864               	movf	??_CDCInitEP+1,w
  7962  0B26  0022               	movlb	2	; select bank2
  7963  0B27  00E4               	movwf	_CDCDataOutHandle^(0+256)
  7964                           
  7965                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  7966  0B28  0023               	movlb	3	; select bank3
  7967  0B29  01C2               	clrf	_CDCDataInHandle^(0+384)
  7968                           
  7969                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  7970  0B2A  0021               	movlb	1	; select bank1
  7971  0B2B  01EE               	clrf	_cdc_trf_state^(0+128)
  7972  0B2C  0008               	return
  7973  0B2D                     __end_of_CDCInitEP:	
  7974                           
  7975                           	psect	text28
  7976  0971                     __ptext28:	
  7977 ;; *************** function _USBEnableEndpoint *****************
  7978 ;; Defined at:
  7979 ;;		line 898 in file "../framework/usb/usb_device.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  ep              1    wreg     unsigned char 
  7982 ;;  options         1    8[COMMON] unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  ep              1    2[BANK0 ] unsigned char 
  7985 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7986 ;;		 -> UEP0(1), 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;		None               void
  7989 ;; Registers used:
  7990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7996 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;Total ram usage:        6 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    2
  8003 ;; This function calls:
  8004 ;;		_USBConfigureEndpoint
  8005 ;; This function is called by:
  8006 ;;		_CDCInitEP
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _USBEnableEndpoint
  8012  0971                     _USBEnableEndpoint:	
  8013                           
  8014                           ;incstack = 0
  8015                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8016                           ;USBEnableEndpoint@ep stored from wreg
  8017  0971  0020               	movlb	0	; select bank0
  8018  0972  00E2               	movwf	USBEnableEndpoint@ep
  8019                           
  8020                           ;usb_device.c: 899: unsigned char* p;
  8021                           ;usb_device.c: 903: if(options & 0x04)
  8022  0973  1D78               	btfss	USBEnableEndpoint@options,2
  8023  0974  297A               	goto	l5031
  8024                           
  8025                           ;usb_device.c: 904: {
  8026                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  8027  0975  01F1               	clrf	?_USBConfigureEndpoint
  8028  0976  0862               	movf	USBEnableEndpoint@ep,w
  8029  0977  3182  22BA  3189   	fcall	_USBConfigureEndpoint
  8030  097A                     l5031:	
  8031                           
  8032                           ;usb_device.c: 906: }
  8033                           ;usb_device.c: 907: if(options & 0x02)
  8034  097A  1CF8               	btfss	USBEnableEndpoint@options,1
  8035  097B  2982               	goto	l5035
  8036                           
  8037                           ;usb_device.c: 908: {
  8038                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  8039  097C  01F1               	clrf	?_USBConfigureEndpoint
  8040  097D  0AF1               	incf	?_USBConfigureEndpoint,f
  8041  097E  0020               	movlb	0	; select bank0
  8042  097F  0862               	movf	USBEnableEndpoint@ep,w
  8043  0980  3182  22BA         	fcall	_USBConfigureEndpoint
  8044  0982                     l5035:	
  8045                           
  8046                           ;usb_device.c: 910: }
  8047                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  8048  0982  0020               	movlb	0	; select bank0
  8049  0983  0862               	movf	USBEnableEndpoint@ep,w
  8050  0984  3E98               	addlw	152
  8051  0985  00F9               	movwf	??_USBEnableEndpoint
  8052  0986  01FA               	clrf	??_USBEnableEndpoint+1
  8053  0987  300E               	movlw	14
  8054  0988  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  8055  0989  0879               	movf	??_USBEnableEndpoint,w
  8056  098A  00E0               	movwf	USBEnableEndpoint@p
  8057  098B  087A               	movf	??_USBEnableEndpoint+1,w
  8058  098C  00E1               	movwf	USBEnableEndpoint@p+1
  8059                           
  8060                           ;usb_device.c: 920: *p = options;
  8061  098D  0878               	movf	USBEnableEndpoint@options,w
  8062  098E  00F9               	movwf	??_USBEnableEndpoint
  8063  098F  0860               	movf	USBEnableEndpoint@p,w
  8064  0990  0086               	movwf	6
  8065  0991  0861               	movf	USBEnableEndpoint@p+1,w
  8066  0992  0087               	movwf	7
  8067  0993  0879               	movf	??_USBEnableEndpoint,w
  8068  0994  0081               	movwf	1
  8069  0995  0008               	return
  8070  0996                     __end_of_USBEnableEndpoint:	
  8071                           
  8072                           	psect	text29
  8073  02BA                     __ptext29:	
  8074 ;; *************** function _USBConfigureEndpoint *****************
  8075 ;; Defined at:
  8076 ;;		line 1563 in file "../framework/usb/usb_device.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  EPNum           1    wreg     unsigned char 
  8079 ;;  direction       1    1[COMMON] unsigned char 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  EPNum           1    6[COMMON] unsigned char 
  8082 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  8083 ;;		 -> BDT(48), 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;		None               void
  8086 ;; Registers used:
  8087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8093 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;Total ram usage:        7 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_USBEnableEndpoint
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function _USBConfigureEndpoint
  8109  02BA                     _USBConfigureEndpoint:	
  8110                           
  8111                           ;incstack = 0
  8112                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8113                           ;USBConfigureEndpoint@EPNum stored from wreg
  8114  02BA  00F6               	movwf	USBConfigureEndpoint@EPNum
  8115                           
  8116                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  8117                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  8118  02BB  3020               	movlw	32
  8119  02BC  00F2               	movwf	??_USBConfigureEndpoint
  8120  02BD  0872               	movf	??_USBConfigureEndpoint,w
  8121  02BE  00F7               	movwf	USBConfigureEndpoint@handle
  8122                           
  8123                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  8124  02BF  0871               	movf	USBConfigureEndpoint@direction,w
  8125  02C0  00F2               	movwf	??_USBConfigureEndpoint
  8126  02C1  3001               	movlw	1
  8127  02C2                     u4755:	
  8128  02C2  35F2               	lslf	??_USBConfigureEndpoint,f
  8129  02C3  0B89               	decfsz	9,f
  8130  02C4  2AC2               	goto	u4755
  8131  02C5  0876               	movf	USBConfigureEndpoint@EPNum,w
  8132  02C6  00F3               	movwf	??_USBConfigureEndpoint+1
  8133  02C7  3001               	movlw	1
  8134  02C8                     u4765:	
  8135  02C8  35F3               	lslf	??_USBConfigureEndpoint+1,f
  8136  02C9  3EFF               	addlw	-1
  8137  02CA  1D03               	skipz
  8138  02CB  2AC8               	goto	u4765
  8139  02CC  3573               	lslf	??_USBConfigureEndpoint+1,w
  8140  02CD  0772               	addwf	??_USBConfigureEndpoint,w
  8141  02CE  00F4               	movwf	??_USBConfigureEndpoint+2
  8142  02CF  3001               	movlw	1
  8143  02D0                     u4775:	
  8144  02D0  35F4               	lslf	??_USBConfigureEndpoint+2,f
  8145  02D1  3EFF               	addlw	-1
  8146  02D2  1D03               	skipz
  8147  02D3  2AD0               	goto	u4775
  8148  02D4  3574               	lslf	??_USBConfigureEndpoint+2,w
  8149  02D5  00F5               	movwf	??_USBConfigureEndpoint+3
  8150  02D6  0875               	movf	??_USBConfigureEndpoint+3,w
  8151  02D7  07F7               	addwf	USBConfigureEndpoint@handle,f
  8152                           
  8153                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  8154  02D8  0877               	movf	USBConfigureEndpoint@handle,w
  8155  02D9  0086               	movwf	6
  8156  02DA  0187               	clrf	7
  8157  02DB  1381               	bcf	1,7
  8158                           
  8159                           ;usb_device.c: 1576: if(direction == 0)
  8160  02DC  08F1               	movf	USBConfigureEndpoint@direction,f
  8161  02DD  1D03               	skipz
  8162  02DE  2AE4               	goto	l5049
  8163                           
  8164                           ;usb_device.c: 1577: {
  8165                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  8166  02DF  0877               	movf	USBConfigureEndpoint@handle,w
  8167  02E0  00F2               	movwf	??_USBConfigureEndpoint
  8168  02E1  0876               	movf	USBConfigureEndpoint@EPNum,w
  8169  02E2  3EB4               	addlw	_pBDTEntryOut& (0+255)
  8170  02E3  2AE8               	goto	L10
  8171  02E4                     l5049:	
  8172                           ;usb_device.c: 1579: }
  8173                           
  8174                           
  8175                           ;usb_device.c: 1580: else
  8176                           ;usb_device.c: 1581: {
  8177                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  8178  02E4  0877               	movf	USBConfigureEndpoint@handle,w
  8179  02E5  00F2               	movwf	??_USBConfigureEndpoint
  8180  02E6  0876               	movf	USBConfigureEndpoint@EPNum,w
  8181  02E7  3E60               	addlw	_pBDTEntryIn& (0+255)
  8182  02E8                     L10:	
  8183  02E8  0086               	movwf	6
  8184  02E9  3001               	movlw	1	; select bank2/3
  8185  02EA  0087               	movwf	7
  8186  02EB  0872               	movf	??_USBConfigureEndpoint,w
  8187  02EC  0081               	movwf	1
  8188                           
  8189                           ;usb_device.c: 1583: }
  8190                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  8191  02ED  0877               	movf	USBConfigureEndpoint@handle,w
  8192  02EE  0086               	movwf	6
  8193  02EF  0187               	clrf	7
  8194  02F0  1301               	bcf	1,6
  8195                           
  8196                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  8197  02F1  0877               	movf	USBConfigureEndpoint@handle,w
  8198  02F2  3E04               	addlw	4
  8199  02F3  0086               	movwf	6
  8200  02F4  0187               	clrf	7
  8201  02F5  1701               	bsf	1,6
  8202  02F6  0008               	return
  8203  02F7                     __end_of_USBConfigureEndpoint:	
  8204                           
  8205                           	psect	text30
  8206  057E                     __ptext30:	
  8207 ;; *************** function _USBDeviceInit *****************
  8208 ;; Defined at:
  8209 ;;		line 301 in file "../framework/usb/usb_device.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  p               2    3[COMMON] PTR unsigned char 
  8214 ;;		 -> UEP1(1), 
  8215 ;;  i               1    5[COMMON] unsigned char 
  8216 ;;  i               1    6[COMMON] unsigned char 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;		None               void
  8219 ;; Registers used:
  8220 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;Total ram usage:        6 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_main
  8237 ;;		_USBDeviceTasks
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           
  8242                           ;psect for function _USBDeviceInit
  8243  057E                     _USBDeviceInit:	
  8244                           
  8245                           ;usb_device.c: 302: uint8_t i;
  8246                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  8247                           
  8248                           ;incstack = 0
  8249                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8250  057E  0021               	movlb	1	; select bank1
  8251  057F  1112               	bcf	18,2	;volatile
  8252                           
  8253                           ;usb_device.c: 307: {UEIR = 0;};
  8254  0580  003D               	movlb	29	; select bank29
  8255  0581  0193               	clrf	19	;volatile
  8256                           
  8257                           ;usb_device.c: 310: {UIR = 0;};
  8258  0582  0190               	clrf	16	;volatile
  8259                           
  8260                           ;usb_device.c: 313: UEP0 = 0;
  8261  0583  0198               	clrf	24	;volatile
  8262                           
  8263                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8264  0584  300E               	movlw	14
  8265  0585  00F4               	movwf	USBDeviceInit@p+1
  8266  0586  3099               	movlw	153
  8267  0587  00F3               	movwf	USBDeviceInit@p
  8268  0588  01F5               	clrf	USBDeviceInit@i_1489
  8269  0589  3002               	movlw	2
  8270  058A  0275               	subwf	USBDeviceInit@i_1489,w
  8271  058B  1803               	btfsc	3,0
  8272  058C  2D9E               	goto	l3225
  8273  058D                     l3217:	
  8274  058D  0873               	movf	USBDeviceInit@p,w
  8275  058E  0086               	movwf	6
  8276  058F  0874               	movf	USBDeviceInit@p+1,w
  8277  0590  0087               	movwf	7
  8278  0591  0181               	clrf	1
  8279  0592  3001               	movlw	1
  8280  0593  07F3               	addwf	USBDeviceInit@p,f
  8281  0594  3000               	movlw	0
  8282  0595  3DF4               	addwfc	USBDeviceInit@p+1,f
  8283  0596  3001               	movlw	1
  8284  0597  00F1               	movwf	??_USBDeviceInit
  8285  0598  0871               	movf	??_USBDeviceInit,w
  8286  0599  07F5               	addwf	USBDeviceInit@i_1489,f
  8287  059A  3002               	movlw	2
  8288  059B  0275               	subwf	USBDeviceInit@i_1489,w
  8289  059C  1C03               	skipc
  8290  059D  2D8D               	goto	l3217
  8291  059E                     l3225:	
  8292                           
  8293                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8294  059E  3016               	movlw	22
  8295  059F  003D               	movlb	29	; select bank29
  8296  05A0  0091               	movwf	17	;volatile
  8297  05A1  309F               	movlw	159
  8298  05A2  0097               	movwf	23	;volatile
  8299  05A3  307B               	movlw	123
  8300  05A4  0092               	movwf	18	;volatile
  8301                           
  8302                           ;usb_device.c: 320: ;
  8303                           ;usb_device.c: 323: ;
  8304                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8305  05A5  01F6               	clrf	USBDeviceInit@i
  8306  05A6  300C               	movlw	12
  8307  05A7  0276               	subwf	USBDeviceInit@i,w
  8308  05A8  1803               	btfsc	3,0
  8309  05A9  2DC3               	goto	l485
  8310  05AA                     l3233:	
  8311                           
  8312                           ;usb_device.c: 327: {
  8313                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  8314  05AA  0876               	movf	USBDeviceInit@i,w
  8315  05AB  00F1               	movwf	??_USBDeviceInit
  8316  05AC  3001               	movlw	1
  8317  05AD                     u2385:	
  8318  05AD  35F1               	lslf	??_USBDeviceInit,f
  8319  05AE  3EFF               	addlw	-1
  8320  05AF  1D03               	skipz
  8321  05B0  2DAD               	goto	u2385
  8322  05B1  3571               	lslf	??_USBDeviceInit,w
  8323  05B2  3E20               	addlw	32
  8324  05B3  0086               	movwf	6
  8325  05B4  0187               	clrf	7
  8326  05B5  3000               	movlw	0
  8327  05B6  3FC0               	movwi [0]fsr1
  8328  05B7  3000               	movlw	0
  8329  05B8  3FC1               	movwi [1]fsr1
  8330  05B9  3FC2               	movwi [2]fsr1
  8331  05BA  3FC3               	movwi [3]fsr1
  8332  05BB  3001               	movlw	1
  8333  05BC  00F1               	movwf	??_USBDeviceInit
  8334  05BD  0871               	movf	??_USBDeviceInit,w
  8335  05BE  07F6               	addwf	USBDeviceInit@i,f
  8336  05BF  300C               	movlw	12
  8337  05C0  0276               	subwf	USBDeviceInit@i,w
  8338  05C1  1C03               	skipc
  8339  05C2  2DAA               	goto	l3233
  8340  05C3                     l485:	
  8341                           
  8342                           ;usb_device.c: 329: }
  8343                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  8344  05C3  003D               	movlb	29	; select bank29
  8345  05C4  170E               	bsf	14,6	;volatile
  8346                           
  8347                           ;usb_device.c: 335: UADDR = 0x00;
  8348  05C5  0196               	clrf	22	;volatile
  8349                           
  8350                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  8351  05C6  120E               	bcf	14,4	;volatile
  8352                           
  8353                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  8354  05C7  130E               	bcf	14,6	;volatile
  8355  05C8                     l3245:	
  8356                           ;usb_device.c: 344: do
  8357                           
  8358                           
  8359                           ;usb_device.c: 345: {
  8360                           ;usb_device.c: 346: (UIR &= 0xF7);
  8361  05C8  30F7               	movlw	247
  8362  05C9  00F1               	movwf	??_USBDeviceInit
  8363  05CA  0871               	movf	??_USBDeviceInit,w
  8364  05CB  0590               	andwf	16,f	;volatile
  8365                           
  8366                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  8367  05CC  0022               	movlb	2	; select bank2
  8368  05CD  01EC               	clrf	(_inPipes^(0+256)+2)
  8369                           
  8370                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  8371  05CE  0023               	movlb	3	; select bank3
  8372  05CF  01A2               	clrf	(_outPipes^(0+384)+2)
  8373                           
  8374                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  8375  05D0  01A3               	clrf	(_outPipes^(0+384)+3)
  8376  05D1  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  8377                           
  8378                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  8379  05D2  003D               	movlb	29	; select bank29
  8380  05D3  1990               	btfsc	16,3	;volatile
  8381  05D4  2DC8               	goto	l3245
  8382                           
  8383                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  8384  05D5  3001               	movlw	1
  8385  05D6  00F1               	movwf	??_USBDeviceInit
  8386  05D7  0871               	movf	??_USBDeviceInit,w
  8387  05D8  0023               	movlb	3	; select bank3
  8388  05D9  00C7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8389                           
  8390                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  8391  05DA  3001               	movlw	1
  8392  05DB  00F1               	movwf	??_USBDeviceInit
  8393  05DC  0871               	movf	??_USBDeviceInit,w
  8394  05DD  00C8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8395                           
  8396                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  8397  05DE  01C5               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  8398                           
  8399                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  8400  05DF  01C6               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  8401                           
  8402                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  8403  05E0  01C4               	clrf	_USBBusIsSuspended^(0+384)
  8404                           
  8405                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(2+1u); i++)
  8406  05E1  01F6               	clrf	USBDeviceInit@i
  8407  05E2  3003               	movlw	3
  8408  05E3  0276               	subwf	USBDeviceInit@i,w
  8409  05E4  1803               	btfsc	3,0
  8410  05E5  2E06               	goto	l3273
  8411  05E6                     l3267:	
  8412                           
  8413                           ;usb_device.c: 365: {
  8414                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  8415  05E6  0876               	movf	USBDeviceInit@i,w
  8416  05E7  3E60               	addlw	_pBDTEntryIn& (0+255)
  8417  05E8  0086               	movwf	6
  8418  05E9  3001               	movlw	1	; select bank2/3
  8419  05EA  0087               	movwf	7
  8420  05EB  0181               	clrf	1
  8421                           
  8422                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  8423  05EC  0876               	movf	USBDeviceInit@i,w
  8424  05ED  3EB4               	addlw	_pBDTEntryOut& (0+255)
  8425  05EE  0086               	movwf	6
  8426  05EF  3001               	movlw	1	; select bank3/4
  8427  05F0  0087               	movwf	7
  8428  05F1  0181               	clrf	1
  8429                           
  8430                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  8431  05F2  0876               	movf	USBDeviceInit@i,w
  8432  05F3  3EAE               	addlw	_ep_data_in& (0+255)
  8433  05F4  0086               	movwf	6
  8434  05F5  3001               	movlw	1	; select bank3/4
  8435  05F6  0087               	movwf	7
  8436  05F7  0181               	clrf	1
  8437                           
  8438                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  8439  05F8  0876               	movf	USBDeviceInit@i,w
  8440  05F9  3EB1               	addlw	_ep_data_out& (0+255)
  8441  05FA  0086               	movwf	6
  8442  05FB  3001               	movlw	1	; select bank3/4
  8443  05FC  0087               	movwf	7
  8444  05FD  0181               	clrf	1
  8445  05FE  3001               	movlw	1
  8446  05FF  00F1               	movwf	??_USBDeviceInit
  8447  0600  0871               	movf	??_USBDeviceInit,w
  8448  0601  07F6               	addwf	USBDeviceInit@i,f
  8449  0602  3003               	movlw	3
  8450  0603  0276               	subwf	USBDeviceInit@i,w
  8451  0604  1C03               	skipc
  8452  0605  2DE6               	goto	l3267
  8453  0606                     l3273:	
  8454                           
  8455                           ;usb_device.c: 370: }
  8456                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8457  0606  3028               	movlw	40
  8458  0607  00F1               	movwf	??_USBDeviceInit
  8459  0608  0871               	movf	??_USBDeviceInit,w
  8460  0609  0022               	movlb	2	; select bank2
  8461  060A  00E0               	movwf	_pBDTEntryIn^(0+256)
  8462                           
  8463                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  8464  060B  3016               	movlw	22
  8465  060C  003D               	movlb	29	; select bank29
  8466  060D  0098               	movwf	24	;volatile
  8467                           
  8468                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8469  060E  3050               	movlw	80
  8470  060F  00F1               	movwf	??_USBDeviceInit
  8471  0610  3000               	movlw	0
  8472  0611  00F2               	movwf	??_USBDeviceInit+1
  8473  0612  0871               	movf	??_USBDeviceInit,w
  8474  0613  0020               	movlb	0	; select bank0
  8475  0614  00A2               	movwf	34	;volatile
  8476  0615  0872               	movf	??_USBDeviceInit+1,w
  8477  0616  00A3               	movwf	35	;volatile
  8478                           
  8479                           ;usb_device.c: 378: BDT[0].CNT = 8;
  8480  0617  3008               	movlw	8
  8481  0618  00A1               	movwf	33	;volatile
  8482                           
  8483                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  8484  0619  3004               	movlw	4
  8485  061A  00F1               	movwf	??_USBDeviceInit
  8486  061B  0871               	movf	??_USBDeviceInit,w
  8487  061C  00A0               	movwf	32	;volatile
  8488                           
  8489                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  8490  061D  17A0               	bsf	32,7	;volatile
  8491                           
  8492                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  8493  061E  0023               	movlb	3	; select bank3
  8494  061F  01EA               	clrf	_USBActiveConfiguration^(0+384)
  8495                           
  8496                           ;usb_device.c: 385: USB1msTickCount = 0;
  8497  0620  3000               	movlw	0
  8498  0621  00AD               	movwf	(_USB1msTickCount+3)^(0+384)
  8499  0622  3000               	movlw	0
  8500  0623  00AC               	movwf	(_USB1msTickCount+2)^(0+384)
  8501  0624  3000               	movlw	0
  8502  0625  00AB               	movwf	(_USB1msTickCount+1)^(0+384)
  8503  0626  3000               	movlw	0
  8504  0627  00AA               	movwf	_USB1msTickCount^(0+384)
  8505                           
  8506                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  8507  0628  01CA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  8508                           
  8509                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  8510  0629  0022               	movlb	2	; select bank2
  8511  062A  01E6               	clrf	_USBDeviceState^(0+256)
  8512  062B  0008               	return
  8513  062C                     __end_of_USBDeviceInit:	
  8514                           
  8515                           	psect	text31
  8516  075A                     __ptext31:	
  8517 ;; *************** function _scan_task *****************
  8518 ;; Defined at:
  8519 ;;		line 126 in file "../src/scan.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      unsigned char 
  8526 ;; Registers used:
  8527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;Total ram usage:        5 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:    3
  8540 ;; This function calls:
  8541 ;;		_scan_init
  8542 ;;		_set_timer
  8543 ;;		_waiting_for_timer
  8544 ;;		_set_clock_and_data
  8545 ;;		_get_data
  8546 ;;		_is_end_of_scan
  8547 ;;		_run_adc
  8548 ;;		_is_adc_ready
  8549 ;;		_get_adc
  8550 ;;		_store_key_level
  8551 ;; This function is called by:
  8552 ;;		_main
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           
  8557                           ;psect for function _scan_task
  8558  075A                     _scan_task:	
  8559                           
  8560                           ;scan.c: 127: static uint8_t state = S_INIT;
  8561                           ;scan.c: 130: if (!is_initialized)
  8562                           
  8563                           ;incstack = 0
  8564                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8565  075A  0023               	movlb	3	; select bank3
  8566  075B  08D0               	movf	_is_initialized^(0+384),f
  8567  075C  1D03               	skipz
  8568  075D  2F61               	goto	l3287
  8569                           
  8570                           ;scan.c: 131: scan_init();
  8571  075E  3188  20F8  3187   	fcall	_scan_init
  8572  0761                     l3287:	
  8573                           
  8574                           ;scan.c: 133: if (waiting_for_timer()) return 0;
  8575  0761  3197  27F5  3187   	fcall	_waiting_for_timer
  8576  0764  3A00               	xorlw	0
  8577  0765  1903               	skipnz
  8578  0766  2FD4               	goto	l3325
  8579  0767  3000               	movlw	0
  8580  0768  0008               	return
  8581  0769                     l3293:	
  8582                           ;scan.c: 136: case(S_INIT):
  8583                           
  8584                           ;scan.c: 135: switch(state) {
  8585                           
  8586                           
  8587                           ;scan.c: 137: set_clock_and_data(0,1);
  8588  0769  01F1               	clrf	?_set_clock_and_data
  8589  076A  0AF1               	incf	?_set_clock_and_data,f
  8590  076B  3000               	movlw	0
  8591  076C  3188  20C2  3187   	fcall	_set_clock_and_data
  8592                           
  8593                           ;scan.c: 138: state = S_GO;
  8594  076F  0023               	movlb	3	; select bank3
  8595  0770  01D8               	clrf	scan_task@state^(0+384)
  8596  0771  0AD8               	incf	scan_task@state^(0+384),f
  8597                           
  8598                           ;scan.c: 139: set_timer();
  8599  0772  3197  27EA  3187   	fcall	_set_timer
  8600                           
  8601                           ;scan.c: 140: break;
  8602  0775  2FDF               	goto	l3327
  8603  0776                     l3299:	
  8604                           ;scan.c: 142: case(S_GO):
  8605                           
  8606                           
  8607                           ;scan.c: 143: set_clock_and_data(0,1);
  8608  0776  01F1               	clrf	?_set_clock_and_data
  8609  0777  0AF1               	incf	?_set_clock_and_data,f
  8610  0778  3000               	movlw	0
  8611  0779  3188  20C2  3187   	fcall	_set_clock_and_data
  8612                           
  8613                           ;scan.c: 144: state = S_CLOCK_RAISE;
  8614  077C  3002               	movlw	2
  8615  077D  00F9               	movwf	??_scan_task
  8616  077E  0879               	movf	??_scan_task,w
  8617  077F  0023               	movlb	3	; select bank3
  8618  0780  00D8               	movwf	scan_task@state^(0+384)
  8619                           
  8620                           ;scan.c: 145: set_timer();
  8621  0781  3197  27EA  3187   	fcall	_set_timer
  8622                           
  8623                           ;scan.c: 146: break;
  8624  0784  2FDF               	goto	l3327
  8625  0785                     l3303:	
  8626                           ;scan.c: 148: case(S_CLOCK_RAISE):
  8627                           
  8628                           
  8629                           ;scan.c: 149: set_clock_and_data(1, get_data());
  8630  0785  3197  27CA  3187   	fcall	_get_data
  8631  0788  00F9               	movwf	??_scan_task
  8632  0789  0879               	movf	??_scan_task,w
  8633  078A  00F1               	movwf	?_set_clock_and_data
  8634  078B  3001               	movlw	1
  8635  078C  3188  20C2  3187   	fcall	_set_clock_and_data
  8636                           
  8637                           ;scan.c: 150: state = S_CLOCK_FALL;
  8638  078F  3003               	movlw	3
  8639  0790  00F9               	movwf	??_scan_task
  8640  0791  0879               	movf	??_scan_task,w
  8641  0792  0023               	movlb	3	; select bank3
  8642  0793  00D8               	movwf	scan_task@state^(0+384)
  8643                           
  8644                           ;scan.c: 151: set_timer();
  8645  0794  3197  27EA  3187   	fcall	_set_timer
  8646                           
  8647                           ;scan.c: 152: break;
  8648  0797  2FDF               	goto	l3327
  8649  0798                     l3307:	
  8650                           ;scan.c: 154: case(S_CLOCK_FALL):
  8651                           
  8652                           
  8653                           ;scan.c: 155: set_clock_and_data(0,0);
  8654  0798  01F1               	clrf	?_set_clock_and_data
  8655  0799  3000               	movlw	0
  8656  079A  3188  20C2  3187   	fcall	_set_clock_and_data
  8657                           
  8658                           ;scan.c: 156: run_adc();
  8659  079D  3182  22F7  3187   	fcall	_run_adc
  8660                           
  8661                           ;scan.c: 157: state = S_ADC_WAIT;
  8662  07A0  3004               	movlw	4
  8663  07A1  00F9               	movwf	??_scan_task
  8664  07A2  0879               	movf	??_scan_task,w
  8665  07A3  0023               	movlb	3	; select bank3
  8666  07A4  00D8               	movwf	scan_task@state^(0+384)
  8667                           
  8668                           ;scan.c: 158: set_timer();
  8669  07A5  3197  27EA  3187   	fcall	_set_timer
  8670                           
  8671                           ;scan.c: 159: break;
  8672  07A8  2FDF               	goto	l3327
  8673  07A9                     l3311:	
  8674                           ;scan.c: 161: case(S_ADC_WAIT):
  8675                           
  8676                           
  8677                           ;scan.c: 162: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  8678  07A9  3197  27CF  3187   	fcall	_is_adc_ready
  8679  07AC  3800               	iorlw	0
  8680  07AD  1D03               	skipz
  8681  07AE  2FB1               	goto	l3315
  8682  07AF  3004               	movlw	4
  8683  07B0  2FB2               	goto	L11
  8684  07B1                     l3315:	
  8685  07B1  3005               	movlw	5
  8686  07B2                     L11:	
  8687  07B2  0020               	movlb	0	; select bank0
  8688  07B3  00E0               	movwf	_scan_task$719
  8689  07B4  3000               	movlw	0
  8690  07B5  00E1               	movwf	_scan_task$719+1
  8691  07B6  0860               	movf	_scan_task$719,w
  8692  07B7  2FCF               	goto	L12
  8693  07B8                     l3317:	
  8694                           ;scan.c: 165: case(S_ADC_READ):
  8695                           
  8696                           ;scan.c: 163: break;
  8697                           
  8698                           
  8699                           ;scan.c: 166: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  8700  07B8  3188  206E  3187   	fcall	_is_end_of_scan
  8701  07BB  00F9               	movwf	??_scan_task
  8702  07BC  0879               	movf	??_scan_task,w
  8703  07BD  00F5               	movwf	?_store_key_level
  8704  07BE  3197  27C7  3187   	fcall	_get_adc
  8705  07C1  3189  21EB  3187   	fcall	_store_key_level
  8706  07C4  3800               	iorlw	0
  8707  07C5  1D03               	skipz
  8708  07C6  2FC9               	goto	l3321
  8709  07C7  3002               	movlw	2
  8710  07C8  2FCA               	goto	L13
  8711  07C9                     l3321:	
  8712  07C9  3001               	movlw	1
  8713  07CA                     L13:	
  8714  07CA  0020               	movlb	0	; select bank0
  8715  07CB  00E2               	movwf	_scan_task$720
  8716  07CC  3000               	movlw	0
  8717  07CD  00E3               	movwf	_scan_task$720+1
  8718  07CE  0862               	movf	_scan_task$720,w
  8719  07CF                     L12:	
  8720  07CF  00F9               	movwf	??_scan_task
  8721  07D0  0879               	movf	??_scan_task,w
  8722  07D1  0023               	movlb	3	; select bank3
  8723  07D2  00D8               	movwf	scan_task@state^(0+384)
  8724                           
  8725                           ;scan.c: 168: }
  8726                           
  8727                           ;scan.c: 167: break;
  8728  07D3  2FDF               	goto	l3327
  8729  07D4                     l3325:	
  8730  07D4  0023               	movlb	3	; select bank3
  8731  07D5  0858               	movf	scan_task@state^(0+384),w
  8732                           
  8733                           ; Switch size 1, requested type "space"
  8734                           ; Number of cases is 6, Range of values is 0 to 5
  8735                           ; switch strategies available:
  8736                           ; Name         Instructions Cycles
  8737                           ; direct_byte           18     6 (fixed)
  8738                           ; simple_byte           19    10 (average)
  8739                           ; jumptable            260     6 (fixed)
  8740                           ; rangetable            10     4 (fixed)
  8741                           ; spacedrange           17     6 (fixed)
  8742                           ; locatedrange           6     3 (fixed)
  8743                           ;	Chosen strategy is direct_byte
  8744  07D6  0084               	movwf	4
  8745  07D7  3006               	movlw	6
  8746  07D8  0204               	subwf	4,w
  8747  07D9  1803               	skipnc
  8748  07DA  2FDF               	goto	l3327
  8749  07DB  3188               	movlp	high S5463
  8750  07DC  3504               	lslf	4,w
  8751  07DD  3E1A               	addlw	low S5463
  8752  07DE  0082               	movwf	2
  8753  07DF                     l3327:	
  8754                           
  8755                           ;scan.c: 171: return 1;
  8756  07DF  3001               	movlw	1
  8757  07E0  0008               	return
  8758  07E1                     __end_of_scan_task:	
  8759                           
  8760                           	psect	swtext2
  8761  081A                     __pswtext2:	
  8762  081A                     S5463:	
  8763  081A  3187  2F69         	ljmp	l3293
  8764  081C  3187  2F76         	ljmp	l3299
  8765  081E  3187  2F85         	ljmp	l3303
  8766  0820  3187  2F98         	ljmp	l3307
  8767  0822  3187  2FA9         	ljmp	l3311
  8768  0824  3187  2FB8         	ljmp	l3317
  8769                           
  8770                           	psect	text32
  8771  09EB                     __ptext32:	
  8772 ;; *************** function _store_key_level *****************
  8773 ;; Defined at:
  8774 ;;		line 108 in file "../src/scan.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  level           1    wreg     unsigned char 
  8777 ;;  end_of_scan     1    5[COMMON] unsigned char 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  level           1    8[COMMON] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      unsigned char 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;Total ram usage:        4 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    2
  8796 ;; This function calls:
  8797 ;;		_process_level
  8798 ;; This function is called by:
  8799 ;;		_scan_task
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _store_key_level
  8805  09EB                     _store_key_level:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in _store_key_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8809                           ;store_key_level@level stored from wreg
  8810  09EB  00F8               	movwf	store_key_level@level
  8811                           
  8812                           ;scan.c: 109: static uint8_t idx_key = 0;
  8813                           ;scan.c: 110: process_level(idx_key, adc_levels[idx_key], level);
  8814  09EC  0022               	movlb	2	; select bank2
  8815  09ED  0869               	movf	store_key_level@idx_key^(0+256),w
  8816  09EE  3E20               	addlw	_adc_levels& (0+255)
  8817  09EF  0086               	movwf	6
  8818  09F0  3002               	movlw	2	; select bank4/5
  8819  09F1  0087               	movwf	7
  8820  09F2  0801               	movf	1,w
  8821  09F3  00F6               	movwf	??_store_key_level
  8822  09F4  0876               	movf	??_store_key_level,w
  8823  09F5  00F1               	movwf	?_process_level
  8824  09F6  0878               	movf	store_key_level@level,w
  8825  09F7  00F7               	movwf	??_store_key_level+1
  8826  09F8  0877               	movf	??_store_key_level+1,w
  8827  09F9  00F2               	movwf	?_process_level+1
  8828  09FA  0869               	movf	store_key_level@idx_key^(0+256),w
  8829  09FB  3188  2027  3189   	fcall	_process_level
  8830                           
  8831                           ;scan.c: 111: adc_levels[idx_key] = level;
  8832  09FE  0878               	movf	store_key_level@level,w
  8833  09FF  00F6               	movwf	??_store_key_level
  8834  0A00  0022               	movlb	2	; select bank2
  8835  0A01  0869               	movf	store_key_level@idx_key^(0+256),w
  8836  0A02  3E20               	addlw	_adc_levels& (0+255)
  8837  0A03  0086               	movwf	6
  8838  0A04  3002               	movlw	2	; select bank4/5
  8839  0A05  0087               	movwf	7
  8840  0A06  0876               	movf	??_store_key_level,w
  8841  0A07  0081               	movwf	1
  8842                           
  8843                           ;scan.c: 112: idx_key ++;
  8844  0A08  3001               	movlw	1
  8845  0A09  00F6               	movwf	??_store_key_level
  8846  0A0A  0876               	movf	??_store_key_level,w
  8847  0A0B  07E9               	addwf	store_key_level@idx_key^(0+256),f
  8848                           
  8849                           ;scan.c: 113: if (idx_key >= 39 || end_of_scan) idx_key = 0;
  8850  0A0C  3027               	movlw	39
  8851  0A0D  0269               	subwf	store_key_level@idx_key^(0+256),w
  8852  0A0E  1803               	skipnc
  8853  0A0F  2A13               	goto	l3621
  8854  0A10  0875               	movf	store_key_level@end_of_scan,w
  8855  0A11  1903               	btfsc	3,2
  8856  0A12  2A14               	goto	l3623
  8857  0A13                     l3621:	
  8858  0A13  01E9               	clrf	store_key_level@idx_key^(0+256)
  8859  0A14                     l3623:	
  8860                           
  8861                           ;scan.c: 114: return idx_key == 0;
  8862  0A14  0869               	movf	store_key_level@idx_key^(0+256),w
  8863  0A15  3A00               	xorlw	0
  8864  0A16  3000               	movlw	0
  8865  0A17  1903               	skipnz
  8866  0A18  3001               	movlw	1
  8867  0A19  0008               	return
  8868  0A1A                     __end_of_store_key_level:	
  8869                           
  8870                           	psect	text33
  8871  0827                     __ptext33:	
  8872 ;; *************** function _process_level *****************
  8873 ;; Defined at:
  8874 ;;		line 101 in file "../src/scan.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  idx_key         1    wreg     unsigned char 
  8877 ;;  old_level       1    1[COMMON] const unsigned char 
  8878 ;;  new_level       1    2[COMMON] const unsigned char 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  idx_key         1    4[COMMON] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;		None               void
  8883 ;; Registers used:
  8884 ;;		wreg
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;Total ram usage:        4 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    1
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_store_key_level
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           
  8905                           ;psect for function _process_level
  8906  0827                     _process_level:	
  8907                           
  8908                           ;incstack = 0
  8909                           ; Regs used in _process_level: [wreg]
  8910                           ;process_level@idx_key stored from wreg
  8911  0827  00F4               	movwf	process_level@idx_key
  8912                           
  8913                           ;scan.c: 102: s_idx_key = idx_key;
  8914  0828  0874               	movf	process_level@idx_key,w
  8915  0829  00F3               	movwf	??_process_level
  8916  082A  0873               	movf	??_process_level,w
  8917  082B  0023               	movlb	3	; select bank3
  8918  082C  00D3               	movwf	_s_idx_key^(0+384)
  8919                           
  8920                           ;scan.c: 103: s_level = new_level;
  8921  082D  0872               	movf	process_level@new_level,w
  8922  082E  00F3               	movwf	??_process_level
  8923  082F  0873               	movf	??_process_level,w
  8924  0830  00D4               	movwf	_s_level^(0+384)
  8925  0831  0008               	return
  8926  0832                     __end_of_process_level:	
  8927                           
  8928                           	psect	text34
  8929  17C7                     __ptext34:	
  8930 ;; *************** function _get_adc *****************
  8931 ;; Defined at:
  8932 ;;		line 97 in file "../src/scan.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;		None
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      unsigned char 
  8939 ;; Registers used:
  8940 ;;		wreg
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;Total ram usage:        0 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; Hardware stack levels required when called:    1
  8953 ;; This function calls:
  8954 ;;		Nothing
  8955 ;; This function is called by:
  8956 ;;		_scan_task
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           
  8961                           ;psect for function _get_adc
  8962  17C7                     _get_adc:	
  8963                           
  8964                           ;scan.c: 98: return ADRESH;
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _get_adc: [wreg]
  8968  17C7  0021               	movlb	1	; select bank1
  8969  17C8  081C               	movf	28,w	;volatile
  8970  17C9  0008               	return
  8971  17CA                     __end_of_get_adc:	
  8972                           
  8973                           	psect	text35
  8974  17CF                     __ptext35:	
  8975 ;; *************** function _is_adc_ready *****************
  8976 ;; Defined at:
  8977 ;;		line 93 in file "../src/scan.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      unsigned char 
  8984 ;; Registers used:
  8985 ;;		wreg
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;Total ram usage:        0 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    1
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_scan_task
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           
  9006                           ;psect for function _is_adc_ready
  9007  17CF                     _is_adc_ready:	
  9008                           
  9009                           ;scan.c: 94: return !ADCON0bits.GO_nDONE;
  9010                           
  9011                           ;incstack = 0
  9012                           ; Regs used in _is_adc_ready: [wreg]
  9013  17CF  3000               	movlw	0
  9014  17D0  0021               	movlb	1	; select bank1
  9015  17D1  1C9D               	btfss	29,1	;volatile
  9016  17D2  3001               	movlw	1
  9017  17D3  0008               	return
  9018  17D4                     __end_of_is_adc_ready:	
  9019                           
  9020                           	psect	text36
  9021  02F7                     __ptext36:	
  9022 ;; *************** function _run_adc *****************
  9023 ;; Defined at:
  9024 ;;		line 88 in file "../src/scan.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;		None               void
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_scan_task
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _run_adc
  9054  02F7                     _run_adc:	
  9055                           
  9056                           ;scan.c: 89: ADCON0bits.CHS = 7;
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9060  02F7  0021               	movlb	1	; select bank1
  9061  02F8  081D               	movf	29,w	;volatile
  9062  02F9  3983               	andlw	-125
  9063  02FA  381C               	iorlw	28
  9064  02FB  009D               	movwf	29	;volatile
  9065                           
  9066                           ;scan.c: 90: ADCON0bits.GO = 1;
  9067  02FC  149D               	bsf	29,1	;volatile
  9068  02FD  0008               	return
  9069  02FE                     __end_of_run_adc:	
  9070                           
  9071                           	psect	text37
  9072  086E                     __ptext37:	
  9073 ;; *************** function _is_end_of_scan *****************
  9074 ;; Defined at:
  9075 ;;		line 80 in file "../src/scan.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  res             1    3[COMMON] unsigned char 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      unsigned char 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        3 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    1
  9096 ;; This function calls:
  9097 ;;		Nothing
  9098 ;; This function is called by:
  9099 ;;		_scan_task
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           
  9104                           ;psect for function _is_end_of_scan
  9105  086E                     _is_end_of_scan:	
  9106                           
  9107                           ;scan.c: 82: static uint8_t scan_counter = 0;
  9108                           ;scan.c: 83: bool res = (++scan_counter) >= 39;
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9112  086E  3001               	movlw	1
  9113  086F  00F1               	movwf	??_is_end_of_scan
  9114  0870  0871               	movf	??_is_end_of_scan,w
  9115  0871  0023               	movlb	3	; select bank3
  9116  0872  07D7               	addwf	is_end_of_scan@scan_counter^(0+384),f
  9117  0873  3027               	movlw	39
  9118  0874  0257               	subwf	is_end_of_scan@scan_counter^(0+384),w
  9119  0875  3000               	movlw	0
  9120  0876  1803               	skipnc
  9121  0877  3001               	movlw	1
  9122  0878  00F2               	movwf	??_is_end_of_scan+1
  9123  0879  0872               	movf	??_is_end_of_scan+1,w
  9124  087A  00F3               	movwf	is_end_of_scan@res
  9125                           
  9126                           ;scan.c: 84: if (scan_counter >= 39) scan_counter = 0;
  9127  087B  3027               	movlw	39
  9128  087C  0257               	subwf	is_end_of_scan@scan_counter^(0+384),w
  9129  087D  1803               	btfsc	3,0
  9130  087E  01D7               	clrf	is_end_of_scan@scan_counter^(0+384)
  9131                           
  9132                           ;scan.c: 85: return res;
  9133  087F  0873               	movf	is_end_of_scan@res,w
  9134  0880  0008               	return
  9135  0881                     __end_of_is_end_of_scan:	
  9136                           
  9137                           	psect	text38
  9138  17CA                     __ptext38:	
  9139 ;; *************** function _get_data *****************
  9140 ;; Defined at:
  9141 ;;		line 76 in file "../src/scan.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;		None
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      unsigned char 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;Total ram usage:        0 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_scan_task
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           
  9170                           ;psect for function _get_data
  9171  17CA                     _get_data:	
  9172                           
  9173                           ;scan.c: 77: return LATCbits.LATC5;
  9174                           
  9175                           ;incstack = 0
  9176                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9177  17CA  0022               	movlb	2	; select bank2
  9178  17CB  0E0E               	swapf	14,w	;volatile
  9179  17CC  0C89               	rrf	9,f
  9180  17CD  3901               	andlw	1
  9181  17CE  0008               	return
  9182  17CF                     __end_of_get_data:	
  9183                           
  9184                           	psect	text39
  9185  08C2                     __ptext39:	
  9186 ;; *************** function _set_clock_and_data *****************
  9187 ;; Defined at:
  9188 ;;		line 71 in file "../src/scan.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  c               1    wreg     const unsigned char 
  9191 ;;  d               1    1[COMMON] const unsigned char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  c               1    3[COMMON] const unsigned char 
  9194 ;; Return value:  Size  Location     Type
  9195 ;;		None               void
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;Total ram usage:        3 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    1
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_scan_task
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function _set_clock_and_data
  9219  08C2                     _set_clock_and_data:	
  9220                           
  9221                           ;incstack = 0
  9222                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9223                           ;set_clock_and_data@c stored from wreg
  9224  08C2  00F3               	movwf	set_clock_and_data@c
  9225                           
  9226                           ;scan.c: 72: LATCbits.LATC4 = !!c;
  9227  08C3  3000               	movlw	0
  9228  08C4  08F3               	movf	set_clock_and_data@c,f
  9229  08C5  1D03               	skipz
  9230  08C6  3001               	movlw	1
  9231  08C7  00F2               	movwf	??_set_clock_and_data
  9232  08C8  0EF2               	swapf	??_set_clock_and_data,f
  9233  08C9  0022               	movlb	2	; select bank2
  9234  08CA  080E               	movf	14,w	;volatile
  9235  08CB  0672               	xorwf	??_set_clock_and_data,w
  9236  08CC  39EF               	andlw	-17
  9237  08CD  0672               	xorwf	??_set_clock_and_data,w
  9238  08CE  008E               	movwf	14	;volatile
  9239                           
  9240                           ;scan.c: 73: LATCbits.LATC5 = !!d;
  9241  08CF  3000               	movlw	0
  9242  08D0  08F1               	movf	set_clock_and_data@d,f
  9243  08D1  1D03               	skipz
  9244  08D2  3001               	movlw	1
  9245  08D3  00F2               	movwf	??_set_clock_and_data
  9246  08D4  0EF2               	swapf	??_set_clock_and_data,f
  9247  08D5  0DF2               	rlf	??_set_clock_and_data,f
  9248  08D6  080E               	movf	14,w	;volatile
  9249  08D7  0672               	xorwf	??_set_clock_and_data,w
  9250  08D8  39DF               	andlw	-33
  9251  08D9  0672               	xorwf	??_set_clock_and_data,w
  9252  08DA  008E               	movwf	14	;volatile
  9253  08DB  0008               	return
  9254  08DC                     __end_of_set_clock_and_data:	
  9255                           
  9256                           	psect	text40
  9257  17F5                     __ptext40:	
  9258 ;; *************** function _waiting_for_timer *****************
  9259 ;; Defined at:
  9260 ;;		line 67 in file "../src/scan.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      unsigned char 
  9267 ;; Registers used:
  9268 ;;		wreg, status,2
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9278 ;;Total ram usage:        1 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    1
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_scan_task
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           
  9289                           ;psect for function _waiting_for_timer
  9290  17F5                     _waiting_for_timer:	
  9291                           
  9292                           ;scan.c: 68: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  9293                           
  9294                           ;incstack = 0
  9295                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  9296  17F5  01F1               	clrf	_waiting_for_timer$688
  9297  17F6  0023               	movlb	3	; select bank3
  9298  17F7  0856               	movf	_wait_timer^(0+384),w
  9299  17F8  1D03               	skipz
  9300  17F9  190B               	btfsc	11,2	;volatile
  9301  17FA  2FFD               	goto	l3577
  9302  17FB  01F1               	clrf	_waiting_for_timer$688
  9303  17FC  0AF1               	incf	_waiting_for_timer$688,f
  9304  17FD                     l3577:	
  9305  17FD  0871               	movf	_waiting_for_timer$688,w
  9306  17FE  00D6               	movwf	_wait_timer^(0+384)
  9307  17FF  0008               	return
  9308  1800                     __end_of_waiting_for_timer:	
  9309                           
  9310                           	psect	text41
  9311  17EA                     __ptext41:	
  9312 ;; *************** function _set_timer *****************
  9313 ;; Defined at:
  9314 ;;		line 58 in file "../src/scan.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;		None               void
  9321 ;; Registers used:
  9322 ;;		status,2
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;Total ram usage:        0 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    1
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_scan_task
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           
  9343                           ;psect for function _set_timer
  9344  17EA                     _set_timer:	
  9345                           
  9346                           ;scan.c: 59: wait_timer = 1;
  9347                           
  9348                           ;incstack = 0
  9349                           ; Regs used in _set_timer: [status,2]
  9350  17EA  0023               	movlb	3	; select bank3
  9351  17EB  01D6               	clrf	_wait_timer^(0+384)
  9352  17EC  0AD6               	incf	_wait_timer^(0+384),f
  9353                           
  9354                           ;scan.c: 60: OPTION_REGbits.TMR0CS = 0;
  9355  17ED  0021               	movlb	1	; select bank1
  9356  17EE  1295               	bcf	21,5	;volatile
  9357                           
  9358                           ;scan.c: 61: OPTION_REGbits.PSA = 1;
  9359  17EF  1595               	bsf	21,3	;volatile
  9360                           
  9361                           ;scan.c: 62: INTCONbits.TMR0IE = 0;
  9362  17F0  128B               	bcf	11,5	;volatile
  9363                           
  9364                           ;scan.c: 63: INTCONbits.TMR0IF = 0;
  9365  17F1  110B               	bcf	11,2	;volatile
  9366                           
  9367                           ;scan.c: 64: TMR0 = 0;
  9368  17F2  0020               	movlb	0	; select bank0
  9369  17F3  0195               	clrf	21	;volatile
  9370  17F4  0008               	return
  9371  17F5                     __end_of_set_timer:	
  9372                           
  9373                           	psect	text42
  9374  08F8                     __ptext42:	
  9375 ;; *************** function _scan_init *****************
  9376 ;; Defined at:
  9377 ;;		line 35 in file "../src/scan.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;		None               void
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:    1
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_scan_task
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           
  9406                           ;psect for function _scan_init
  9407  08F8                     _scan_init:	
  9408                           
  9409                           ;scan.c: 36: is_initialized = 1;
  9410                           
  9411                           ;incstack = 0
  9412                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  9413  08F8  0023               	movlb	3	; select bank3
  9414  08F9  01D0               	clrf	_is_initialized^(0+384)
  9415  08FA  0AD0               	incf	_is_initialized^(0+384),f
  9416                           
  9417                           ;scan.c: 37: TRISCbits.TRISC3 = PIN_INPUT;
  9418  08FB  0021               	movlb	1	; select bank1
  9419  08FC  158E               	bsf	14,3	;volatile
  9420                           
  9421                           ;scan.c: 38: TRISCbits.TRISC4 = PIN_OUTPUT;
  9422  08FD  120E               	bcf	14,4	;volatile
  9423                           
  9424                           ;scan.c: 39: TRISCbits.TRISC5 = PIN_OUTPUT;
  9425  08FE  128E               	bcf	14,5	;volatile
  9426                           
  9427                           ;scan.c: 41: ANSELA = 0;
  9428  08FF  0023               	movlb	3	; select bank3
  9429  0900  018C               	clrf	12	;volatile
  9430                           
  9431                           ;scan.c: 43: ANSELCbits.ANSC3 = PIN_ANALOG;
  9432  0901  158E               	bsf	14,3	;volatile
  9433                           
  9434                           ;scan.c: 44: LATCbits.LATC4 = 0;
  9435  0902  0022               	movlb	2	; select bank2
  9436  0903  120E               	bcf	14,4	;volatile
  9437                           
  9438                           ;scan.c: 45: LATCbits.LATC5 = 0;
  9439  0904  128E               	bcf	14,5	;volatile
  9440                           
  9441                           ;scan.c: 47: ANSELAbits.ANSA4 = PIN_DIGITAL;
  9442  0905  0023               	movlb	3	; select bank3
  9443  0906  120C               	bcf	12,4	;volatile
  9444                           
  9445                           ;scan.c: 48: TRISAbits.TRISA4 = PIN_INPUT;
  9446  0907  0021               	movlb	1	; select bank1
  9447  0908  160C               	bsf	12,4	;volatile
  9448                           
  9449                           ;scan.c: 50: PIE1bits.ADIE = 0;
  9450  0909  1311               	bcf	17,6	;volatile
  9451                           
  9452                           ;scan.c: 51: ADCON0bits.ADON = 1;
  9453  090A  141D               	bsf	29,0	;volatile
  9454                           
  9455                           ;scan.c: 52: ADCON1bits.ADFM = 0;
  9456  090B  139E               	bcf	30,7	;volatile
  9457                           
  9458                           ;scan.c: 53: ADCON1bits.ADCS = 0b110;
  9459  090C  081E               	movf	30,w	;volatile
  9460  090D  398F               	andlw	-113
  9461  090E  3860               	iorlw	96
  9462  090F  009E               	movwf	30	;volatile
  9463                           
  9464                           ;scan.c: 54: ADCON1bits.ADPREF = 0;
  9465  0910  30FC               	movlw	-4
  9466  0911  059E               	andwf	30,f	;volatile
  9467                           
  9468                           ;scan.c: 55: ADCON2bits.TRIGSEL = 0;
  9469  0912  308F               	movlw	-113
  9470  0913  059F               	andwf	31,f	;volatile
  9471  0914  0008               	return
  9472  0915                     __end_of_scan_init:	
  9473                           
  9474                           	psect	text43
  9475  08DC                     __ptext43:	
  9476 ;; *************** function _SYSTEM_Initialize *****************
  9477 ;; Defined at:
  9478 ;;		line 87 in file "../src/pic16f1459/system.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  state           1    wreg     enum E2631
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  state           1    2[COMMON] enum E2631
  9483 ;; Return value:  Size  Location     Type
  9484 ;;		None               void
  9485 ;; Registers used:
  9486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;Total ram usage:        1 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    2
  9499 ;; This function calls:
  9500 ;;		_LED_Enable
  9501 ;;		_BUTTON_Enable
  9502 ;; This function is called by:
  9503 ;;		_main
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           
  9508                           ;psect for function _SYSTEM_Initialize
  9509  08DC                     _SYSTEM_Initialize:	
  9510                           
  9511                           ;incstack = 0
  9512                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9513                           ;SYSTEM_Initialize@state stored from wreg
  9514  08DC  00F2               	movwf	SYSTEM_Initialize@state
  9515                           
  9516                           ;system.c: 88: switch(state)
  9517  08DD  28EC               	goto	l3205
  9518  08DE                     l3197:	
  9519                           ;system.c: 89: {
  9520                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  9521                           
  9522                           
  9523                           ;system.c: 94: OSCCON = 0xFC;
  9524  08DE  30FC               	movlw	252
  9525  08DF  0021               	movlb	1	; select bank1
  9526  08E0  0099               	movwf	25	;volatile
  9527                           
  9528                           ;system.c: 95: ACTCON = 0x90;
  9529  08E1  3090               	movlw	144
  9530  08E2  0027               	movlb	7	; select bank7
  9531  08E3  009B               	movwf	27	;volatile
  9532                           
  9533                           ;system.c: 97: LED_Enable(LED_D1);
  9534  08E4  3001               	movlw	1
  9535  08E5  3188  2032  3188   	fcall	_LED_Enable
  9536                           
  9537                           ;system.c: 98: BUTTON_Enable(BUTTON_S1);
  9538  08E8  3001               	movlw	1
  9539  08E9  3197  27E0         	fcall	_BUTTON_Enable
  9540                           
  9541                           ;system.c: 106: }
  9542                           
  9543                           ;system.c: 105: break;
  9544                           
  9545                           ;system.c: 104: case SYSTEM_STATE_USB_RESUME:
  9546                           
  9547                           ;system.c: 102: break;
  9548                           
  9549                           ;system.c: 101: case SYSTEM_STATE_USB_SUSPEND:
  9550                           
  9551                           ;system.c: 99: break;
  9552  08EB  0008               	return
  9553  08EC                     l3205:	
  9554  08EC  0872               	movf	SYSTEM_Initialize@state,w
  9555                           
  9556                           ; Switch size 1, requested type "space"
  9557                           ; Number of cases is 3, Range of values is 0 to 2
  9558                           ; switch strategies available:
  9559                           ; Name         Instructions Cycles
  9560                           ; simple_byte           10     6 (average)
  9561                           ; direct_byte           12     6 (fixed)
  9562                           ; jumptable            260     6 (fixed)
  9563                           ; rangetable             7     4 (fixed)
  9564                           ; spacedrange           11     6 (fixed)
  9565                           ; locatedrange           3     3 (fixed)
  9566                           ;	Chosen strategy is simple_byte
  9567  08ED  3A00               	xorlw	0	; case 0
  9568  08EE  1903               	skipnz
  9569  08EF  28DE               	goto	l3197
  9570  08F0  3A01               	xorlw	1	; case 1
  9571  08F1  1903               	skipnz
  9572  08F2  28F7               	goto	l140
  9573  08F3  3A03               	xorlw	3	; case 2
  9574  08F4  1903               	skipnz
  9575  08F5  28F7               	goto	l140
  9576  08F6  28F7               	goto	l140
  9577  08F7                     l140:	
  9578  08F7  0008               	return
  9579  08F8                     __end_of_SYSTEM_Initialize:	
  9580                           
  9581                           	psect	text44
  9582  17E0                     __ptext44:	
  9583 ;; *************** function _BUTTON_Enable *****************
  9584 ;; Defined at:
  9585 ;;		line 86 in file "../bsp/pic16f1459/buttons.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  button          1    wreg     enum E2603
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  button          1    1[COMMON] enum E2603
  9590 ;; Return value:  Size  Location     Type
  9591 ;;		None               void
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;Total ram usage:        1 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    1
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_SYSTEM_Initialize
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _BUTTON_Enable
  9615  17E0                     _BUTTON_Enable:	
  9616                           
  9617                           ;incstack = 0
  9618                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  9619                           ;BUTTON_Enable@button stored from wreg
  9620  17E0  00F1               	movwf	BUTTON_Enable@button
  9621                           
  9622                           ;buttons.c: 94: }
  9623                           
  9624                           ;buttons.c: 93: break;
  9625                           
  9626                           ;buttons.c: 92: case BUTTON_NONE:
  9627                           
  9628                           ;buttons.c: 90: break;
  9629                           
  9630                           ;buttons.c: 88: {
  9631                           ;buttons.c: 89: case BUTTON_S1:
  9632                           
  9633                           ;buttons.c: 87: switch(button)
  9634  17E1  0871               	movf	BUTTON_Enable@button,w
  9635                           
  9636                           ; Switch size 1, requested type "space"
  9637                           ; Number of cases is 2, Range of values is 0 to 1
  9638                           ; switch strategies available:
  9639                           ; Name         Instructions Cycles
  9640                           ; simple_byte            7     4 (average)
  9641                           ; direct_byte           10     6 (fixed)
  9642                           ; jumptable            260     6 (fixed)
  9643                           ; rangetable             6     4 (fixed)
  9644                           ; spacedrange            9     6 (fixed)
  9645                           ; locatedrange           2     3 (fixed)
  9646                           ;	Chosen strategy is simple_byte
  9647  17E2  3A00               	xorlw	0	; case 0
  9648  17E3  1903               	skipnz
  9649  17E4  2FE9               	goto	l312
  9650  17E5  3A01               	xorlw	1	; case 1
  9651  17E6  1903               	skipnz
  9652  17E7  2FE9               	goto	l312
  9653  17E8  2FE9               	goto	l312
  9654  17E9                     l312:	
  9655  17E9  0008               	return
  9656  17EA                     __end_of_BUTTON_Enable:	
  9657                           
  9658                           	psect	text45
  9659  0832                     __ptext45:	
  9660 ;; *************** function _LED_Enable *****************
  9661 ;; Defined at:
  9662 ;;		line 170 in file "../bsp/pic16f1459/leds.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  led             1    wreg     enum E2
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;  led             1    1[COMMON] enum E2
  9667 ;; Return value:  Size  Location     Type
  9668 ;;		None               void
  9669 ;; Registers used:
  9670 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;Total ram usage:        1 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    1
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_SYSTEM_Initialize
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           
  9691                           ;psect for function _LED_Enable
  9692  0832                     _LED_Enable:	
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  9696                           ;LED_Enable@led stored from wreg
  9697  0832  00F1               	movwf	LED_Enable@led
  9698                           
  9699                           ;leds.c: 171: switch(led)
  9700  0833  2837               	goto	l3531
  9701  0834                     l348:	
  9702                           ;leds.c: 172: {
  9703                           ;leds.c: 173: case LED_D1:
  9704                           
  9705                           
  9706                           ;leds.c: 174: TRISCbits.TRISC2 = 0;
  9707  0834  0021               	movlb	1	; select bank1
  9708  0835  110E               	bcf	14,2	;volatile
  9709                           
  9710                           ;leds.c: 179: }
  9711                           
  9712                           ;leds.c: 178: break;
  9713                           
  9714                           ;leds.c: 177: case LED_NONE:
  9715                           
  9716                           ;leds.c: 175: break;
  9717  0836  0008               	return
  9718  0837                     l3531:	
  9719  0837  0871               	movf	LED_Enable@led,w
  9720                           
  9721                           ; Switch size 1, requested type "space"
  9722                           ; Number of cases is 2, Range of values is 0 to 1
  9723                           ; switch strategies available:
  9724                           ; Name         Instructions Cycles
  9725                           ; simple_byte            7     4 (average)
  9726                           ; direct_byte           10     6 (fixed)
  9727                           ; jumptable            260     6 (fixed)
  9728                           ; rangetable             6     4 (fixed)
  9729                           ; spacedrange            9     6 (fixed)
  9730                           ; locatedrange           2     3 (fixed)
  9731                           ;	Chosen strategy is simple_byte
  9732  0838  3A00               	xorlw	0	; case 0
  9733  0839  1903               	skipnz
  9734  083A  283F               	goto	l351
  9735  083B  3A01               	xorlw	1	; case 1
  9736  083C  1903               	skipnz
  9737  083D  2834               	goto	l348
  9738  083E  283F               	goto	l351
  9739  083F                     l351:	
  9740  083F  0008               	return
  9741  0840                     __end_of_LED_Enable:	
  9742                           
  9743                           	psect	text46
  9744  0C63                     __ptext46:	
  9745 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  9746 ;; Defined at:
  9747 ;;		line 92 in file "../src/app_device_cdc_basic.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  temp_level      1   12[BANK0 ] unsigned char 
  9752 ;;  numBytesRead    1   11[BANK0 ] unsigned char 
  9753 ;; Return value:  Size  Location     Type
  9754 ;;		None               void
  9755 ;; Registers used:
  9756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Temps:          0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0
  9765 ;;      Totals:         0       2       0       0       0       6       0       0       0       0       0       0       
      +0       0
  9766 ;;Total ram usage:        8 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:    3
  9769 ;; This function calls:
  9770 ;;		_sprintf
  9771 ;;		_putUSBUSART
  9772 ;;		_CDCTxService
  9773 ;; This function is called by:
  9774 ;;		_main
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _APP_DeviceCDCBasicDemoTasks
  9780  0C63                     _APP_DeviceCDCBasicDemoTasks:	
  9781                           
  9782                           ;app_device_cdc_basic.c: 93: uint8_t numBytesRead;
  9783                           ;app_device_cdc_basic.c: 94: uint8_t temp_level;
  9784                           ;app_device_cdc_basic.c: 95: static uint8_t numberChADC = 0;
  9785                           ;app_device_cdc_basic.c: 97: if (ready_scan){
  9786                           
  9787                           ;incstack = 0
  9788                           ; Regs used in _APP_DeviceCDCBasicDemoTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9789  0C63  0023               	movlb	3	; select bank3
  9790  0C64  0852               	movf	_ready_scan^(0+384),w
  9791  0C65  1903               	btfsc	3,2
  9792  0C66  2CB3               	goto	l4559
  9793                           
  9794                           ;app_device_cdc_basic.c: 98: temp_level = adc_levels[numberChADC];
  9795  0C67  0022               	movlb	2	; select bank2
  9796  0C68  0863               	movf	APP_DeviceCDCBasicDemoTasks@numberChADC^(0+256),w
  9797  0C69  3E20               	addlw	_adc_levels& (0+255)
  9798  0C6A  0086               	movwf	6
  9799  0C6B  3002               	movlw	2	; select bank4/5
  9800  0C6C  0087               	movwf	7
  9801  0C6D  0801               	movf	1,w
  9802  0C6E  0024               	movlb	4	; select bank4
  9803  0C6F  00E3               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+512)
  9804  0C70  0863               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+512),w
  9805  0C71  0020               	movlb	0	; select bank0
  9806  0C72  00EC               	movwf	APP_DeviceCDCBasicDemoTasks@temp_level
  9807                           
  9808                           ;app_device_cdc_basic.c: 99: numBytesRead = sprintf(writeBuffer, "ADC_NN=%u, LEVEL=%u \n
      +                          \r", numberChADC, temp_level);
  9809  0C73  30D0               	movlw	(STR_1| (0+32768))& (0+255)
  9810  0C74  0024               	movlb	4	; select bank4
  9811  0C75  00E3               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+512)
  9812  0C76  0863               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+512),w
  9813  0C77  0020               	movlb	0	; select bank0
  9814  0C78  00E4               	movwf	?_sprintf
  9815  0C79  0022               	movlb	2	; select bank2
  9816  0C7A  0863               	movf	APP_DeviceCDCBasicDemoTasks@numberChADC^(0+256),w
  9817  0C7B  0024               	movlb	4	; select bank4
  9818  0C7C  00E4               	movwf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+512)
  9819  0C7D  01E5               	clrf	((??_APP_DeviceCDCBasicDemoTasks+1)^(0+512)+1)
  9820  0C7E  0864               	movf	(??_APP_DeviceCDCBasicDemoTasks+1)^(0+512),w
  9821  0C7F  0020               	movlb	0	; select bank0
  9822  0C80  00E5               	movwf	?_sprintf+1
  9823  0C81  0024               	movlb	4	; select bank4
  9824  0C82  0865               	movf	(??_APP_DeviceCDCBasicDemoTasks+2)^(0+512),w
  9825  0C83  0020               	movlb	0	; select bank0
  9826  0C84  00E6               	movwf	?_sprintf+2
  9827  0C85  086C               	movf	APP_DeviceCDCBasicDemoTasks@temp_level,w
  9828  0C86  0024               	movlb	4	; select bank4
  9829  0C87  00E6               	movwf	(??_APP_DeviceCDCBasicDemoTasks+3)^(0+512)
  9830  0C88  01E7               	clrf	((??_APP_DeviceCDCBasicDemoTasks+3)^(0+512)+1)
  9831  0C89  0866               	movf	(??_APP_DeviceCDCBasicDemoTasks+3)^(0+512),w
  9832  0C8A  0020               	movlb	0	; select bank0
  9833  0C8B  00E7               	movwf	?_sprintf+3
  9834  0C8C  0024               	movlb	4	; select bank4
  9835  0C8D  0867               	movf	(??_APP_DeviceCDCBasicDemoTasks+4)^(0+512),w
  9836  0C8E  0020               	movlb	0	; select bank0
  9837  0C8F  00E8               	movwf	?_sprintf+4
  9838  0C90  30A0               	movlw	_writeBuffer& (0+255)
  9839  0C91  3183  23E7  318C   	fcall	_sprintf
  9840  0C94  0020               	movlb	0	; select bank0
  9841  0C95  0864               	movf	?_sprintf,w
  9842  0C96  0024               	movlb	4	; select bank4
  9843  0C97  00E8               	movwf	(??_APP_DeviceCDCBasicDemoTasks+5)^(0+512)
  9844  0C98  0868               	movf	(??_APP_DeviceCDCBasicDemoTasks+5)^(0+512),w
  9845  0C99  0020               	movlb	0	; select bank0
  9846  0C9A  00EB               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead
  9847                           
  9848                           ;app_device_cdc_basic.c: 100: if( (cdc_trf_state == 0) == 1)
  9849  0C9B  0021               	movlb	1	; select bank1
  9850  0C9C  08EE               	movf	_cdc_trf_state^(0+128),f
  9851  0C9D  1D03               	skipz
  9852  0C9E  2CB3               	goto	l4559
  9853                           
  9854                           ;app_device_cdc_basic.c: 101: {
  9855                           ;app_device_cdc_basic.c: 102: putUSBUSART(writeBuffer,numBytesRead);
  9856  0C9F  0020               	movlb	0	; select bank0
  9857  0CA0  086B               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead,w
  9858  0CA1  0024               	movlb	4	; select bank4
  9859  0CA2  00E3               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+512)
  9860  0CA3  0863               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+512),w
  9861  0CA4  00F1               	movwf	?_putUSBUSART
  9862  0CA5  30A0               	movlw	_writeBuffer& (0+255)
  9863  0CA6  3188  2094  318C   	fcall	_putUSBUSART
  9864                           
  9865                           ;app_device_cdc_basic.c: 103: numberChADC ++;
  9866  0CA9  3001               	movlw	1
  9867  0CAA  0024               	movlb	4	; select bank4
  9868  0CAB  00E3               	movwf	??_APP_DeviceCDCBasicDemoTasks^(0+512)
  9869  0CAC  0863               	movf	??_APP_DeviceCDCBasicDemoTasks^(0+512),w
  9870  0CAD  0022               	movlb	2	; select bank2
  9871  0CAE  07E3               	addwf	APP_DeviceCDCBasicDemoTasks@numberChADC^(0+256),f
  9872                           
  9873                           ;app_device_cdc_basic.c: 104: if (numberChADC >= 39) numberChADC = 0;
  9874  0CAF  3027               	movlw	39
  9875  0CB0  0263               	subwf	APP_DeviceCDCBasicDemoTasks@numberChADC^(0+256),w
  9876  0CB1  1803               	btfsc	3,0
  9877  0CB2  01E3               	clrf	APP_DeviceCDCBasicDemoTasks@numberChADC^(0+256)
  9878  0CB3                     l4559:	
  9879                           
  9880                           ;app_device_cdc_basic.c: 105: }
  9881                           ;app_device_cdc_basic.c: 108: }
  9882                           ;app_device_cdc_basic.c: 109: CDCTxService();
  9883  0CB3  3184  24C4         	fcall	_CDCTxService
  9884  0CB5  0008               	return
  9885  0CB6                     __end_of_APP_DeviceCDCBasicDemoTasks:	
  9886                           
  9887                           	psect	text47
  9888  04C4                     __ptext47:	
  9889 ;; *************** function _CDCTxService *****************
  9890 ;; Defined at:
  9891 ;;		line 894 in file "../framework/usb/usb_device_cdc.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;		None
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  byte_to_send    1    3[BANK0 ] unsigned char 
  9896 ;;  i               1    2[BANK0 ] unsigned char 
  9897 ;; Return value:  Size  Location     Type
  9898 ;;		None               void
  9899 ;; Registers used:
  9900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;Total ram usage:        6 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    2
  9913 ;; This function calls:
  9914 ;;		_USBTransferOnePacket
  9915 ;; This function is called by:
  9916 ;;		_APP_DeviceCDCBasicDemoTasks
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           
  9921                           ;psect for function _CDCTxService
  9922  04C4                     _CDCTxService:	
  9923                           
  9924                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  9925                           ;usb_device_cdc.c: 896: uint8_t i;
  9926                           ;usb_device_cdc.c: 898: ;
  9927                           ;usb_device_cdc.c: 900: {};
  9928                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  9929                           
  9930                           ;incstack = 0
  9931                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9932  04C4  0023               	movlb	3	; select bank3
  9933  04C5  0842               	movf	_CDCDataInHandle^(0+384),w
  9934  04C6  1903               	btfsc	3,2
  9935  04C7  2CD6               	goto	l4631
  9936  04C8  0842               	movf	_CDCDataInHandle^(0+384),w
  9937  04C9  0086               	movwf	6
  9938  04CA  0187               	clrf	7
  9939  04CB  0D01               	rlf	1,w
  9940  04CC  0D01               	rlf	1,w
  9941  04CD  3901               	andlw	1
  9942  04CE  00F9               	movwf	??_CDCTxService
  9943  04CF  01FA               	clrf	??_CDCTxService+1
  9944  04D0  0879               	movf	??_CDCTxService,w
  9945  04D1  0020               	movlb	0	; select bank0
  9946  04D2  00E0               	movwf	_CDCTxService$2388
  9947  04D3  087A               	movf	??_CDCTxService+1,w
  9948  04D4  00E1               	movwf	_CDCTxService$2388+1
  9949  04D5  2CD9               	goto	l4633
  9950  04D6                     l4631:	
  9951  04D6  0020               	movlb	0	; select bank0
  9952  04D7  01E0               	clrf	_CDCTxService$2388
  9953  04D8  01E1               	clrf	_CDCTxService$2388+1
  9954  04D9                     l4633:	
  9955  04D9  0861               	movf	_CDCTxService$2388+1,w
  9956  04DA  0460               	iorwf	_CDCTxService$2388,w
  9957  04DB  1D03               	btfss	3,2
  9958  04DC  0008               	return
  9959                           
  9960                           ;usb_device_cdc.c: 906: }
  9961                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  9962                           
  9963                           ;usb_device_cdc.c: 903: {
  9964                           ;usb_device_cdc.c: 904: ;
  9965                           ;usb_device_cdc.c: 905: return;
  9966  04DD  0021               	movlb	1	; select bank1
  9967  04DE  086E               	movf	_cdc_trf_state^(0+128),w
  9968  04DF  3A03               	xorlw	3
  9969  04E0  1903               	btfsc	3,2
  9970                           
  9971                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  9972  04E1  01EE               	clrf	_cdc_trf_state^(0+128)
  9973                           
  9974                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  9975  04E2  08EE               	movf	_cdc_trf_state^(0+128),f
  9976  04E3  1903               	btfsc	3,2
  9977  04E4  0008               	return
  9978                           
  9979                           ;usb_device_cdc.c: 923: }
  9980                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  9981                           
  9982                           ;usb_device_cdc.c: 920: {
  9983                           ;usb_device_cdc.c: 921: ;
  9984                           ;usb_device_cdc.c: 922: return;
  9985  04E5  086E               	movf	_cdc_trf_state^(0+128),w
  9986  04E6  3A02               	xorlw	2
  9987  04E7  1D03               	skipz
  9988  04E8  2CFD               	goto	l4651
  9989                           
  9990                           ;usb_device_cdc.c: 929: {
  9991                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  9992  04E9  01F1               	clrf	?_USBTransferOnePacket
  9993  04EA  0AF1               	incf	?_USBTransferOnePacket,f
  9994  04EB  3000               	movlw	0
  9995  04EC  00F2               	movwf	?_USBTransferOnePacket+1
  9996  04ED  3000               	movlw	0
  9997  04EE  00F3               	movwf	?_USBTransferOnePacket+2
  9998  04EF  01F4               	clrf	?_USBTransferOnePacket+3
  9999  04F0  3002               	movlw	2
 10000  04F1  318B  232D         	fcall	_USBTransferOnePacket
 10001  04F3  00F9               	movwf	??_CDCTxService
 10002  04F4  0879               	movf	??_CDCTxService,w
 10003  04F5  0023               	movlb	3	; select bank3
 10004  04F6  00C2               	movwf	_CDCDataInHandle^(0+384)
 10005                           
 10006                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10007  04F7  3003               	movlw	3
 10008  04F8  00F9               	movwf	??_CDCTxService
 10009  04F9  0879               	movf	??_CDCTxService,w
 10010  04FA  0021               	movlb	1	; select bank1
 10011  04FB  00EE               	movwf	_cdc_trf_state^(0+128)
 10012                           
 10013                           ;usb_device_cdc.c: 933: }
 10014  04FC  0008               	return
 10015  04FD                     l4651:	
 10016                           
 10017                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10018  04FD  086E               	movf	_cdc_trf_state^(0+128),w
 10019  04FE  3A01               	xorlw	1
 10020  04FF  1D03               	skipz
 10021  0500  0008               	return
 10022                           
 10023                           ;usb_device_cdc.c: 935: {
 10024                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10025  0501  3041               	movlw	65
 10026  0502  0022               	movlb	2	; select bank2
 10027  0503  0267               	subwf	_cdc_tx_len^(0+256),w
 10028  0504  1C03               	skipc
 10029  0505  2D08               	goto	l4657
 10030                           
 10031                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10032  0506  3040               	movlw	64
 10033  0507  2D0A               	goto	L14
 10034  0508                     l4657:	
 10035                           
 10036                           ;usb_device_cdc.c: 941: else
 10037                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10038  0508  0022               	movlb	2	; select bank2
 10039  0509  0867               	movf	_cdc_tx_len^(0+256),w
 10040  050A                     L14:	
 10041  050A  00F9               	movwf	??_CDCTxService
 10042  050B  0879               	movf	??_CDCTxService,w
 10043  050C  0020               	movlb	0	; select bank0
 10044  050D  00E3               	movwf	CDCTxService@byte_to_send
 10045                           
 10046                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10047  050E  0363               	decf	CDCTxService@byte_to_send,w
 10048  050F  3AFF               	xorlw	255
 10049  0510  0022               	movlb	2	; select bank2
 10050  0511  0767               	addwf	_cdc_tx_len^(0+256),w
 10051  0512  00F9               	movwf	??_CDCTxService
 10052  0513  0879               	movf	??_CDCTxService,w
 10053  0514  00E7               	movwf	_cdc_tx_len^(0+256)
 10054                           
 10055                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10056  0515  30A0               	movlw	160
 10057  0516  00F9               	movwf	??_CDCTxService
 10058  0517  0879               	movf	??_CDCTxService,w
 10059  0518  0023               	movlb	3	; select bank3
 10060  0519  00BD               	movwf	_pCDCDst^(0+384)
 10061                           
 10062                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10063  051A  0020               	movlb	0	; select bank0
 10064  051B  0863               	movf	CDCTxService@byte_to_send,w
 10065  051C  00F9               	movwf	??_CDCTxService
 10066  051D  0879               	movf	??_CDCTxService,w
 10067  051E  00E2               	movwf	CDCTxService@i
 10068                           
 10069                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10070  051F  0023               	movlb	3	; select bank3
 10071  0520  08CC               	movf	_cdc_mem_type^(0+384),f
 10072  0521  1903               	btfsc	3,2
 10073  0522  2D3B               	goto	l4675
 10074  0523  2D57               	goto	l4685
 10075  0524                     l4667:	
 10076                           ;usb_device_cdc.c: 953: {
 10077                           ;usb_device_cdc.c: 954: while(i)
 10078                           
 10079                           
 10080                           ;usb_device_cdc.c: 955: {
 10081                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10082  0524  0023               	movlb	3	; select bank3
 10083  0525  083F               	movf	_pCDCSrc^(0+384),w
 10084  0526  0086               	movwf	6
 10085  0527  3002               	movlw	2	; select bank4/5
 10086  0528  0087               	movwf	7
 10087  0529  0801               	movf	1,w
 10088  052A  00F9               	movwf	??_CDCTxService
 10089  052B  083D               	movf	_pCDCDst^(0+384),w
 10090  052C  0086               	movwf	6
 10091  052D  0187               	clrf	7
 10092  052E  0879               	movf	??_CDCTxService,w
 10093  052F  0081               	movwf	1
 10094                           
 10095                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10096  0530  3001               	movlw	1
 10097  0531  00F9               	movwf	??_CDCTxService
 10098  0532  0879               	movf	??_CDCTxService,w
 10099  0533  07BD               	addwf	_pCDCDst^(0+384),f
 10100                           
 10101                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10102  0534  3001               	movlw	1
 10103  0535  00F9               	movwf	??_CDCTxService
 10104  0536  0879               	movf	??_CDCTxService,w
 10105  0537  07BF               	addwf	_pCDCSrc^(0+384),f
 10106                           
 10107                           ;usb_device_cdc.c: 959: i--;
 10108  0538  3001               	movlw	1
 10109  0539  0020               	movlb	0	; select bank0
 10110  053A  02E2               	subwf	CDCTxService@i,f
 10111  053B                     l4675:	
 10112  053B  0020               	movlb	0	; select bank0
 10113  053C  08E2               	movf	CDCTxService@i,f
 10114  053D  1903               	btfsc	3,2
 10115  053E  2D5B               	goto	l4687
 10116  053F  2D24               	goto	l4667
 10117  0540                     l4677:	
 10118                           ;usb_device_cdc.c: 962: else
 10119                           ;usb_device_cdc.c: 963: {
 10120                           ;usb_device_cdc.c: 964: while(i)
 10121                           
 10122                           ;usb_device_cdc.c: 960: }
 10123                           ;usb_device_cdc.c: 961: }
 10124                           
 10125                           
 10126                           ;usb_device_cdc.c: 965: {
 10127                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10128  0540  0023               	movlb	3	; select bank3
 10129  0541  083F               	movf	_pCDCSrc^(0+384),w
 10130  0542  0086               	movwf	6
 10131  0543  3002               	movlw	2	; select bank4/5
 10132  0544  0087               	movwf	7
 10133  0545  0801               	movf	1,w
 10134  0546  00F9               	movwf	??_CDCTxService
 10135  0547  083D               	movf	_pCDCDst^(0+384),w
 10136  0548  0086               	movwf	6
 10137  0549  0187               	clrf	7
 10138  054A  0879               	movf	??_CDCTxService,w
 10139  054B  0081               	movwf	1
 10140                           
 10141                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10142  054C  3001               	movlw	1
 10143  054D  00F9               	movwf	??_CDCTxService
 10144  054E  0879               	movf	??_CDCTxService,w
 10145  054F  07BD               	addwf	_pCDCDst^(0+384),f
 10146                           
 10147                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10148  0550  3001               	movlw	1
 10149  0551  00F9               	movwf	??_CDCTxService
 10150  0552  0879               	movf	??_CDCTxService,w
 10151  0553  07BF               	addwf	_pCDCSrc^(0+384),f
 10152                           
 10153                           ;usb_device_cdc.c: 969: i--;
 10154  0554  3001               	movlw	1
 10155  0555  0020               	movlb	0	; select bank0
 10156  0556  02E2               	subwf	CDCTxService@i,f
 10157  0557                     l4685:	
 10158  0557  0020               	movlb	0	; select bank0
 10159  0558  08E2               	movf	CDCTxService@i,f
 10160  0559  1D03               	skipz
 10161  055A  2D40               	goto	l4677
 10162  055B                     l4687:	
 10163                           
 10164                           ;usb_device_cdc.c: 970: }
 10165                           ;usb_device_cdc.c: 971: }
 10166                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 10167  055B  0022               	movlb	2	; select bank2
 10168  055C  08E7               	movf	_cdc_tx_len^(0+256),f
 10169  055D  1D03               	skipz
 10170  055E  2D6B               	goto	l4695
 10171                           
 10172                           ;usb_device_cdc.c: 978: {
 10173                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 10174  055F  0020               	movlb	0	; select bank0
 10175  0560  0863               	movf	CDCTxService@byte_to_send,w
 10176  0561  3A40               	xorlw	64
 10177  0562  1D03               	skipz
 10178  0563  2D66               	goto	l4693
 10179                           
 10180                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 10181  0564  3002               	movlw	2
 10182  0565  2D67               	goto	L15
 10183  0566                     l4693:	
 10184                           
 10185                           ;usb_device_cdc.c: 981: else
 10186                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 10187  0566  3003               	movlw	3
 10188  0567                     L15:	
 10189  0567  00F9               	movwf	??_CDCTxService
 10190  0568  0879               	movf	??_CDCTxService,w
 10191  0569  0021               	movlb	1	; select bank1
 10192  056A  00EE               	movwf	_cdc_trf_state^(0+128)
 10193  056B                     l4695:	
 10194                           
 10195                           ;usb_device_cdc.c: 983: }
 10196                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 10197  056B  01F1               	clrf	?_USBTransferOnePacket
 10198  056C  0AF1               	incf	?_USBTransferOnePacket,f
 10199  056D  30A0               	movlw	160
 10200  056E  00F2               	movwf	?_USBTransferOnePacket+1
 10201  056F  3000               	movlw	0
 10202  0570  00F3               	movwf	?_USBTransferOnePacket+2
 10203  0571  0020               	movlb	0	; select bank0
 10204  0572  0863               	movf	CDCTxService@byte_to_send,w
 10205  0573  00F9               	movwf	??_CDCTxService
 10206  0574  0879               	movf	??_CDCTxService,w
 10207  0575  00F4               	movwf	?_USBTransferOnePacket+3
 10208  0576  3002               	movlw	2
 10209  0577  318B  232D         	fcall	_USBTransferOnePacket
 10210  0579  00FA               	movwf	??_CDCTxService+1
 10211  057A  087A               	movf	??_CDCTxService+1,w
 10212  057B  0023               	movlb	3	; select bank3
 10213  057C  00C2               	movwf	_CDCDataInHandle^(0+384)
 10214  057D  0008               	return
 10215  057E                     __end_of_CDCTxService:	
 10216                           
 10217                           	psect	text48
 10218  0B2D                     __ptext48:	
 10219 ;; *************** function _USBTransferOnePacket *****************
 10220 ;; Defined at:
 10221 ;;		line 1015 in file "../framework/usb/usb_device.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  ep              1    wreg     unsigned char 
 10224 ;;  dir             1    1[COMMON] unsigned char 
 10225 ;;  data            2    2[COMMON] PTR unsigned char 
 10226 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 10227 ;;  len             1    4[COMMON] unsigned char 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  ep              1    7[COMMON] unsigned char 
 10230 ;;  handle          1    8[COMMON] PTR volatile struct __BD
 10231 ;;		 -> NULL(0), BDT(48), 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      PTR void 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;Total ram usage:        8 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_CDCInitEP
 10252 ;;		_CDCTxService
 10253 ;;		_USBCDCEventHandler
 10254 ;;		_getsUSBUSART
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _USBTransferOnePacket
 10260  0B2D                     _USBTransferOnePacket:	
 10261                           
 10262                           ;incstack = 0
 10263                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 10264                           ;USBTransferOnePacket@ep stored from wreg
 10265  0B2D  00F7               	movwf	USBTransferOnePacket@ep
 10266                           
 10267                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
 10268                           ;usb_device.c: 1019: if(dir != 0)
 10269  0B2E  0871               	movf	USBTransferOnePacket@dir,w
 10270  0B2F  1903               	btfsc	3,2
 10271  0B30  2B34               	goto	l5059
 10272                           
 10273                           ;usb_device.c: 1020: {
 10274                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
 10275  0B31  0877               	movf	USBTransferOnePacket@ep,w
 10276  0B32  3E60               	addlw	_pBDTEntryIn& (0+255)
 10277  0B33  2B36               	goto	L16
 10278  0B34                     l5059:	
 10279                           ;usb_device.c: 1023: }
 10280                           
 10281                           
 10282                           ;usb_device.c: 1024: else
 10283                           ;usb_device.c: 1025: {
 10284                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
 10285  0B34  0877               	movf	USBTransferOnePacket@ep,w
 10286  0B35  3EB4               	addlw	_pBDTEntryOut& (0+255)
 10287  0B36                     L16:	
 10288  0B36  0086               	movwf	6
 10289  0B37  3001               	movlw	1	; select bank3/4
 10290  0B38  0087               	movwf	7
 10291  0B39  0801               	movf	1,w
 10292  0B3A  00F5               	movwf	??_USBTransferOnePacket
 10293  0B3B  0875               	movf	??_USBTransferOnePacket,w
 10294  0B3C  00F8               	movwf	USBTransferOnePacket@handle
 10295                           
 10296                           ;usb_device.c: 1028: }
 10297                           ;usb_device.c: 1032: if(handle == 0)
 10298  0B3D  08F8               	movf	USBTransferOnePacket@handle,f
 10299  0B3E  1D03               	skipz
 10300  0B3F  2B42               	goto	l5067
 10301                           
 10302                           ;usb_device.c: 1033: {
 10303                           ;usb_device.c: 1034: return 0;
 10304  0B40  3000               	movlw	0
 10305  0B41  0008               	return
 10306  0B42                     l5067:	
 10307                           
 10308                           ;usb_device.c: 1035: }
 10309                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 10310  0B42  30FF               	movlw	255
 10311  0B43  0572               	andwf	USBTransferOnePacket@data,w
 10312  0B44  00F5               	movwf	??_USBTransferOnePacket
 10313  0B45  307F               	movlw	127
 10314  0B46  0573               	andwf	USBTransferOnePacket@data+1,w
 10315  0B47  00F6               	movwf	??_USBTransferOnePacket+1
 10316  0B48  0878               	movf	USBTransferOnePacket@handle,w
 10317  0B49  3E02               	addlw	2
 10318  0B4A  0086               	movwf	6
 10319  0B4B  0187               	clrf	7
 10320  0B4C  0875               	movf	??_USBTransferOnePacket,w
 10321  0B4D  3FC0               	movwi [0]fsr1
 10322  0B4E  0876               	movf	??_USBTransferOnePacket+1,w
 10323  0B4F  3FC1               	movwi [1]fsr1
 10324                           
 10325                           ;usb_device.c: 1049: handle->CNT = len;
 10326  0B50  0874               	movf	USBTransferOnePacket@len,w
 10327  0B51  00F5               	movwf	??_USBTransferOnePacket
 10328  0B52  0A78               	incf	USBTransferOnePacket@handle,w
 10329  0B53  0086               	movwf	6
 10330  0B54  0187               	clrf	7
 10331  0B55  0875               	movf	??_USBTransferOnePacket,w
 10332  0B56  0081               	movwf	1
 10333                           
 10334                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
 10335  0B57  3040               	movlw	64
 10336  0B58  00F5               	movwf	??_USBTransferOnePacket
 10337  0B59  0878               	movf	USBTransferOnePacket@handle,w
 10338  0B5A  0086               	movwf	6
 10339  0B5B  0187               	clrf	7
 10340  0B5C  0875               	movf	??_USBTransferOnePacket,w
 10341  0B5D  0581               	andwf	1,f
 10342                           
 10343                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
 10344  0B5E  0878               	movf	USBTransferOnePacket@handle,w
 10345  0B5F  0086               	movwf	6
 10346  0B60  0187               	clrf	7
 10347  0B61  1581               	bsf	1,3
 10348                           
 10349                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
 10350  0B62  0878               	movf	USBTransferOnePacket@handle,w
 10351  0B63  0086               	movwf	6
 10352  0B64  0187               	clrf	7
 10353  0B65  1781               	bsf	1,7
 10354                           
 10355                           ;usb_device.c: 1055: if(dir != 0)
 10356  0B66  0871               	movf	USBTransferOnePacket@dir,w
 10357  0B67  1903               	btfsc	3,2
 10358  0B68  2B6E               	goto	l5079
 10359                           
 10360                           ;usb_device.c: 1056: {
 10361                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10362  0B69  3004               	movlw	4
 10363  0B6A  00F5               	movwf	??_USBTransferOnePacket
 10364  0B6B  0877               	movf	USBTransferOnePacket@ep,w
 10365  0B6C  3E60               	addlw	_pBDTEntryIn& (0+255)
 10366  0B6D  2B72               	goto	L17
 10367  0B6E                     l5079:	
 10368                           ;usb_device.c: 1059: }
 10369                           
 10370                           
 10371                           ;usb_device.c: 1060: else
 10372                           ;usb_device.c: 1061: {
 10373                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 10374  0B6E  3004               	movlw	4
 10375  0B6F  00F5               	movwf	??_USBTransferOnePacket
 10376  0B70  0877               	movf	USBTransferOnePacket@ep,w
 10377  0B71  3EB4               	addlw	_pBDTEntryOut& (0+255)
 10378  0B72                     L17:	
 10379  0B72  0086               	movwf	6
 10380  0B73  3001               	movlw	1	; select bank3/4
 10381  0B74  0087               	movwf	7
 10382  0B75  0875               	movf	??_USBTransferOnePacket,w
 10383  0B76  0681               	xorwf	1,f
 10384                           
 10385                           ;usb_device.c: 1064: }
 10386                           ;usb_device.c: 1065: return (void*)handle;
 10387  0B77  0878               	movf	USBTransferOnePacket@handle,w
 10388  0B78  0008               	return
 10389  0B79                     __end_of_USBTransferOnePacket:	
 10390                           
 10391                           	psect	text49
 10392  0894                     __ptext49:	
 10393 ;; *************** function _putUSBUSART *****************
 10394 ;; Defined at:
 10395 ;;		line 614 in file "../framework/usb/usb_device_cdc.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  data            1    wreg     PTR unsigned char 
 10398 ;;		 -> writeBuffer(64), 
 10399 ;;  length          1    1[COMMON] unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  data            1    3[COMMON] PTR unsigned char 
 10402 ;;		 -> writeBuffer(64), 
 10403 ;; Return value:  Size  Location     Type
 10404 ;;		None               void
 10405 ;; Registers used:
 10406 ;;		wreg, status,2, status,0
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10412 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;Total ram usage:        3 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:    1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_APP_DeviceCDCBasicDemoTasks
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           
 10427                           ;psect for function _putUSBUSART
 10428  0894                     _putUSBUSART:	
 10429                           
 10430                           ;incstack = 0
 10431                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
 10432                           ;putUSBUSART@data stored from wreg
 10433  0894  00F3               	movwf	putUSBUSART@data
 10434                           
 10435                           ;usb_device_cdc.c: 638: ;
 10436                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10437  0895  0021               	movlb	1	; select bank1
 10438  0896  08EE               	movf	_cdc_trf_state^(0+128),f
 10439  0897  1D03               	skipz
 10440  0898  0008               	return
 10441                           
 10442                           ;usb_device_cdc.c: 640: {
 10443                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10444  0899  0873               	movf	putUSBUSART@data,w
 10445  089A  00F2               	movwf	??_putUSBUSART
 10446  089B  0872               	movf	??_putUSBUSART,w
 10447  089C  0023               	movlb	3	; select bank3
 10448  089D  00BF               	movwf	_pCDCSrc^(0+384)
 10449  089E  0871               	movf	putUSBUSART@length,w
 10450  089F  00F2               	movwf	??_putUSBUSART
 10451  08A0  0872               	movf	??_putUSBUSART,w
 10452  08A1  0022               	movlb	2	; select bank2
 10453  08A2  00E7               	movwf	_cdc_tx_len^(0+256)
 10454  08A3  0023               	movlb	3	; select bank3
 10455  08A4  01CC               	clrf	_cdc_mem_type^(0+384)
 10456  08A5  0ACC               	incf	_cdc_mem_type^(0+384),f
 10457  08A6  0021               	movlb	1	; select bank1
 10458  08A7  01EE               	clrf	_cdc_trf_state^(0+128)
 10459  08A8  0AEE               	incf	_cdc_trf_state^(0+128),f
 10460  08A9  0008               	return
 10461  08AA                     __end_of_putUSBUSART:	
 10462                           
 10463                           	psect	text50
 10464  03E7                     __ptext50:	
 10465 ;; *************** function _sprintf *****************
 10466 ;; Defined at:
 10467 ;;		line 493 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\doprnt.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  sp              1    wreg     PTR unsigned char 
 10470 ;;		 -> writeBuffer(64), 
 10471 ;;  f               1    4[BANK0 ] PTR const unsigned char 
 10472 ;;		 -> STR_1(23), 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  sp              1    9[BANK1 ] PTR unsigned char 
 10475 ;;		 -> writeBuffer(64), 
 10476 ;;  _val            4    4[BANK1 ] struct .
 10477 ;;  ccnt            2    2[BANK1 ] int 
 10478 ;;  c               1   10[BANK1 ] char 
 10479 ;;  prec            1    8[BANK1 ] char 
 10480 ;;  ap              1    1[BANK1 ] PTR void [1]
 10481 ;;		 -> ?_sprintf(2), 
 10482 ;;  flag            1    0[BANK1 ] unsigned char 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2    4[BANK0 ] int 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10492 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Totals:         0       7      11       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;Total ram usage:       18 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    2
 10499 ;; This function calls:
 10500 ;;		___lwdiv
 10501 ;;		___lwmod
 10502 ;; This function is called by:
 10503 ;;		_APP_DeviceCDCBasicDemoTasks
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function _sprintf
 10509  03E7                     _sprintf:	
 10510                           
 10511                           ;incstack = 0
 10512                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10513                           ;sprintf@sp stored from wreg
 10514  03E7  0021               	movlb	1	; select bank1
 10515  03E8  00E9               	movwf	sprintf@sp^(0+128)
 10516                           
 10517                           ;doprnt.c: 494: va_list ap;
 10518                           ;doprnt.c: 499: signed char c;
 10519                           ;doprnt.c: 506: signed char prec;
 10520                           ;doprnt.c: 508: unsigned char flag;
 10521                           ;doprnt.c: 510: int ccnt = 0;
 10522  03E9  01E2               	clrf	sprintf@ccnt^(0+128)
 10523  03EA  01E3               	clrf	(sprintf@ccnt+1)^(0+128)
 10524                           
 10525                           ;doprnt.c: 527: union {
 10526                           ;doprnt.c: 528: unsigned int _val;
 10527                           ;doprnt.c: 529: struct {
 10528                           ;doprnt.c: 530: const char * _cp;
 10529                           ;doprnt.c: 531: unsigned _len;
 10530                           ;doprnt.c: 532: } _str;
 10531                           ;doprnt.c: 533: } _val;
 10532                           ;doprnt.c: 542: *ap = __va_start();
 10533  03EB  3065               	movlw	(?_sprintf+1)& (0+255)
 10534  03EC  0020               	movlb	0	; select bank0
 10535  03ED  00E9               	movwf	??_sprintf
 10536  03EE  0869               	movf	??_sprintf,w
 10537  03EF  0021               	movlb	1	; select bank1
 10538  03F0  00E1               	movwf	sprintf@ap^(0+128)
 10539  03F1                     l4611:	
 10540                           ;doprnt.c: 545: while(c = *f++) {
 10541                           
 10542  03F1  0020               	movlb	0	; select bank0
 10543  03F2  0864               	movf	sprintf@f,w
 10544  03F3  0AE4               	incf	sprintf@f,f
 10545  03F4  3183               	movlp	high __stringtab
 10546  03F5  000A               	callw
 10547  03F6  3183               	pagesel	$	;select current page
 10548  03F7  00E9               	movwf	??_sprintf
 10549  03F8  0869               	movf	??_sprintf,w
 10550  03F9  0021               	movlb	1	; select bank1
 10551  03FA  00EA               	movwf	sprintf@c^(0+128)
 10552  03FB  08EA               	movf	sprintf@c^(0+128),f
 10553  03FC  1903               	btfsc	3,2
 10554  03FD  2CB5               	goto	l4613
 10555                           
 10556                           ;doprnt.c: 547: if(c != '%')
 10557  03FE  086A               	movf	sprintf@c^(0+128),w
 10558  03FF  3A25               	xorlw	37
 10559  0400  1903               	skipnz
 10560  0401  2C17               	goto	l4573
 10561                           
 10562                           ;doprnt.c: 549: {
 10563                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
 10564  0402  086A               	movf	sprintf@c^(0+128),w
 10565  0403  0020               	movlb	0	; select bank0
 10566  0404  00E9               	movwf	??_sprintf
 10567  0405  0021               	movlb	1	; select bank1
 10568  0406  0869               	movf	sprintf@sp^(0+128),w
 10569  0407  0086               	movwf	6
 10570  0408  3002               	movlw	2	; select bank4/5
 10571  0409  0087               	movwf	7
 10572  040A  0020               	movlb	0	; select bank0
 10573  040B  0869               	movf	??_sprintf,w
 10574  040C  0081               	movwf	1
 10575  040D  3001               	movlw	1
 10576  040E  00E9               	movwf	??_sprintf
 10577  040F  0869               	movf	??_sprintf,w
 10578  0410  0021               	movlb	1	; select bank1
 10579  0411  07E9               	addwf	sprintf@sp^(0+128),f
 10580  0412  3001               	movlw	1
 10581  0413  07E2               	addwf	sprintf@ccnt^(0+128),f
 10582  0414  3000               	movlw	0
 10583  0415  3DE3               	addwfc	(sprintf@ccnt+1)^(0+128),f
 10584                           
 10585                           ;doprnt.c: 551: continue;
 10586  0416  2BF1               	goto	l4611
 10587  0417                     l4573:	
 10588                           
 10589                           ;doprnt.c: 552: }
 10590                           ;doprnt.c: 557: flag = 0;
 10591  0417  01E0               	clrf	sprintf@flag^(0+128)
 10592                           
 10593                           ;doprnt.c: 644: switch(c = *f++) {
 10594  0418  2C20               	goto	l4579
 10595  0419                     l4575:	
 10596                           ;doprnt.c: 826: case 'u':
 10597                           
 10598                           ;doprnt.c: 822: continue;
 10599                           
 10600                           ;doprnt.c: 811: default:
 10601                           
 10602                           ;doprnt.c: 647: goto alldone;
 10603                           
 10604                           ;doprnt.c: 646: case 0:
 10605                           
 10606                           
 10607                           ;doprnt.c: 827: flag |= 0xC0;
 10608  0419  30C0               	movlw	192
 10609  041A  0020               	movlb	0	; select bank0
 10610  041B  00E9               	movwf	??_sprintf
 10611  041C  0869               	movf	??_sprintf,w
 10612  041D  0021               	movlb	1	; select bank1
 10613  041E  04E0               	iorwf	sprintf@flag^(0+128),f
 10614                           
 10615                           ;doprnt.c: 831: }
 10616                           
 10617                           ;doprnt.c: 828: break;
 10618  041F  2C2F               	goto	l4581
 10619  0420                     l4579:	
 10620  0420  0020               	movlb	0	; select bank0
 10621  0421  0864               	movf	sprintf@f,w
 10622  0422  0AE4               	incf	sprintf@f,f
 10623  0423  3183               	movlp	high __stringtab
 10624  0424  000A               	callw
 10625  0425  3183               	pagesel	$	;select current page
 10626  0426  0021               	movlb	1	; select bank1
 10627  0427  00EA               	movwf	sprintf@c^(0+128)
 10628                           
 10629                           ; Switch size 1, requested type "space"
 10630                           ; Number of cases is 2, Range of values is 0 to 117
 10631                           ; switch strategies available:
 10632                           ; Name         Instructions Cycles
 10633                           ; simple_byte            7     4 (average)
 10634                           ; direct_byte          242     6 (fixed)
 10635                           ; jumptable            260     6 (fixed)
 10636                           ; rangetable           122     4 (fixed)
 10637                           ; spacedrange          241     6 (fixed)
 10638                           ; locatedrange         118     3 (fixed)
 10639                           ;	Chosen strategy is simple_byte
 10640  0428  3A00               	xorlw	0	; case 0
 10641  0429  1903               	skipnz
 10642  042A  2CB5               	goto	l4613
 10643  042B  3A75               	xorlw	117	; case 117
 10644  042C  1903               	skipnz
 10645  042D  2C19               	goto	l4575
 10646  042E  2BF1               	goto	l4611
 10647  042F                     l4581:	
 10648                           
 10649                           ;doprnt.c: 1280: {
 10650                           ;doprnt.c: 1293: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10651  042F  0861               	movf	sprintf@ap^(0+128),w
 10652  0430  0086               	movwf	6
 10653  0431  0187               	clrf	7
 10654  0432  3F40               	moviw [0]fsr1
 10655  0433  00E4               	movwf	sprintf@_val^(0+128)
 10656  0434  3F41               	moviw [1]fsr1
 10657  0435  00E5               	movwf	(sprintf@_val+1)^(0+128)
 10658  0436  3002               	movlw	2
 10659  0437  0020               	movlb	0	; select bank0
 10660  0438  00E9               	movwf	??_sprintf
 10661  0439  0869               	movf	??_sprintf,w
 10662  043A  0021               	movlb	1	; select bank1
 10663  043B  07E1               	addwf	sprintf@ap^(0+128),f
 10664                           
 10665                           ;doprnt.c: 1294: }
 10666                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10667  043C  01EA               	clrf	sprintf@c^(0+128)
 10668  043D  0AEA               	incf	sprintf@c^(0+128),f
 10669  043E  086A               	movf	sprintf@c^(0+128),w
 10670  043F  3A05               	xorlw	5
 10671  0440  1903               	btfsc	3,2
 10672  0441  2C64               	goto	l4599
 10673  0442                     l4591:	
 10674                           
 10675                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 10676  0442  3001               	movlw	low (_dpowers| (0+32768))
 10677  0443  0084               	movwf	4
 10678  0444  3083               	movlw	high (_dpowers| (0+32768))
 10679  0445  0085               	movwf	5
 10680  0446  356A               	lslf	sprintf@c^(0+128),w
 10681  0447  0784               	addwf	4,f
 10682  0448  1803               	skipnc
 10683  0449  0A85               	incf	5,f
 10684  044A  3F00               	moviw [0]fsr0
 10685  044B  0020               	movlb	0	; select bank0
 10686  044C  00E9               	movwf	??_sprintf
 10687  044D  3F01               	moviw [1]fsr0
 10688  044E  00EA               	movwf	??_sprintf+1
 10689  044F  086A               	movf	??_sprintf+1,w
 10690  0450  0021               	movlb	1	; select bank1
 10691  0451  0265               	subwf	(sprintf@_val+1)^(0+128),w
 10692  0452  1D03               	skipz
 10693  0453  2C58               	goto	u4095
 10694  0454  0020               	movlb	0	; select bank0
 10695  0455  0869               	movf	??_sprintf,w
 10696  0456  0021               	movlb	1	; select bank1
 10697  0457  0264               	subwf	sprintf@_val^(0+128),w
 10698  0458                     u4095:	
 10699  0458  1C03               	btfss	3,0
 10700  0459  2C64               	goto	l4599
 10701                           
 10702                           ;doprnt.c: 1314: break;
 10703  045A  3001               	movlw	1
 10704  045B  0020               	movlb	0	; select bank0
 10705  045C  00E9               	movwf	??_sprintf
 10706  045D  0869               	movf	??_sprintf,w
 10707  045E  0021               	movlb	1	; select bank1
 10708  045F  07EA               	addwf	sprintf@c^(0+128),f
 10709  0460  086A               	movf	sprintf@c^(0+128),w
 10710  0461  3A05               	xorlw	5
 10711  0462  1D03               	skipz
 10712  0463  2C42               	goto	l4591
 10713  0464                     l4599:	
 10714                           
 10715                           ;doprnt.c: 1429: {
 10716                           ;doprnt.c: 1476: }
 10717                           ;doprnt.c: 1479: prec = c;
 10718  0464  086A               	movf	sprintf@c^(0+128),w
 10719  0465  0020               	movlb	0	; select bank0
 10720  0466  00E9               	movwf	??_sprintf
 10721  0467  0869               	movf	??_sprintf,w
 10722  0468  0021               	movlb	1	; select bank1
 10723  0469  00E8               	movwf	sprintf@prec^(0+128)
 10724  046A                     l4609:	
 10725                           ;doprnt.c: 1481: while(prec--) {
 10726                           
 10727  046A  30FF               	movlw	-1
 10728  046B  0020               	movlb	0	; select bank0
 10729  046C  00E9               	movwf	??_sprintf
 10730  046D  0869               	movf	??_sprintf,w
 10731  046E  0021               	movlb	1	; select bank1
 10732  046F  07E8               	addwf	sprintf@prec^(0+128),f
 10733  0470  0868               	movf	sprintf@prec^(0+128),w
 10734  0471  3AFF               	xorlw	255
 10735  0472  1903               	btfsc	3,2
 10736  0473  2BF1               	goto	l4611
 10737                           
 10738                           ;doprnt.c: 1485: {
 10739                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 10740  0474  300A               	movlw	10
 10741  0475  0020               	movlb	0	; select bank0
 10742  0476  00E0               	movwf	?___lwmod
 10743  0477  3000               	movlw	0
 10744  0478  00E1               	movwf	?___lwmod+1
 10745  0479  3001               	movlw	low (_dpowers| (0+32768))
 10746  047A  0084               	movwf	4
 10747  047B  3083               	movlw	high (_dpowers| (0+32768))
 10748  047C  0085               	movwf	5
 10749  047D  0021               	movlb	1	; select bank1
 10750  047E  3568               	lslf	sprintf@prec^(0+128),w
 10751  047F  0784               	addwf	4,f
 10752  0480  1803               	skipnc
 10753  0481  0A85               	incf	5,f
 10754  0482  3F00               	moviw [0]fsr0
 10755  0483  00F1               	movwf	?___lwdiv
 10756  0484  3F01               	moviw [1]fsr0
 10757  0485  00F2               	movwf	?___lwdiv+1
 10758  0486  0865               	movf	(sprintf@_val+1)^(0+128),w
 10759  0487  01F4               	clrf	?___lwdiv+3
 10760  0488  07F4               	addwf	?___lwdiv+3,f
 10761  0489  0864               	movf	sprintf@_val^(0+128),w
 10762  048A  01F3               	clrf	?___lwdiv+2
 10763  048B  07F3               	addwf	?___lwdiv+2,f
 10764  048C  318A  2249  3183   	fcall	___lwdiv
 10765  048F  0872               	movf	?___lwdiv+1,w
 10766  0490  0020               	movlb	0	; select bank0
 10767  0491  01E3               	clrf	?___lwmod+3
 10768  0492  07E3               	addwf	?___lwmod+3,f
 10769  0493  0871               	movf	?___lwdiv,w
 10770  0494  01E2               	clrf	?___lwmod+2
 10771  0495  07E2               	addwf	?___lwmod+2,f
 10772  0496  3189  21BC  3183   	fcall	___lwmod
 10773  0499  0020               	movlb	0	; select bank0
 10774  049A  0860               	movf	?___lwmod,w
 10775  049B  3E30               	addlw	48
 10776  049C  00E9               	movwf	??_sprintf
 10777  049D  0869               	movf	??_sprintf,w
 10778  049E  0021               	movlb	1	; select bank1
 10779  049F  00EA               	movwf	sprintf@c^(0+128)
 10780                           
 10781                           ;doprnt.c: 1530: }
 10782                           ;doprnt.c: 1531: ((*sp++ = (c)),(++ccnt));
 10783  04A0  086A               	movf	sprintf@c^(0+128),w
 10784  04A1  0020               	movlb	0	; select bank0
 10785  04A2  00E9               	movwf	??_sprintf
 10786  04A3  0021               	movlb	1	; select bank1
 10787  04A4  0869               	movf	sprintf@sp^(0+128),w
 10788  04A5  0086               	movwf	6
 10789  04A6  3002               	movlw	2	; select bank4/5
 10790  04A7  0087               	movwf	7
 10791  04A8  0020               	movlb	0	; select bank0
 10792  04A9  0869               	movf	??_sprintf,w
 10793  04AA  0081               	movwf	1
 10794  04AB  3001               	movlw	1
 10795  04AC  00E9               	movwf	??_sprintf
 10796  04AD  0869               	movf	??_sprintf,w
 10797  04AE  0021               	movlb	1	; select bank1
 10798  04AF  07E9               	addwf	sprintf@sp^(0+128),f
 10799  04B0  3001               	movlw	1
 10800  04B1  07E2               	addwf	sprintf@ccnt^(0+128),f
 10801  04B2  3000               	movlw	0
 10802  04B3  3DE3               	addwfc	(sprintf@ccnt+1)^(0+128),f
 10803  04B4  2C6A               	goto	l4609
 10804  04B5                     l4613:	
 10805                           ;doprnt.c: 1532: }
 10806                           ;doprnt.c: 1540: }
 10807                           ;doprnt.c: 1542: alldone:
 10808                           
 10809                           
 10810                           ;doprnt.c: 1545: *sp = 0;
 10811  04B5  0869               	movf	sprintf@sp^(0+128),w
 10812  04B6  0086               	movwf	6
 10813  04B7  3002               	movlw	2	; select bank4/5
 10814  04B8  0087               	movwf	7
 10815  04B9  0181               	clrf	1
 10816                           
 10817                           ;doprnt.c: 1547: return ccnt;
 10818  04BA  0863               	movf	(sprintf@ccnt+1)^(0+128),w
 10819  04BB  0020               	movlb	0	; select bank0
 10820  04BC  01E5               	clrf	?_sprintf+1
 10821  04BD  07E5               	addwf	?_sprintf+1,f
 10822  04BE  0021               	movlb	1	; select bank1
 10823  04BF  0862               	movf	sprintf@ccnt^(0+128),w
 10824  04C0  0020               	movlb	0	; select bank0
 10825  04C1  01E4               	clrf	?_sprintf
 10826  04C2  07E4               	addwf	?_sprintf,f
 10827  04C3  0008               	return
 10828  04C4                     __end_of_sprintf:	
 10829                           
 10830                           	psect	text51
 10831  09BC                     __ptext51:	
 10832 ;; *************** function ___lwmod *****************
 10833 ;; Defined at:
 10834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\pic\lwmod.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  divisor         2    0[BANK0 ] unsigned int 
 10837 ;;  dividend        2    2[BANK0 ] unsigned int 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  counter         1   10[COMMON] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[BANK0 ] unsigned int 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;Total ram usage:        6 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:    1
 10856 ;; This function calls:
 10857 ;;		Nothing
 10858 ;; This function is called by:
 10859 ;;		_sprintf
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           
 10864                           ;psect for function ___lwmod
 10865  09BC                     ___lwmod:	
 10866                           
 10867                           ;incstack = 0
 10868                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10869  09BC  0020               	movlb	0	; select bank0
 10870  09BD  0861               	movf	___lwmod@divisor+1,w
 10871  09BE  0460               	iorwf	___lwmod@divisor,w
 10872  09BF  1903               	skipnz
 10873  09C0  29E4               	goto	l5373
 10874  09C1  01FA               	clrf	___lwmod@counter
 10875  09C2  0AFA               	incf	___lwmod@counter,f
 10876  09C3                     l5363:	
 10877  09C3  1BE1               	btfsc	___lwmod@divisor+1,7
 10878  09C4  29CF               	goto	l5365
 10879  09C5  3001               	movlw	1
 10880  09C6                     u5205:	
 10881  09C6  35E0               	lslf	___lwmod@divisor,f
 10882  09C7  0DE1               	rlf	___lwmod@divisor+1,f
 10883  09C8  0B89               	decfsz	9,f
 10884  09C9  29C6               	goto	u5205
 10885  09CA  3001               	movlw	1
 10886  09CB  00F9               	movwf	??___lwmod
 10887  09CC  0879               	movf	??___lwmod,w
 10888  09CD  07FA               	addwf	___lwmod@counter,f
 10889  09CE  29C3               	goto	l5363
 10890  09CF                     l5365:	
 10891  09CF  0861               	movf	___lwmod@divisor+1,w
 10892  09D0  0263               	subwf	___lwmod@dividend+1,w
 10893  09D1  1D03               	skipz
 10894  09D2  29D5               	goto	u5225
 10895  09D3  0860               	movf	___lwmod@divisor,w
 10896  09D4  0262               	subwf	___lwmod@dividend,w
 10897  09D5                     u5225:	
 10898  09D5  1C03               	skipc
 10899  09D6  29DB               	goto	l5369
 10900  09D7  0860               	movf	___lwmod@divisor,w
 10901  09D8  02E2               	subwf	___lwmod@dividend,f
 10902  09D9  0861               	movf	___lwmod@divisor+1,w
 10903  09DA  3BE3               	subwfb	___lwmod@dividend+1,f
 10904  09DB                     l5369:	
 10905  09DB  3001               	movlw	1
 10906  09DC                     u5235:	
 10907  09DC  36E1               	lsrf	___lwmod@divisor+1,f
 10908  09DD  0CE0               	rrf	___lwmod@divisor,f
 10909  09DE  0B89               	decfsz	9,f
 10910  09DF  29DC               	goto	u5235
 10911  09E0  3001               	movlw	1
 10912  09E1  02FA               	subwf	___lwmod@counter,f
 10913  09E2  1D03               	btfss	3,2
 10914  09E3  29CF               	goto	l5365
 10915  09E4                     l5373:	
 10916  09E4  0863               	movf	___lwmod@dividend+1,w
 10917  09E5  01E1               	clrf	?___lwmod+1
 10918  09E6  07E1               	addwf	?___lwmod+1,f
 10919  09E7  0862               	movf	___lwmod@dividend,w
 10920  09E8  01E0               	clrf	?___lwmod
 10921  09E9  07E0               	addwf	?___lwmod,f
 10922  09EA  0008               	return
 10923  09EB                     __end_of___lwmod:	
 10924                           
 10925                           	psect	text52
 10926  0A49                     __ptext52:	
 10927 ;; *************** function ___lwdiv *****************
 10928 ;; Defined at:
 10929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.20\sources\pic\lwdiv.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;  divisor         2    1[COMMON] unsigned int 
 10932 ;;  dividend        2    3[COMMON] unsigned int 
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;  quotient        2    7[COMMON] unsigned int 
 10935 ;;  counter         1    6[COMMON] unsigned char 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  2    1[COMMON] unsigned int 
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;Total ram usage:        8 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    1
 10952 ;; This function calls:
 10953 ;;		Nothing
 10954 ;; This function is called by:
 10955 ;;		_sprintf
 10956 ;;		_ADC_ReadPercentage
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function ___lwdiv
 10962  0A49                     ___lwdiv:	
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10966  0A49  01F7               	clrf	___lwdiv@quotient
 10967  0A4A  01F8               	clrf	___lwdiv@quotient+1
 10968  0A4B  0872               	movf	___lwdiv@divisor+1,w
 10969  0A4C  0471               	iorwf	___lwdiv@divisor,w
 10970  0A4D  1903               	skipnz
 10971  0A4E  2A78               	goto	l5351
 10972  0A4F  01F6               	clrf	___lwdiv@counter
 10973  0A50  0AF6               	incf	___lwdiv@counter,f
 10974  0A51                     l5339:	
 10975  0A51  1BF2               	btfsc	___lwdiv@divisor+1,7
 10976  0A52  2A5D               	goto	l5341
 10977  0A53  3001               	movlw	1
 10978  0A54                     u5135:	
 10979  0A54  35F1               	lslf	___lwdiv@divisor,f
 10980  0A55  0DF2               	rlf	___lwdiv@divisor+1,f
 10981  0A56  0B89               	decfsz	9,f
 10982  0A57  2A54               	goto	u5135
 10983  0A58  3001               	movlw	1
 10984  0A59  00F5               	movwf	??___lwdiv
 10985  0A5A  0875               	movf	??___lwdiv,w
 10986  0A5B  07F6               	addwf	___lwdiv@counter,f
 10987  0A5C  2A51               	goto	l5339
 10988  0A5D                     l5341:	
 10989  0A5D  3001               	movlw	1
 10990  0A5E                     u5155:	
 10991  0A5E  35F7               	lslf	___lwdiv@quotient,f
 10992  0A5F  0DF8               	rlf	___lwdiv@quotient+1,f
 10993  0A60  0B89               	decfsz	9,f
 10994  0A61  2A5E               	goto	u5155
 10995  0A62  0872               	movf	___lwdiv@divisor+1,w
 10996  0A63  0274               	subwf	___lwdiv@dividend+1,w
 10997  0A64  1D03               	skipz
 10998  0A65  2A68               	goto	u5165
 10999  0A66  0871               	movf	___lwdiv@divisor,w
 11000  0A67  0273               	subwf	___lwdiv@dividend,w
 11001  0A68                     u5165:	
 11002  0A68  1C03               	skipc
 11003  0A69  2A6F               	goto	l5347
 11004  0A6A  0871               	movf	___lwdiv@divisor,w
 11005  0A6B  02F3               	subwf	___lwdiv@dividend,f
 11006  0A6C  0872               	movf	___lwdiv@divisor+1,w
 11007  0A6D  3BF4               	subwfb	___lwdiv@dividend+1,f
 11008  0A6E  1477               	bsf	___lwdiv@quotient,0
 11009  0A6F                     l5347:	
 11010  0A6F  3001               	movlw	1
 11011  0A70                     u5175:	
 11012  0A70  36F2               	lsrf	___lwdiv@divisor+1,f
 11013  0A71  0CF1               	rrf	___lwdiv@divisor,f
 11014  0A72  0B89               	decfsz	9,f
 11015  0A73  2A70               	goto	u5175
 11016  0A74  3001               	movlw	1
 11017  0A75  02F6               	subwf	___lwdiv@counter,f
 11018  0A76  1D03               	btfss	3,2
 11019  0A77  2A5D               	goto	l5341
 11020  0A78                     l5351:	
 11021  0A78  0878               	movf	___lwdiv@quotient+1,w
 11022  0A79  01F2               	clrf	?___lwdiv+1
 11023  0A7A  07F2               	addwf	?___lwdiv+1,f
 11024  0A7B  0877               	movf	___lwdiv@quotient,w
 11025  0A7C  01F1               	clrf	?___lwdiv
 11026  0A7D  07F1               	addwf	?___lwdiv,f
 11027  0A7E  0008               	return
 11028  0A7F                     __end_of___lwdiv:	
 11029                           
 11030                           	psect	intentry
 11031  0004                     __pintentry:	
 11032 ;; *************** function _SYS_InterruptHigh *****************
 11033 ;; Defined at:
 11034 ;;		line 112 in file "../src/pic16f1459/system.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;		None               void
 11041 ;; Registers used:
 11042 ;;		None
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;Total ram usage:        1 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; This function calls:
 11055 ;;		Nothing
 11056 ;; This function is called by:
 11057 ;;		Interrupt level 1
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061  0004                     _SYS_InterruptHigh:	
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _SYS_InterruptHigh: []
 11065  0004  3180               	pagesel	$
 11066  0005  0020               	movlb	0	; select bank0
 11067  0006  087F               	movf	127,w
 11068  0007  00F0               	movwf	??_SYS_InterruptHigh
 11069  0008  0870               	movf	??_SYS_InterruptHigh,w
 11070  0009  00FF               	movwf	127
 11071  000A  0009               	retfie
 11072  000B                     __end_of_SYS_InterruptHigh:	
 11073  007E                     btemp	set	126	;btemp
 11074  007E                     wtemp0	set	126


Data Sizes:
    Strings     23
    Constant    207
    Data        18
    BSS         271
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            16     16      16
    BANK1            16     14      16
    BANK2            16      0      16
    BANK3            80      0      75
    BANK4            80      6      73
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?_memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK2[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK5[64]), 

    ?_sprintf	int  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2407$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1989_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1989_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1989_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1989_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S954$pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    S944$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S944$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S920$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S920$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S920$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S920$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceCDCBasicDemoInitialize
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _SYSTEM_Initialize->_LED_Enable
    _SYSTEM_Initialize->_BUTTON_Enable
    _APP_DeviceCDCBasicDemoTasks->_CDCTxService
    _CDCTxService->_USBTransferOnePacket
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceCDCBasicDemoInitialize->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _APP_DeviceCDCBasicDemoTasks->_sprintf
    _sprintf->___lwmod

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _APP_DeviceCDCBasicDemoTasks->_sprintf

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11896
                                             13 BANK1      1     1      0
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                          _scan_task
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    9391
                                             10 BANK1      3     3      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    5751
                                              6 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
                   Absolute function
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
                   Absolute function
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    5423
                                              5 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    4231
                                              4 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1654
                                             11 BANK0      2     2      0
                                              0 BANK1      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1431
                                             11 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6      96
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    1100
                                             11 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    1100
                                             11 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    1100
                                              5 BANK0      6     0      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      62
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceCDCBasicDemoInitialize                     1     1      0    1007
                                             11 COMMON     1     1      0
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            2     2      0    1007
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     536
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     316
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              1 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _scan_task                                            5     5      0     249
                                              9 COMMON     1     1      0
                                              0 BANK0      4     4      0
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (2) _store_key_level                                      4     3      1     110
                                              5 COMMON     4     3      1
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (3) _process_level                                        4     2      2      44
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_clock_and_data                                   3     2      1      44
                                              1 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (2) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                         _LED_Enable
                      _BUTTON_Enable
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          8     8      0    1918
                                             11 BANK0      2     2      0
                                              0 BANK4      6     6      0
                            _sprintf
                        _putUSBUSART
                       _CDCTxService
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         6     6      0     709
                                              9 COMMON     2     2      0
                                              0 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) _USBTransferOnePacket                                 8     4      4     471
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          3     2      1      62
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    13      5    1079
                                              4 BANK0      7     2      5
                                              0 BANK1     11    11      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     232
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _putUSBUSART
     _CDCTxService
       _USBTransferOnePacket
   _SYSTEM_Initialize
     _LED_Enable
     _BUTTON_Enable
   _USBDeviceInit
   _scan_task
     _scan_init
     _set_timer
     _waiting_for_timer
     _set_clock_and_data
       _get_data (ARG)
     _get_data
     _is_end_of_scan
     _run_adc
     _is_adc_ready
     _get_adc
     _store_key_level
       _is_end_of_scan (ARG)
       _get_adc (ARG)
       _process_level (ARG)
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckCDCRequest
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
           Absolute function(Fake)
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         Absolute function(Fake)

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       A       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      E      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      0      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      6      49      13       91.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     151      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     15B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Feb 24 13:17:33 2016

                               _USB_SD_Ptr 030B                                          pc 0002  
                              __CFG_CP$OFF 0000                                ?_LED_Enable 0070  
                            _USBDeviceInit 057E                         __size_of_CDCInitEP 003B  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0065       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0067  
                                      l110 0AB7                                        l140 08F7  
                                      l312 17E9                                        l320 0850  
                                      l330 084D                                        l323 085B  
              __end_of_USBStdGetDscHandler 1000                                        l502 0172  
                                      l351 083F                                        l327 0842  
                                      l511 01D9                                        l512 0231  
                                      l348 0834                                        l702 0D40  
                                      l632 0BB9                                        l633 0B88  
                                      l634 0B8B                                        l714 0073  
                                      l715 0074                                        l564 0276  
                                      l485 05C3                                        l629 0B7E  
                                      l727 00EC                                        l592 0642  
                                      l496 0147                                        l577 0EC3  
                                      l498 014B                                        l691 0D6B  
                                      l676 0E54                                        _BDT 0020  
                                      l693 0D15                                        l783 0DCD  
                                      l679 0E96                                        _UIE 0E92  
                                      _UIR 0E90                     _APP_LEDUpdateUSBStatus 0C14  
                               _USBSuspend 0915                       USBStdSetCfgHandler@i 006F  
                     USBStdSetCfgHandler@p 006C                               __CFG_BORV$LO 0000  
                                      wreg 0009                             _USBDeviceTasks 013A  
                           _USBDeviceState 0166                              _BUTTON_Enable 17E0  
                                     S5463 081A                                       S5457 0800  
                    ??_USBCtrlTrfRxService 0073                   USBEnableEndpoint@options 0078  
                             __CFG_LVP$OFF 0000                            __end_of_LED_Off 084E  
                                     l3205 08EC                                       l3311 07A9  
                                     l3303 0785                                       l3321 07C9  
                                     l3233 05AA                                       l3225 059E  
                                     l3217 058D                                       l4033 07E7  
                                     l4041 0F9C                                       l3315 07B1  
                                     l3307 0798                                       l4051 0FCF  
                                     l4131 0A47                                       l5011 0F44  
               USBConfigureEndpoint@handle 0077                                       l3317 07B8  
                                     l3325 07D4                                       l3245 05C8  
                                     l5101 06E8                                       l4125 0A22  
                                     l5021 0F78                                       l3327 07DF  
                                     l5031 097A                                       l5111 06FF  
                                     l4039 0F92                                       l4063 0FF3  
                                     l5023 0F7B                                       l3273 0606  
                                     l4057 0FED                                       l4049 0FCC  
                                     l4145 0E4F                                       l5017 0F69  
                                     l3531 0837                                       l3267 05E6  
                                     l5035 0982                                       l4059 0FF0  
                                     l4155 0E79                                       l3197 08DE  
                                     l3621 0A13                                       l3293 0769  
                                     l5133 0744                                       l5117 0713  
                                     l4077 0B94                                       l4165 0E9F  
                                     l3623 0A14                                       l3287 0761  
                                     l4087 0BAD                                       l5231 0052  
                                     l5215 0022                                       l4167 0EA1  
                                     l4159 0E89                                       l5049 02E4  
                                     l3721 09B7                                       l5217 0024  
                                     l4611 03F1                                       l5067 0B42  
                                     l5059 0B34                                       l3299 0776  
                                     l5251 00A3                                       l5171 0D21  
                                     l5341 0A5D                                       l4613 04B5  
                                     l3901 0247                                       l5093 06D7  
                                     l5181 0D2E                                       l5173 0D24  
                                     l5351 0A78                                       l5079 0B6E  
                                     l4631 04D6                                       l4711 0C31  
                                     l4703 0C1B                                       l3719 09B5  
                                     l5255 00AD                                       l5239 007F  
                                     l5183 0D31                                       l4609 046A  
                                     l4633 04D9                                       l3577 17FD  
                                     l3913 0283                                       l3921 028D  
                                     l3905 024B                                       l5281 011F  
                                     l5265 00DA                                       l5249 009C  
                                     l5185 0D34                                       l5169 0D1E  
                                     l5347 0A6F                                       l5339 0A51  
                                     l5363 09C3                                       l4651 04FD  
                                     l4723 0C4C                                       l4715 0C36  
                                     l4731 0C5D                                       l4707 0C26  
                                     l3691 0DF2                                       l3843 0CF1  
                                     l5275 00F3                                       l5267 00DF  
                                     l5195 0D50                                       l4811 0184  
                                     l5365 09CF                                       l5373 09E4  
                                     l4581 042F                                       l4573 0417  
                                     l5461 0AB2                                       l4591 0442  
                                     l4575 0419                                       l4559 0CB3  
                                     l4743 0853                                       l4719 0C41  
                                     l3871 0EDB                                       l3839 0CDD  
                                     l5279 0115                                       l5199 0D60  
                                     l4831 01AE                                       l4823 019F  
                                     l5369 09DB                                       l4657 0508  
                                     l4737 0845                                       l4729 0C57  
                                     l3881 0EF8                                       l3961 0691  
                                     l3953 064A                                       l4841 01BB  
                                     l4817 018A                                       l4579 0420  
                                     l4667 0524                                       l4675 053B  
                                     l4931 0D93                                       l5459 0A98  
                                     l3859 0EBB                                       l3963 069D  
                                     l3955 0663                                       l4835 01B4  
                                     l4693 0566                                       l4677 0540  
                                     l4685 0557                                       l4749 0939  
                                     l4599 0464                                       l4695 056B  
                                     l4687 055B                                       l4927 0D8C  
                                     l4919 0D80                                       l4951 0DBB  
                                     l3879 0EF4                                       l4791 015F  
                                     l4945 0DB2                                       l3889 0F11  
                                     l3969 06C2                                       l4849 01D1  
                                     l4939 0DA4                                       l4891 0A8C  
                                     l4883 0A80                                       l4875 0215  
                                     l4859 01DF                                       l4779 014E  
                                     l4885 0A83                                       l4877 0225  
                                     l4869 01FC                                       l4887 0A86  
                                     l4895 0A8F                                       l4799 016C  
                                     l4889 0A89                                       l4977 0965  
                                     l4979 096E                                       STR_1 03D0  
                                     u3315 063C                                       u3175 0CE6  
                                     u2385 05AD                                       u3425 07F1  
                                     u5205 09C6                                       u5135 0A54  
                                     u4095 0458                                       u5225 09D5  
                                     u5155 0A5E                                       u5235 09DC  
                                     u5165 0A68                                       u5175 0A70  
                                     u4755 02C2                                       u4765 02C8  
                                     u4685 0F25                                       u4775 02D0  
                    ??_USBCtrlTrfTxService 0071                                       _UCFG 0E91  
                                     _UEP0 0E98                                       _UEP1 0E99  
                                     _UEIE 0E97                                       _UEIR 0E93  
                                     _UCON 0E8E                                       _TMR0 0015  
                             __CFG_WRT$OFF 0000                            _CDCDataInHandle 01C2  
   USBStdFeatureReqHandler@current_ep_data 00E2                                       _pDst 01D1  
                                     _main 0932                                       fsr0h 0005  
                                     fsr1h 0007                                       fsr0l 0004  
                                     indf0 0000                                       indf1 0001  
                              _BaudRateGen 01A6                                       fsr1l 0006  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                                     start 000B                              __CFG_IESO$OFF 0000  
                     process_level@idx_key 0074                 __end_of_USBCheckStdRequest 0D6C  
                   ??_USBCtrlTrfOutHandler 0077                              __CFG_MCLRE$ON 0000  
                      USBDeviceInit@i_1489 0075                  ??_USBStdFeatureReqHandler 006B  
                 ??_USBStdGetStatusHandler 0071                             ?_USBDeviceInit 0070  
                              _writeBuffer 02A0                                      ?_main 0070  
                            __CFG_WDTE$OFF 0000          __size_of_USBCtrlEPServiceComplete 0086  
                   __end_of_USBDeviceTasks 0234                  ?_USBCtrlEPServiceComplete 0070  
                          __end_of___lwdiv 0A7F                            __end_of___lwmod 09EB  
                                    _UADDR 0E96                                      _USTAT 0E8F  
       __size_of_USBCtrlEPAllowStatusStage 0067                             __CFG_FCMEN$OFF 0000  
                           ?_BUTTON_Enable 0070                            __end_of_get_adc 17CA  
          __end_of_USBCtrlEPAllowDataStage 0D0D                                      _sd000 03CC  
                                    _sd001 0352                                      _sd002 0386  
           ?_USBIncrement1msInternalTimers 0070                              ?_is_adc_ready 0070  
                          __end_of_dpowers 030B                            _store_key_level 09EB  
              __size_of_set_clock_and_data 001A                            ??_process_level 0073  
                      __size_of_LED_Enable 000E                          __end_of_CDCInitEP 0B2D  
                          __end_of_run_adc 02FE                                      status 0003  
                                    wtemp0 007E                            __end_of_sprintf 04C4  
                          putUSBUSART@data 0073               __size_of_USBStdSetCfgHandler 008F  
                          __initialization 0AB8                 is_end_of_scan@scan_counter 01D7  
                             __end_of_main 0950                      _control_signal_bitmap 01CE  
                           __CFG_LPBOR$OFF 0000                  __size_of_USBCtrlEPService 0072  
                                   ??_main 00ED                            ?_USBDeviceTasks 0070  
                              ?_USBSuspend 0070                                  ??_LED_Off 0071  
                      __CFG_USBLSCLK$48MHz 0000                             ??_is_adc_ready 0071  
                             _cdc_mem_type 01CC                                     _ADCON0 009D  
                                   _ADCON1 009E                                     _ADCON2 009F  
                         _CDCDataOutHandle 0164                                     _ACTCON 039B  
                                   _ADRESH 009C                                     _ADRESL 009B  
                                   _ANSELA 018C                     SYSTEM_Initialize@state 0072  
                    __size_of_CDCTxService 00BA                                     _LED_On 084E  
                      set_clock_and_data@c 0073                        set_clock_and_data@d 0071  
                                   _OSCCON 0099                              CDCTxService@i 0062  
                           __CFG_PWRTE$OFF 0000                          _shortPacketStatus 01D5  
                         __end_of_get_data 17CF                            USBDeviceTasks@i 00EC  
              USBStdFeatureReqHandler@pUEP 00E0                   USBTransferOnePacket@data 0072  
               USBCtrlTrfInHandler@lastDTS 0076                            ??_USBDeviceInit 0071  
                             ?_putUSBUSART 0071                             __CFG_STVREN$ON 0000  
                                ??___lwdiv 0075                                  ??___lwmod 0079  
                        _USBEnableEndpoint 0971            __size_of_USBStdGetStatusHandler 004D  
                                   _memset 07E1                         ?_USBEnableEndpoint 0078  
                                ??_get_adc 0071                    __end_of_store_key_level 0A1A  
            __size_of_USBTransferOnePacket 004C                            ??_BUTTON_Enable 0071  
                             _CDCTxService 04C4                        ??_USBEnableEndpoint 0079  
                                ??_run_adc 0071                                  ??_sprintf 0069  
                              _CtrlTrfData 0058                    __size_of_is_end_of_scan 0013  
             ?_APP_DeviceCDCBasicDemoTasks 0070                       _controlTransferState 0168  
                        _SYSTEM_Initialize 08DC                    __end_of__initialization 0AEF  
                       ?_SYSTEM_Initialize 0070                   __size_of_USBStallHandler 0026  
                      __size_of_USBSuspend 001D                             __pcstackCOMMON 0070  
                __end_of_USBEnableEndpoint 0996                              __end_of_sd000 03D0  
                            __end_of_sd001 0386                              __end_of_sd002 03BA  
                             __pidataBANK4 085C                        ??_SYSTEM_Initialize 0072  
                                LED_On@led 0071           __size_of_USBCtrlEPAllowDataStage 0057  
                               _adc_levels 0220                     process_level@old_level 0071  
                   process_level@new_level 0072                               ??_LED_Enable 0071  
            __size_of_USBConfigureEndpoint 003D                __end_of_USBCtrlTrfInHandler 0EA4  
                  ?_APP_LEDUpdateUSBStatus 0070                     store_key_level@idx_key 0169  
                           _OPTION_REGbits 0095                          _CDCTxService$2388 0060  
                           scan_task@state 01D8                                 _cdc_notice 0247  
                               _cdc_rx_len 01CD                                 _cdc_tx_len 0167  
               store_key_level@end_of_scan 0075                              _buttonMessage 0251  
                 ??_USBCtrlTrfSetupHandler 00E5                    _USBTicksSinceSuspendEnd 01CA  
                __end_of_SYSTEM_Initialize 08F8                     _USBStdGetStatusHandler 0B79  
                            _buttonPressed 01CB                                 __pbssBANK1 00EE  
                               __pbssBANK2 0160                                 __pbssBANK3 01A0  
                               __pbssBANK4 0220                                 __pbssBANK5 02A0  
                               __pbssBANK6 0320                                    ?_LED_On 0070  
            ??_APP_DeviceCDCBasicDemoTasks 0263   __end_of_APP_DeviceCDCBasicDemoInitialize 0894  
__size_of_APP_DeviceCDCBasicDemoInitialize 0013         ??_APP_DeviceCDCBasicDemoInitialize 007B  
        ?_APP_DeviceCDCBasicDemoInitialize 0070           _APP_DeviceCDCBasicDemoInitialize 0881  
                       __end_of_LED_Enable 0840                       store_key_level@level 0078  
              __size_of_USBWakeFromSuspend 0021                                _pBDTEntryIn 0160  
         __end_of_USBCtrlEPServiceComplete 02BA                __size_of_USBCheckCDCRequest 0062  
                       __size_of_scan_init 001D                                 __pmaintext 0932  
                       __size_of_scan_task 0087                       USBCtrlTrfRxService@i 0075  
                     __end_of_is_adc_ready 17D4                              LED_Enable@led 0071  
                          __CFG_PLLMULT$3x 0000             __end_of_APP_LEDUpdateUSBStatus 0C63  
                               __pintentry 0004                                    ?_memset 0071  
                               _device_dsc 03BA                           _USBCtrlEPService 0F15  
                               _ep_data_in 01AE                         __size_of_set_timer 000B  
              __end_of_USBCtrlTrfRxService 06CB                         _USBCheckStdRequest 0D0D  
                         ?_store_key_level 0075                          _configDescriptor1 030F  
                                  _LED_Off 0840                __end_of_USBCtrlTrfTxService 0F15  
                      _USBStdSetCfgHandler 06CB                                  ?_get_data 0070  
                      ?_USBCheckStdRequest 0070               __size_of_USBStdGetDscHandler 0079  
                                  _UIEbits 0E92                                 __stringtab 0300  
                                  _UIRbits 0E90                            __size_of_LED_On 000E  
                            _cdc_trf_state 00EE                          is_end_of_scan@res 0073  
           APP_LEDUpdateUSBStatus@ledCount 01B7                                    _pCDCDst 01BD  
                                  _pCDCSrc 01BF            ??_USBIncrement1msInternalTimers 0071  
                     ?_USBStdSetCfgHandler 0070                                  _CDCInitEP 0AF2  
               __size_of_USBEnableEndpoint 0025                                 _readBuffer 0320  
                     ??_USBCheckStdRequest 00E4              __size_of_USBCtrlTrfOutHandler 002F  
                         ??_USBDeviceTasks 00EA                                    ___lwdiv 0A49  
                        ??_USBStallHandler 0071                                    ___lwmod 09BC  
     __size_of_APP_DeviceCDCBasicDemoTasks 0053                       __size_of_putUSBUSART 0016  
                          __size_of_memset 001F                  __end_of_configDescriptor1 0352  
                                  __ptext1 013A                                    __ptext2 0F15  
                                  __ptext3 0E35                                    __ptext4 0A1A  
                                  __ptext5 062C                                    __ptext6 0BC6  
                                  __ptext7 0D0D                                    __ptext8 000D  
                                  __ptext9 0B79                                    _inPipes 016A  
                                  _get_adc 17C7                _USBDeferOUTDataStagePackets 01C6  
                                  _dpowers 0301                               ??_USBSuspend 006B  
                            _scan_task$720 0062                              _scan_task$719 0060  
                               _ready_scan 01D2                                    _s_level 01D4  
               __end_of_set_clock_and_data 08DC                          __end_of_scan_init 0915  
                        __end_of_scan_task 07E1                                    _run_adc 02F7  
                       __end_of_USB_CD_Ptr 030F                                 ??_get_data 0071  
               __size_of_SYSTEM_Initialize 001C                                    _sprintf 03E7  
          __size_of_USBCtrlTrfSetupHandler 004E                                    clrloop0 17DB  
                           _is_end_of_scan 086E                       end_of_initialization 0AEF  
                       __end_of_USB_SD_Ptr 030E                        _pBDTEntryEP0OutNext 007C  
                                  init_ram 17D4                                    memset@c 0073  
                                  memset@n 0075                                    memset@p 0078  
                    __end_of_process_level 0832                                    initloop 17D5  
                          _USB1msTickCount 01AA            _dummy_encapsulated_cmd_response 01D9  
                 ?_USBStdFeatureReqHandler 0070                          __end_of_set_timer 17F5  
                    ??_USBStdSetCfgHandler 006B                                 ?_CDCInitEP 0070  
                               _note_event 01BB                         __end_of_USBSuspend 0932  
                  _USBCtrlEPAllowDataStage 0CB6                   _USBCtrlEPServiceComplete 0234  
                               _wait_timer 01D6                 _USBStatusStageEnabledFlag1 01C7  
               _USBStatusStageEnabledFlag2 01C8                         USBEnableEndpoint@p 0060  
                                _PORTAbits 000C     APP_DeviceCDCBasicDemoTasks@numberChADC 0163  
                         __CFG_FOSC$INTOSC 0000                                  _TRISAbits 008C  
                                _TRISBbits 008D                                  _TRISCbits 008E  
                   __end_of_is_end_of_scan 0881                         _BothEP0OutUOWNsSet 01C1  
                USBStdSetCfgHandler@i_1819 006E                  USBConfigureEndpoint@EPNum 0076  
               ?_USBCtrlEPAllowStatusStage 0070        USER_USB_CALLBACK_EVENT_HANDLER@size 0069  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 006B                                  _USTATcopy 016F  
             __end_of_USBTransferOnePacket 0B79                             __end_of_LED_On 085C  
                    __size_of_is_adc_ready 0005                          putUSBUSART@length 0071  
                       __CFG_PLLEN$ENABLED 0000                     _USBCtrlTrfSetupHandler 0BC6  
                    __end_of_USBDeviceInit 062C      __end_of_USBIncrement1msInternalTimers 08C2  
   __size_of_USBIncrement1msInternalTimers 0018              _USBIncrement1msInternalTimers 08AA  
                               LED_Off@led 0071                             __end_of_memset 0800  
                        _USBBusIsSuspended 01C4                        start_initialization 0AB8  
                  ?_USBStdGetStatusHandler 0070                      __end_of_BUTTON_Enable 17EA  
            USBCtrlTrfRxService@byteToRead 0076                            ?_is_end_of_scan 0070  
                           _is_initialized 01D0                               _is_adc_ready 17CF  
                              _cdc_data_rx 0120                                _cdc_data_tx 00A0  
             __end_of_USBConfigureEndpoint 02F7            __end_of_USBStdFeatureReqHandler 013A  
                                 ??_LED_On 0071          __end_of_USBCtrlEPAllowStatusStage 0E35  
                 __end_of_USBCtrlEPService 0F87                  ??_USBCtrlEPAllowDataStage 0074  
                              ??_CDCInitEP 0063                             USBDeviceInit@i 0076  
                           USBDeviceInit@p 0073                     _pBDTEntryEP0OutCurrent 00EF  
                  USBTransferOnePacket@dir 0071                    USBTransferOnePacket@len 0074  
                      _USBStdGetDscHandler 0F87                                __pdataBANK4 0251  
                                 ??_memset 0077                     _USBActiveConfiguration 01EA  
           __end_of_USBStdGetStatusHandler 0BC6                      _waiting_for_timer$688 0071  
                                 ?_LED_Off 0070                                __pbssCOMMON 007C  
                            __pcstackBANK0 0060                              __pcstackBANK1 00E0  
             __size_of_USBCtrlTrfInHandler 006F                              __pcstackBANK4 0263  
                      __end_of__stringdata 03E7                       ?_USBStdGetDscHandler 0070  
                        __size_of_get_data 0005                 __end_of_USBWakeFromSuspend 0971  
                              sprintf@ccnt 00E2                                sprintf@_val 00E4  
                              sprintf@flag 00E0                                sprintf@prec 00E8  
                          _USBStallHandler 0996                               _pBDTEntryOut 01B4  
               __end_of_USBCheckCDCRequest 0DCE                           ___lwdiv@dividend 0073  
                                 ?___lwdiv 0071                                   ?___lwmod 0060  
                                __pstrings 0300                                  __pswtext1 0800  
                                __pswtext2 081A                                   ?_get_adc 0070  
                     _USBTransferOnePacket 0B2D               __end_of_USBCtrlTrfOutHandler 0A49  
                    ??_USBStdGetDscHandler 0071                                _ep_data_out 01B1  
                                 ?_run_adc 0070                           ___lwdiv@quotient 0077  
                                 ?_sprintf 0064        __end_of_APP_DeviceCDCBasicDemoTasks 0CB6  
              _APP_DeviceCDCBasicDemoTasks 0C63               __size_of_USBCtrlTrfRxService 009F  
            USBConfigureEndpoint@direction 0071                   __size_of_store_key_level 002F  
                                _s_idx_key 01D3                                  _scan_init 08F8  
                                _scan_task 075A               __size_of_USBCtrlTrfTxService 0071  
                                 _LATCbits 010E                 ??_USBCtrlEPServiceComplete 0076  
                                clear_ram0 17DA                         _set_clock_and_data 08C2  
                                 _PIE1bits 0091                                   _PIE2bits 0092  
                        _waiting_for_timer 17F5                                   _PIR2bits 0012  
                USBCtrlEPService@setup_cnt 00E9                         ?_waiting_for_timer 0070  
                                _set_timer 17EA                              ??_putUSBUSART 0072  
                                 _UEP0bits 0E98                 _USBDeferINDataStagePackets 01C5  
              __size_of_USBCheckStdRequest 005F                        ?_set_clock_and_data 0071  
                                 _UCONbits 0E8E                       _USBConfigureEndpoint 02BA  
    APP_DeviceCDCBasicDemoTasks@temp_level 006C           __size_of_USBStdFeatureReqHandler 012D  
                      ??_waiting_for_timer 0071                                 _ADCON0bits 009D  
                               _ADCON1bits 009E                                __stringdata 03D0  
                               _ADCON2bits 009F                      ?_USBTransferOnePacket 0071  
                        _SYS_InterruptHigh 0004                              ?_CDCTxService 0070  
                             _RemoteWakeup 01C3                           __size_of_LED_Off 000E  
                       ?_SYS_InterruptHigh 0070                    __end_of_USBStallHandler 09BC  
                     ??_set_clock_and_data 0072                ??_USBCtrlEPAllowStatusStage 0071  
              __end_of_USBStdSetCfgHandler 075A                                 ?_scan_init 0070  
                               ?_scan_task 0070                        ??_SYS_InterruptHigh 0070  
                __end_of_waiting_for_timer 1800                         __end_of_device_dsc 03CC  
                 ??_APP_LEDUpdateUSBStatus 0072                    ?_USBCtrlTrfSetupHandler 0070  
                  USBStdGetStatusHandler@p 0072                     USBTransferOnePacket@ep 0077  
                               ?_set_timer 0070                                   _SetupPkt 0050  
                    ?_USBConfigureEndpoint 0071                           __size_of___lwdiv 0036  
                         __size_of___lwmod 002F                  __end_of_SYS_InterruptHigh 000B  
                       __end_of__stringtab 0301                           ??_is_end_of_scan 0071  
                               _ANSELAbits 018C                        __end_of_putUSBUSART 08AA  
                              _line_coding 01E1                                 _ANSELBbits 018D  
                               _ANSELCbits 018E                             ??_CDCTxService 0079  
                         __size_of_get_adc 0003                     __size_of_process_level 000B  
                  __size_of_USBDeviceTasks 00FA                            ___lwdiv@divisor 0071  
                          ___lwdiv@counter 0076                                   __ptext10 0F87  
                                 __ptext11 06CB                                   __ptext20 0950  
                                 __ptext12 07E1                                   __ptext21 0A7F  
                                 __ptext13 0234                                   __ptext30 057E  
                                 __ptext22 0D6C                                   __ptext14 0CB6  
                                 __ptext31 075A                                   __ptext23 0C14  
                                 __ptext15 0EA4                                   __ptext40 17F5  
                                 __ptext32 09EB                                   __ptext24 084E  
                                 __ptext16 0DCE                                   __ptext41 17EA  
                                 __ptext33 0827                                   __ptext25 0840  
                                 __ptext17 0996                                   __ptext50 03E7  
                                 __ptext42 08F8                                   __ptext34 17C7  
                                 __ptext26 0881                                   __ptext18 08AA  
                                 __ptext51 09BC                                   __ptext43 08DC  
                                 __ptext35 17CF                                   __ptext27 0AF2  
                                 __ptext19 0915                                   __ptext52 0A49  
                                 __ptext44 17E0                                   __ptext36 02F7  
                                 __ptext28 0971                                   __ptext45 0832  
                                 __ptext37 086E                                   __ptext29 02BA  
                                 __ptext46 0C63                                   __ptext38 17CA  
                                 __ptext47 04C4                                   __ptext39 08C2  
                                 __ptext48 0B2D                                   __ptext49 0894  
                                 _get_data 17CA                           __size_of_run_adc 0007  
                         __size_of_sprintf 00DD                                   _midiData 01B9  
           __end_of_USBCtrlTrfSetupHandler 0C14                              __size_of_main 001E  
                        ?_USBCtrlEPService 0070                         ??_USBCtrlEPService 00E6  
                        ??_store_key_level 0076                        _USBCtrlTrfInHandler 0E35  
                      BUTTON_Enable@button 0071                                   _outPipes 01A0  
                     _USBCtrlTrfOutHandler 0A1A                  _USBCtrlEPAllowStatusStage 0DCE  
                               _LED_Enable 0832                     ??_USBTransferOnePacket 0075  
                _USBDeferStatusStagePacket 0165                   CDCTxService@byte_to_send 0063  
                               _INTCONbits 000B                       ?_USBCtrlTrfInHandler 0070  
            USBCtrlTrfTxService@byteToSend 0073                                   memset@p1 0071  
                         ?_USBStallHandler 0070                   USBStdFeatureReqHandler@p 00E3  
                                 intlevel1 0000                                  sprintf@ap 00E1  
                                sprintf@sp 00E9                                ??_scan_init 0071  
                              ??_scan_task 0079                     __size_of_USBDeviceInit 00AE  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0AB8   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 0065          ??_USER_USB_CALLBACK_EVENT_HANDLER 007C  
          _USER_USB_CALLBACK_EVENT_HANDLER 0A7F                           ___lwmod@dividend 0062  
               __size_of_waiting_for_timer 000B                          __CFG_CLKOUTEN$OFF 0000  
                            _process_level 0827            __size_of_APP_LEDUpdateUSBStatus 004F  
                              ??_set_timer 0071                     ??_USBConfigureEndpoint 0072  
                    ?_USBCtrlTrfOutHandler 0070                     __size_of_BUTTON_Enable 000A  
                              _putUSBUSART 0894                       __CFG_CPUDIV$NOCLKDIV 0000  
                      _USBCtrlTrfRxService 062C                         _USBWakeFromSuspend 0950  
                  _USBStdFeatureReqHandler 000D                         _USBCheckCDCRequest 0D6C  
                      _USBCtrlTrfTxService 0EA4                 __size_of_SYS_InterruptHigh 0007  
                                 sprintf@c 00EA                                   sprintf@f 0064  
                      ?_USBWakeFromSuspend 0070                            ___lwmod@divisor 0060  
                    ??_USBCtrlTrfInHandler 0074                      _USBAlternateInterface 01E8  
                          ___lwmod@counter 007A                        ?_USBCheckCDCRequest 0070  
                      USBEnableEndpoint@ep 0062                            _endpoint_number 01CF  
                     ?_USBCtrlTrfRxService 0070                   ?_USBCtrlEPAllowDataStage 0070  
                     ?_USBCtrlTrfTxService 0070                             ?_process_level 0071  
             _USBStatusStageTimeoutCounter 01C9                       ??_USBWakeFromSuspend 006B  
               USBTransferOnePacket@handle 0078                       __end_of_CDCTxService 057E  
                     ??_USBCheckCDCRequest 0071                                 _USB_CD_Ptr 030E  
