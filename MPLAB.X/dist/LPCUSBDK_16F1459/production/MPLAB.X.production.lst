

Microchip Technology PIC PRO Macro Assembler V1.20 build 52243 
                                                                                               Tue Feb 09 09:00:02 2016

Microchip Technology Omniscient Code Generator (PRO mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	swtext1,local,class=CONST,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext2,local,class=CONST,delta=2
    27                           	psect	text22,local,class=CODE,merge=1,delta=2
    28                           	psect	swtext3,local,class=CONST,delta=2
    29                           	psect	swtext4,local,class=CONST,delta=2
    30                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x20,48,_BDT
    43                           	dabs	1,0x58,8,_CtrlTrfData
    44                           	dabs	1,0x50,8,_SetupPkt
    45                           	dabs	1,0xA0,64,_cdc_data_tx
    46                           	dabs	1,0x120,64,_cdc_data_rx
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010E                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011D                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  018E                     	;# 
   107  0191                     	;# 
   108  0191                     	;# 
   109  0192                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0197                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0391                     	;# 
   141  0392                     	;# 
   142  0393                     	;# 
   143  0394                     	;# 
   144  0395                     	;# 
   145  0396                     	;# 
   146  039A                     	;# 
   147  039B                     	;# 
   148  0611                     	;# 
   149  0612                     	;# 
   150  0613                     	;# 
   151  0613                     	;# 
   152  0614                     	;# 
   153  0615                     	;# 
   154  0616                     	;# 
   155  0616                     	;# 
   156  0691                     	;# 
   157  0692                     	;# 
   158  0693                     	;# 
   159  0694                     	;# 
   160  0695                     	;# 
   161  0E8E                     	;# 
   162  0E8F                     	;# 
   163  0E90                     	;# 
   164  0E91                     	;# 
   165  0E92                     	;# 
   166  0E93                     	;# 
   167  0E94                     	;# 
   168  0E94                     	;# 
   169  0E95                     	;# 
   170  0E96                     	;# 
   171  0E97                     	;# 
   172  0E98                     	;# 
   173  0E99                     	;# 
   174  0E9A                     	;# 
   175  0E9B                     	;# 
   176  0E9C                     	;# 
   177  0E9D                     	;# 
   178  0E9E                     	;# 
   179  0E9F                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE9                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011D                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  018E                     	;# 
   250  0191                     	;# 
   251  0191                     	;# 
   252  0192                     	;# 
   253  0193                     	;# 
   254  0193                     	;# 
   255  0194                     	;# 
   256  0195                     	;# 
   257  0196                     	;# 
   258  0197                     	;# 
   259  0199                     	;# 
   260  019A                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019D                     	;# 
   264  019E                     	;# 
   265  019F                     	;# 
   266  020C                     	;# 
   267  020D                     	;# 
   268  0211                     	;# 
   269  0211                     	;# 
   270  0212                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0216                     	;# 
   280  0216                     	;# 
   281  0217                     	;# 
   282  0217                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  0394                     	;# 
   287  0395                     	;# 
   288  0396                     	;# 
   289  039A                     	;# 
   290  039B                     	;# 
   291  0611                     	;# 
   292  0612                     	;# 
   293  0613                     	;# 
   294  0613                     	;# 
   295  0614                     	;# 
   296  0615                     	;# 
   297  0616                     	;# 
   298  0616                     	;# 
   299  0691                     	;# 
   300  0692                     	;# 
   301  0693                     	;# 
   302  0694                     	;# 
   303  0695                     	;# 
   304  0E8E                     	;# 
   305  0E8F                     	;# 
   306  0E90                     	;# 
   307  0E91                     	;# 
   308  0E92                     	;# 
   309  0E93                     	;# 
   310  0E94                     	;# 
   311  0E94                     	;# 
   312  0E95                     	;# 
   313  0E96                     	;# 
   314  0E97                     	;# 
   315  0E98                     	;# 
   316  0E99                     	;# 
   317  0E9A                     	;# 
   318  0E9B                     	;# 
   319  0E9C                     	;# 
   320  0E9D                     	;# 
   321  0E9E                     	;# 
   322  0E9F                     	;# 
   323  0FE4                     	;# 
   324  0FE5                     	;# 
   325  0FE6                     	;# 
   326  0FE7                     	;# 
   327  0FE8                     	;# 
   328  0FE9                     	;# 
   329  0FEA                     	;# 
   330  0FEB                     	;# 
   331  0FED                     	;# 
   332  0FEE                     	;# 
   333  0FEF                     	;# 
   334  0000                     	;# 
   335  0001                     	;# 
   336  0002                     	;# 
   337  0003                     	;# 
   338  0004                     	;# 
   339  0005                     	;# 
   340  0006                     	;# 
   341  0007                     	;# 
   342  0008                     	;# 
   343  0009                     	;# 
   344  000A                     	;# 
   345  000B                     	;# 
   346  000C                     	;# 
   347  000D                     	;# 
   348  000E                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  0111                     	;# 
   381  0112                     	;# 
   382  0113                     	;# 
   383  0114                     	;# 
   384  0115                     	;# 
   385  0116                     	;# 
   386  0117                     	;# 
   387  0118                     	;# 
   388  0119                     	;# 
   389  011D                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  018E                     	;# 
   393  0191                     	;# 
   394  0191                     	;# 
   395  0192                     	;# 
   396  0193                     	;# 
   397  0193                     	;# 
   398  0194                     	;# 
   399  0195                     	;# 
   400  0196                     	;# 
   401  0197                     	;# 
   402  0199                     	;# 
   403  019A                     	;# 
   404  019B                     	;# 
   405  019C                     	;# 
   406  019D                     	;# 
   407  019E                     	;# 
   408  019F                     	;# 
   409  020C                     	;# 
   410  020D                     	;# 
   411  0211                     	;# 
   412  0211                     	;# 
   413  0212                     	;# 
   414  0212                     	;# 
   415  0213                     	;# 
   416  0213                     	;# 
   417  0214                     	;# 
   418  0214                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  0394                     	;# 
   430  0395                     	;# 
   431  0396                     	;# 
   432  039A                     	;# 
   433  039B                     	;# 
   434  0611                     	;# 
   435  0612                     	;# 
   436  0613                     	;# 
   437  0613                     	;# 
   438  0614                     	;# 
   439  0615                     	;# 
   440  0616                     	;# 
   441  0616                     	;# 
   442  0691                     	;# 
   443  0692                     	;# 
   444  0693                     	;# 
   445  0694                     	;# 
   446  0695                     	;# 
   447  0E8E                     	;# 
   448  0E8F                     	;# 
   449  0E90                     	;# 
   450  0E91                     	;# 
   451  0E92                     	;# 
   452  0E93                     	;# 
   453  0E94                     	;# 
   454  0E94                     	;# 
   455  0E95                     	;# 
   456  0E96                     	;# 
   457  0E97                     	;# 
   458  0E98                     	;# 
   459  0E99                     	;# 
   460  0E9A                     	;# 
   461  0E9B                     	;# 
   462  0E9C                     	;# 
   463  0E9D                     	;# 
   464  0E9E                     	;# 
   465  0E9F                     	;# 
   466  0FE4                     	;# 
   467  0FE5                     	;# 
   468  0FE6                     	;# 
   469  0FE7                     	;# 
   470  0FE8                     	;# 
   471  0FE9                     	;# 
   472  0FEA                     	;# 
   473  0FEB                     	;# 
   474  0FED                     	;# 
   475  0FEE                     	;# 
   476  0FEF                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0008                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  000E                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  0111                     	;# 
   524  0112                     	;# 
   525  0113                     	;# 
   526  0114                     	;# 
   527  0115                     	;# 
   528  0116                     	;# 
   529  0117                     	;# 
   530  0118                     	;# 
   531  0119                     	;# 
   532  011D                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  018E                     	;# 
   536  0191                     	;# 
   537  0191                     	;# 
   538  0192                     	;# 
   539  0193                     	;# 
   540  0193                     	;# 
   541  0194                     	;# 
   542  0195                     	;# 
   543  0196                     	;# 
   544  0197                     	;# 
   545  0199                     	;# 
   546  019A                     	;# 
   547  019B                     	;# 
   548  019C                     	;# 
   549  019D                     	;# 
   550  019E                     	;# 
   551  019F                     	;# 
   552  020C                     	;# 
   553  020D                     	;# 
   554  0211                     	;# 
   555  0211                     	;# 
   556  0212                     	;# 
   557  0212                     	;# 
   558  0213                     	;# 
   559  0213                     	;# 
   560  0214                     	;# 
   561  0214                     	;# 
   562  0215                     	;# 
   563  0215                     	;# 
   564  0215                     	;# 
   565  0216                     	;# 
   566  0216                     	;# 
   567  0217                     	;# 
   568  0217                     	;# 
   569  0391                     	;# 
   570  0392                     	;# 
   571  0393                     	;# 
   572  0394                     	;# 
   573  0395                     	;# 
   574  0396                     	;# 
   575  039A                     	;# 
   576  039B                     	;# 
   577  0611                     	;# 
   578  0612                     	;# 
   579  0613                     	;# 
   580  0613                     	;# 
   581  0614                     	;# 
   582  0615                     	;# 
   583  0616                     	;# 
   584  0616                     	;# 
   585  0691                     	;# 
   586  0692                     	;# 
   587  0693                     	;# 
   588  0694                     	;# 
   589  0695                     	;# 
   590  0E8E                     	;# 
   591  0E8F                     	;# 
   592  0E90                     	;# 
   593  0E91                     	;# 
   594  0E92                     	;# 
   595  0E93                     	;# 
   596  0E94                     	;# 
   597  0E94                     	;# 
   598  0E95                     	;# 
   599  0E96                     	;# 
   600  0E97                     	;# 
   601  0E98                     	;# 
   602  0E99                     	;# 
   603  0E9A                     	;# 
   604  0E9B                     	;# 
   605  0E9C                     	;# 
   606  0E9D                     	;# 
   607  0E9E                     	;# 
   608  0E9F                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0011                     	;# 
   636  0012                     	;# 
   637  0015                     	;# 
   638  0016                     	;# 
   639  0016                     	;# 
   640  0017                     	;# 
   641  0018                     	;# 
   642  0019                     	;# 
   643  001A                     	;# 
   644  001B                     	;# 
   645  001C                     	;# 
   646  008C                     	;# 
   647  008D                     	;# 
   648  008E                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0097                     	;# 
   654  0098                     	;# 
   655  0099                     	;# 
   656  009A                     	;# 
   657  009B                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  009F                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  0111                     	;# 
   667  0112                     	;# 
   668  0113                     	;# 
   669  0114                     	;# 
   670  0115                     	;# 
   671  0116                     	;# 
   672  0117                     	;# 
   673  0118                     	;# 
   674  0119                     	;# 
   675  011D                     	;# 
   676  018C                     	;# 
   677  018D                     	;# 
   678  018E                     	;# 
   679  0191                     	;# 
   680  0191                     	;# 
   681  0192                     	;# 
   682  0193                     	;# 
   683  0193                     	;# 
   684  0194                     	;# 
   685  0195                     	;# 
   686  0196                     	;# 
   687  0197                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019C                     	;# 
   692  019D                     	;# 
   693  019E                     	;# 
   694  019F                     	;# 
   695  020C                     	;# 
   696  020D                     	;# 
   697  0211                     	;# 
   698  0211                     	;# 
   699  0212                     	;# 
   700  0212                     	;# 
   701  0213                     	;# 
   702  0213                     	;# 
   703  0214                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0391                     	;# 
   713  0392                     	;# 
   714  0393                     	;# 
   715  0394                     	;# 
   716  0395                     	;# 
   717  0396                     	;# 
   718  039A                     	;# 
   719  039B                     	;# 
   720  0611                     	;# 
   721  0612                     	;# 
   722  0613                     	;# 
   723  0613                     	;# 
   724  0614                     	;# 
   725  0615                     	;# 
   726  0616                     	;# 
   727  0616                     	;# 
   728  0691                     	;# 
   729  0692                     	;# 
   730  0693                     	;# 
   731  0694                     	;# 
   732  0695                     	;# 
   733  0E8E                     	;# 
   734  0E8F                     	;# 
   735  0E90                     	;# 
   736  0E91                     	;# 
   737  0E92                     	;# 
   738  0E93                     	;# 
   739  0E94                     	;# 
   740  0E94                     	;# 
   741  0E95                     	;# 
   742  0E96                     	;# 
   743  0E97                     	;# 
   744  0E98                     	;# 
   745  0E99                     	;# 
   746  0E9A                     	;# 
   747  0E9B                     	;# 
   748  0E9C                     	;# 
   749  0E9D                     	;# 
   750  0E9E                     	;# 
   751  0E9F                     	;# 
   752  0FE4                     	;# 
   753  0FE5                     	;# 
   754  0FE6                     	;# 
   755  0FE7                     	;# 
   756  0FE8                     	;# 
   757  0FE9                     	;# 
   758  0FEA                     	;# 
   759  0FEB                     	;# 
   760  0FED                     	;# 
   761  0FEE                     	;# 
   762  0FEF                     	;# 
   763  0000                     	;# 
   764  0001                     	;# 
   765  0002                     	;# 
   766  0003                     	;# 
   767  0004                     	;# 
   768  0005                     	;# 
   769  0006                     	;# 
   770  0007                     	;# 
   771  0008                     	;# 
   772  0009                     	;# 
   773  000A                     	;# 
   774  000B                     	;# 
   775  000C                     	;# 
   776  000D                     	;# 
   777  000E                     	;# 
   778  0011                     	;# 
   779  0012                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  001A                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  008C                     	;# 
   790  008D                     	;# 
   791  008E                     	;# 
   792  0091                     	;# 
   793  0092                     	;# 
   794  0095                     	;# 
   795  0096                     	;# 
   796  0097                     	;# 
   797  0098                     	;# 
   798  0099                     	;# 
   799  009A                     	;# 
   800  009B                     	;# 
   801  009B                     	;# 
   802  009C                     	;# 
   803  009D                     	;# 
   804  009E                     	;# 
   805  009F                     	;# 
   806  010C                     	;# 
   807  010D                     	;# 
   808  010E                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0113                     	;# 
   812  0114                     	;# 
   813  0115                     	;# 
   814  0116                     	;# 
   815  0117                     	;# 
   816  0118                     	;# 
   817  0119                     	;# 
   818  011D                     	;# 
   819  018C                     	;# 
   820  018D                     	;# 
   821  018E                     	;# 
   822  0191                     	;# 
   823  0191                     	;# 
   824  0192                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0194                     	;# 
   828  0195                     	;# 
   829  0196                     	;# 
   830  0197                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019B                     	;# 
   834  019C                     	;# 
   835  019D                     	;# 
   836  019E                     	;# 
   837  019F                     	;# 
   838  020C                     	;# 
   839  020D                     	;# 
   840  0211                     	;# 
   841  0211                     	;# 
   842  0212                     	;# 
   843  0212                     	;# 
   844  0213                     	;# 
   845  0213                     	;# 
   846  0214                     	;# 
   847  0214                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0216                     	;# 
   852  0216                     	;# 
   853  0217                     	;# 
   854  0217                     	;# 
   855  0391                     	;# 
   856  0392                     	;# 
   857  0393                     	;# 
   858  0394                     	;# 
   859  0395                     	;# 
   860  0396                     	;# 
   861  039A                     	;# 
   862  039B                     	;# 
   863  0611                     	;# 
   864  0612                     	;# 
   865  0613                     	;# 
   866  0613                     	;# 
   867  0614                     	;# 
   868  0615                     	;# 
   869  0616                     	;# 
   870  0616                     	;# 
   871  0691                     	;# 
   872  0692                     	;# 
   873  0693                     	;# 
   874  0694                     	;# 
   875  0695                     	;# 
   876  0E8E                     	;# 
   877  0E8F                     	;# 
   878  0E90                     	;# 
   879  0E91                     	;# 
   880  0E92                     	;# 
   881  0E93                     	;# 
   882  0E94                     	;# 
   883  0E94                     	;# 
   884  0E95                     	;# 
   885  0E96                     	;# 
   886  0E97                     	;# 
   887  0E98                     	;# 
   888  0E99                     	;# 
   889  0E9A                     	;# 
   890  0E9B                     	;# 
   891  0E9C                     	;# 
   892  0E9D                     	;# 
   893  0E9E                     	;# 
   894  0E9F                     	;# 
   895  0FE4                     	;# 
   896  0FE5                     	;# 
   897  0FE6                     	;# 
   898  0FE7                     	;# 
   899  0FE8                     	;# 
   900  0FE9                     	;# 
   901  0FEA                     	;# 
   902  0FEB                     	;# 
   903  0FED                     	;# 
   904  0FEE                     	;# 
   905  0FEF                     	;# 
   906  0000                     	;# 
   907  0001                     	;# 
   908  0002                     	;# 
   909  0003                     	;# 
   910  0004                     	;# 
   911  0005                     	;# 
   912  0006                     	;# 
   913  0007                     	;# 
   914  0008                     	;# 
   915  0009                     	;# 
   916  000A                     	;# 
   917  000B                     	;# 
   918  000C                     	;# 
   919  000D                     	;# 
   920  000E                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0016                     	;# 
   926  0017                     	;# 
   927  0018                     	;# 
   928  0019                     	;# 
   929  001A                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  008C                     	;# 
   933  008D                     	;# 
   934  008E                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0095                     	;# 
   938  0096                     	;# 
   939  0097                     	;# 
   940  0098                     	;# 
   941  0099                     	;# 
   942  009A                     	;# 
   943  009B                     	;# 
   944  009B                     	;# 
   945  009C                     	;# 
   946  009D                     	;# 
   947  009E                     	;# 
   948  009F                     	;# 
   949  010C                     	;# 
   950  010D                     	;# 
   951  010E                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011D                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  018E                     	;# 
   965  0191                     	;# 
   966  0191                     	;# 
   967  0192                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0197                     	;# 
   974  0199                     	;# 
   975  019A                     	;# 
   976  019B                     	;# 
   977  019C                     	;# 
   978  019D                     	;# 
   979  019E                     	;# 
   980  019F                     	;# 
   981  020C                     	;# 
   982  020D                     	;# 
   983  0211                     	;# 
   984  0211                     	;# 
   985  0212                     	;# 
   986  0212                     	;# 
   987  0213                     	;# 
   988  0213                     	;# 
   989  0214                     	;# 
   990  0214                     	;# 
   991  0215                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0216                     	;# 
   995  0216                     	;# 
   996  0217                     	;# 
   997  0217                     	;# 
   998  0391                     	;# 
   999  0392                     	;# 
  1000  0393                     	;# 
  1001  0394                     	;# 
  1002  0395                     	;# 
  1003  0396                     	;# 
  1004  039A                     	;# 
  1005  039B                     	;# 
  1006  0611                     	;# 
  1007  0612                     	;# 
  1008  0613                     	;# 
  1009  0613                     	;# 
  1010  0614                     	;# 
  1011  0615                     	;# 
  1012  0616                     	;# 
  1013  0616                     	;# 
  1014  0691                     	;# 
  1015  0692                     	;# 
  1016  0693                     	;# 
  1017  0694                     	;# 
  1018  0695                     	;# 
  1019  0E8E                     	;# 
  1020  0E8F                     	;# 
  1021  0E90                     	;# 
  1022  0E91                     	;# 
  1023  0E92                     	;# 
  1024  0E93                     	;# 
  1025  0E94                     	;# 
  1026  0E94                     	;# 
  1027  0E95                     	;# 
  1028  0E96                     	;# 
  1029  0E97                     	;# 
  1030  0E98                     	;# 
  1031  0E99                     	;# 
  1032  0E9A                     	;# 
  1033  0E9B                     	;# 
  1034  0E9C                     	;# 
  1035  0E9D                     	;# 
  1036  0E9E                     	;# 
  1037  0E9F                     	;# 
  1038  0FE4                     	;# 
  1039  0FE5                     	;# 
  1040  0FE6                     	;# 
  1041  0FE7                     	;# 
  1042  0FE8                     	;# 
  1043  0FE9                     	;# 
  1044  0FEA                     	;# 
  1045  0FEB                     	;# 
  1046  0FED                     	;# 
  1047  0FEE                     	;# 
  1048  0FEF                     	;# 
  1049  0000                     	;# 
  1050  0001                     	;# 
  1051  0002                     	;# 
  1052  0003                     	;# 
  1053  0004                     	;# 
  1054  0005                     	;# 
  1055  0006                     	;# 
  1056  0007                     	;# 
  1057  0008                     	;# 
  1058  0009                     	;# 
  1059  000A                     	;# 
  1060  000B                     	;# 
  1061  000C                     	;# 
  1062  000D                     	;# 
  1063  000E                     	;# 
  1064  0011                     	;# 
  1065  0012                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  008C                     	;# 
  1076  008D                     	;# 
  1077  008E                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0097                     	;# 
  1083  0098                     	;# 
  1084  0099                     	;# 
  1085  009A                     	;# 
  1086  009B                     	;# 
  1087  009B                     	;# 
  1088  009C                     	;# 
  1089  009D                     	;# 
  1090  009E                     	;# 
  1091  009F                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010E                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011D                     	;# 
  1105  018C                     	;# 
  1106  018D                     	;# 
  1107  018E                     	;# 
  1108  0191                     	;# 
  1109  0191                     	;# 
  1110  0192                     	;# 
  1111  0193                     	;# 
  1112  0193                     	;# 
  1113  0194                     	;# 
  1114  0195                     	;# 
  1115  0196                     	;# 
  1116  0197                     	;# 
  1117  0199                     	;# 
  1118  019A                     	;# 
  1119  019B                     	;# 
  1120  019C                     	;# 
  1121  019D                     	;# 
  1122  019E                     	;# 
  1123  019F                     	;# 
  1124  020C                     	;# 
  1125  020D                     	;# 
  1126  0211                     	;# 
  1127  0211                     	;# 
  1128  0212                     	;# 
  1129  0212                     	;# 
  1130  0213                     	;# 
  1131  0213                     	;# 
  1132  0214                     	;# 
  1133  0214                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0216                     	;# 
  1138  0216                     	;# 
  1139  0217                     	;# 
  1140  0217                     	;# 
  1141  0391                     	;# 
  1142  0392                     	;# 
  1143  0393                     	;# 
  1144  0394                     	;# 
  1145  0395                     	;# 
  1146  0396                     	;# 
  1147  039A                     	;# 
  1148  039B                     	;# 
  1149  0611                     	;# 
  1150  0612                     	;# 
  1151  0613                     	;# 
  1152  0613                     	;# 
  1153  0614                     	;# 
  1154  0615                     	;# 
  1155  0616                     	;# 
  1156  0616                     	;# 
  1157  0691                     	;# 
  1158  0692                     	;# 
  1159  0693                     	;# 
  1160  0694                     	;# 
  1161  0695                     	;# 
  1162  0E8E                     	;# 
  1163  0E8F                     	;# 
  1164  0E90                     	;# 
  1165  0E91                     	;# 
  1166  0E92                     	;# 
  1167  0E93                     	;# 
  1168  0E94                     	;# 
  1169  0E94                     	;# 
  1170  0E95                     	;# 
  1171  0E96                     	;# 
  1172  0E97                     	;# 
  1173  0E98                     	;# 
  1174  0E99                     	;# 
  1175  0E9A                     	;# 
  1176  0E9B                     	;# 
  1177  0E9C                     	;# 
  1178  0E9D                     	;# 
  1179  0E9E                     	;# 
  1180  0E9F                     	;# 
  1181  0FE4                     	;# 
  1182  0FE5                     	;# 
  1183  0FE6                     	;# 
  1184  0FE7                     	;# 
  1185  0FE8                     	;# 
  1186  0FE9                     	;# 
  1187  0FEA                     	;# 
  1188  0FEB                     	;# 
  1189  0FED                     	;# 
  1190  0FEE                     	;# 
  1191  0FEF                     	;# 
  1192  0000                     	;# 
  1193  0001                     	;# 
  1194  0002                     	;# 
  1195  0003                     	;# 
  1196  0004                     	;# 
  1197  0005                     	;# 
  1198  0006                     	;# 
  1199  0007                     	;# 
  1200  0008                     	;# 
  1201  0009                     	;# 
  1202  000A                     	;# 
  1203  000B                     	;# 
  1204  000C                     	;# 
  1205  000D                     	;# 
  1206  000E                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0015                     	;# 
  1210  0016                     	;# 
  1211  0016                     	;# 
  1212  0017                     	;# 
  1213  0018                     	;# 
  1214  0019                     	;# 
  1215  001A                     	;# 
  1216  001B                     	;# 
  1217  001C                     	;# 
  1218  008C                     	;# 
  1219  008D                     	;# 
  1220  008E                     	;# 
  1221  0091                     	;# 
  1222  0092                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0097                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009A                     	;# 
  1229  009B                     	;# 
  1230  009B                     	;# 
  1231  009C                     	;# 
  1232  009D                     	;# 
  1233  009E                     	;# 
  1234  009F                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  010E                     	;# 
  1238  0111                     	;# 
  1239  0112                     	;# 
  1240  0113                     	;# 
  1241  0114                     	;# 
  1242  0115                     	;# 
  1243  0116                     	;# 
  1244  0117                     	;# 
  1245  0118                     	;# 
  1246  0119                     	;# 
  1247  011D                     	;# 
  1248  018C                     	;# 
  1249  018D                     	;# 
  1250  018E                     	;# 
  1251  0191                     	;# 
  1252  0191                     	;# 
  1253  0192                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0194                     	;# 
  1257  0195                     	;# 
  1258  0196                     	;# 
  1259  0197                     	;# 
  1260  0199                     	;# 
  1261  019A                     	;# 
  1262  019B                     	;# 
  1263  019C                     	;# 
  1264  019D                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  020C                     	;# 
  1268  020D                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0214                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0216                     	;# 
  1281  0216                     	;# 
  1282  0217                     	;# 
  1283  0217                     	;# 
  1284  0391                     	;# 
  1285  0392                     	;# 
  1286  0393                     	;# 
  1287  0394                     	;# 
  1288  0395                     	;# 
  1289  0396                     	;# 
  1290  039A                     	;# 
  1291  039B                     	;# 
  1292  0611                     	;# 
  1293  0612                     	;# 
  1294  0613                     	;# 
  1295  0613                     	;# 
  1296  0614                     	;# 
  1297  0615                     	;# 
  1298  0616                     	;# 
  1299  0616                     	;# 
  1300  0691                     	;# 
  1301  0692                     	;# 
  1302  0693                     	;# 
  1303  0694                     	;# 
  1304  0695                     	;# 
  1305  0E8E                     	;# 
  1306  0E8F                     	;# 
  1307  0E90                     	;# 
  1308  0E91                     	;# 
  1309  0E92                     	;# 
  1310  0E93                     	;# 
  1311  0E94                     	;# 
  1312  0E94                     	;# 
  1313  0E95                     	;# 
  1314  0E96                     	;# 
  1315  0E97                     	;# 
  1316  0E98                     	;# 
  1317  0E99                     	;# 
  1318  0E9A                     	;# 
  1319  0E9B                     	;# 
  1320  0E9C                     	;# 
  1321  0E9D                     	;# 
  1322  0E9E                     	;# 
  1323  0E9F                     	;# 
  1324  0FE4                     	;# 
  1325  0FE5                     	;# 
  1326  0FE6                     	;# 
  1327  0FE7                     	;# 
  1328  0FE8                     	;# 
  1329  0FE9                     	;# 
  1330  0FEA                     	;# 
  1331  0FEB                     	;# 
  1332  0FED                     	;# 
  1333  0FEE                     	;# 
  1334  0FEF                     	;# 
  1335  0000                     	;# 
  1336  0001                     	;# 
  1337  0002                     	;# 
  1338  0003                     	;# 
  1339  0004                     	;# 
  1340  0005                     	;# 
  1341  0006                     	;# 
  1342  0007                     	;# 
  1343  0008                     	;# 
  1344  0009                     	;# 
  1345  000A                     	;# 
  1346  000B                     	;# 
  1347  000C                     	;# 
  1348  000D                     	;# 
  1349  000E                     	;# 
  1350  0011                     	;# 
  1351  0012                     	;# 
  1352  0015                     	;# 
  1353  0016                     	;# 
  1354  0016                     	;# 
  1355  0017                     	;# 
  1356  0018                     	;# 
  1357  0019                     	;# 
  1358  001A                     	;# 
  1359  001B                     	;# 
  1360  001C                     	;# 
  1361  008C                     	;# 
  1362  008D                     	;# 
  1363  008E                     	;# 
  1364  0091                     	;# 
  1365  0092                     	;# 
  1366  0095                     	;# 
  1367  0096                     	;# 
  1368  0097                     	;# 
  1369  0098                     	;# 
  1370  0099                     	;# 
  1371  009A                     	;# 
  1372  009B                     	;# 
  1373  009B                     	;# 
  1374  009C                     	;# 
  1375  009D                     	;# 
  1376  009E                     	;# 
  1377  009F                     	;# 
  1378  010C                     	;# 
  1379  010D                     	;# 
  1380  010E                     	;# 
  1381  0111                     	;# 
  1382  0112                     	;# 
  1383  0113                     	;# 
  1384  0114                     	;# 
  1385  0115                     	;# 
  1386  0116                     	;# 
  1387  0117                     	;# 
  1388  0118                     	;# 
  1389  0119                     	;# 
  1390  011D                     	;# 
  1391  018C                     	;# 
  1392  018D                     	;# 
  1393  018E                     	;# 
  1394  0191                     	;# 
  1395  0191                     	;# 
  1396  0192                     	;# 
  1397  0193                     	;# 
  1398  0193                     	;# 
  1399  0194                     	;# 
  1400  0195                     	;# 
  1401  0196                     	;# 
  1402  0197                     	;# 
  1403  0199                     	;# 
  1404  019A                     	;# 
  1405  019B                     	;# 
  1406  019C                     	;# 
  1407  019D                     	;# 
  1408  019E                     	;# 
  1409  019F                     	;# 
  1410  020C                     	;# 
  1411  020D                     	;# 
  1412  0211                     	;# 
  1413  0211                     	;# 
  1414  0212                     	;# 
  1415  0212                     	;# 
  1416  0213                     	;# 
  1417  0213                     	;# 
  1418  0214                     	;# 
  1419  0214                     	;# 
  1420  0215                     	;# 
  1421  0215                     	;# 
  1422  0215                     	;# 
  1423  0216                     	;# 
  1424  0216                     	;# 
  1425  0217                     	;# 
  1426  0217                     	;# 
  1427  0391                     	;# 
  1428  0392                     	;# 
  1429  0393                     	;# 
  1430  0394                     	;# 
  1431  0395                     	;# 
  1432  0396                     	;# 
  1433  039A                     	;# 
  1434  039B                     	;# 
  1435  0611                     	;# 
  1436  0612                     	;# 
  1437  0613                     	;# 
  1438  0613                     	;# 
  1439  0614                     	;# 
  1440  0615                     	;# 
  1441  0616                     	;# 
  1442  0616                     	;# 
  1443  0691                     	;# 
  1444  0692                     	;# 
  1445  0693                     	;# 
  1446  0694                     	;# 
  1447  0695                     	;# 
  1448  0E8E                     	;# 
  1449  0E8F                     	;# 
  1450  0E90                     	;# 
  1451  0E91                     	;# 
  1452  0E92                     	;# 
  1453  0E93                     	;# 
  1454  0E94                     	;# 
  1455  0E94                     	;# 
  1456  0E95                     	;# 
  1457  0E96                     	;# 
  1458  0E97                     	;# 
  1459  0E98                     	;# 
  1460  0E99                     	;# 
  1461  0E9A                     	;# 
  1462  0E9B                     	;# 
  1463  0E9C                     	;# 
  1464  0E9D                     	;# 
  1465  0E9E                     	;# 
  1466  0E9F                     	;# 
  1467  0FE4                     	;# 
  1468  0FE5                     	;# 
  1469  0FE6                     	;# 
  1470  0FE7                     	;# 
  1471  0FE8                     	;# 
  1472  0FE9                     	;# 
  1473  0FEA                     	;# 
  1474  0FEB                     	;# 
  1475  0FED                     	;# 
  1476  0FEE                     	;# 
  1477  0FEF                     	;# 
  1478  0000                     	;# 
  1479  0001                     	;# 
  1480  0002                     	;# 
  1481  0003                     	;# 
  1482  0004                     	;# 
  1483  0005                     	;# 
  1484  0006                     	;# 
  1485  0007                     	;# 
  1486  0008                     	;# 
  1487  0009                     	;# 
  1488  000A                     	;# 
  1489  000B                     	;# 
  1490  000C                     	;# 
  1491  000D                     	;# 
  1492  000E                     	;# 
  1493  0011                     	;# 
  1494  0012                     	;# 
  1495  0015                     	;# 
  1496  0016                     	;# 
  1497  0016                     	;# 
  1498  0017                     	;# 
  1499  0018                     	;# 
  1500  0019                     	;# 
  1501  001A                     	;# 
  1502  001B                     	;# 
  1503  001C                     	;# 
  1504  008C                     	;# 
  1505  008D                     	;# 
  1506  008E                     	;# 
  1507  0091                     	;# 
  1508  0092                     	;# 
  1509  0095                     	;# 
  1510  0096                     	;# 
  1511  0097                     	;# 
  1512  0098                     	;# 
  1513  0099                     	;# 
  1514  009A                     	;# 
  1515  009B                     	;# 
  1516  009B                     	;# 
  1517  009C                     	;# 
  1518  009D                     	;# 
  1519  009E                     	;# 
  1520  009F                     	;# 
  1521  010C                     	;# 
  1522  010D                     	;# 
  1523  010E                     	;# 
  1524  0111                     	;# 
  1525  0112                     	;# 
  1526  0113                     	;# 
  1527  0114                     	;# 
  1528  0115                     	;# 
  1529  0116                     	;# 
  1530  0117                     	;# 
  1531  0118                     	;# 
  1532  0119                     	;# 
  1533  011D                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  018E                     	;# 
  1537  0191                     	;# 
  1538  0191                     	;# 
  1539  0192                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  019A                     	;# 
  1548  019B                     	;# 
  1549  019C                     	;# 
  1550  019D                     	;# 
  1551  019E                     	;# 
  1552  019F                     	;# 
  1553  020C                     	;# 
  1554  020D                     	;# 
  1555  0211                     	;# 
  1556  0211                     	;# 
  1557  0212                     	;# 
  1558  0212                     	;# 
  1559  0213                     	;# 
  1560  0213                     	;# 
  1561  0214                     	;# 
  1562  0214                     	;# 
  1563  0215                     	;# 
  1564  0215                     	;# 
  1565  0215                     	;# 
  1566  0216                     	;# 
  1567  0216                     	;# 
  1568  0217                     	;# 
  1569  0217                     	;# 
  1570  0391                     	;# 
  1571  0392                     	;# 
  1572  0393                     	;# 
  1573  0394                     	;# 
  1574  0395                     	;# 
  1575  0396                     	;# 
  1576  039A                     	;# 
  1577  039B                     	;# 
  1578  0611                     	;# 
  1579  0612                     	;# 
  1580  0613                     	;# 
  1581  0613                     	;# 
  1582  0614                     	;# 
  1583  0615                     	;# 
  1584  0616                     	;# 
  1585  0616                     	;# 
  1586  0691                     	;# 
  1587  0692                     	;# 
  1588  0693                     	;# 
  1589  0694                     	;# 
  1590  0695                     	;# 
  1591  0E8E                     	;# 
  1592  0E8F                     	;# 
  1593  0E90                     	;# 
  1594  0E91                     	;# 
  1595  0E92                     	;# 
  1596  0E93                     	;# 
  1597  0E94                     	;# 
  1598  0E94                     	;# 
  1599  0E95                     	;# 
  1600  0E96                     	;# 
  1601  0E97                     	;# 
  1602  0E98                     	;# 
  1603  0E99                     	;# 
  1604  0E9A                     	;# 
  1605  0E9B                     	;# 
  1606  0E9C                     	;# 
  1607  0E9D                     	;# 
  1608  0E9E                     	;# 
  1609  0E9F                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621                           
  1622                           	psect	idataBANK3
  1623  0C12                     __pidataBANK3:	
  1624                           
  1625                           ;initializer for _buttonMessage
  1626  0C12  3442               	retlw	66
  1627  0C13  3475               	retlw	117
  1628  0C14  3474               	retlw	116
  1629  0C15  3474               	retlw	116
  1630  0C16  346F               	retlw	111
  1631  0C17  346E               	retlw	110
  1632  0C18  3420               	retlw	32
  1633  0C19  3470               	retlw	112
  1634  0C1A  3472               	retlw	114
  1635  0C1B  3465               	retlw	101
  1636  0C1C  3473               	retlw	115
  1637  0C1D  3473               	retlw	115
  1638  0C1E  3465               	retlw	101
  1639  0C1F  3464               	retlw	100
  1640  0C20  342E               	retlw	46
  1641  0C21  340D               	retlw	13
  1642  0C22  340A               	retlw	10
  1643  0C23  3400               	retlw	0
  1644                           
  1645                           	psect	strings
  1646  0900                     __pstrings:	
  1647  0900                     __stringtab:	
  1648  0900  3400               	retlw	0
  1649  0901                     __end_of__stringtab:	
  1650  0901                     _USB_SD_Ptr:	
  1651  0901  34C2               	retlw	(_sd000| (0+32768))& (0+255)
  1652  0902  3448               	retlw	(_sd001| (0+32768))& (0+255)
  1653  0903  347C               	retlw	(_sd002| (0+32768))& (0+255)
  1654  0904                     __end_of_USB_SD_Ptr:	
  1655  0904                     _USB_CD_Ptr:	
  1656  0904  3405               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1657  0905                     __end_of_USB_CD_Ptr:	
  1658  0905                     _configDescriptor1:	
  1659  0905  3409               	retlw	9
  1660  0906  3402               	retlw	2
  1661  0907  3443               	retlw	67
  1662  0908  3400               	retlw	0
  1663  0909  3402               	retlw	2
  1664  090A  3401               	retlw	1
  1665  090B  3400               	retlw	0
  1666  090C  34C0               	retlw	192
  1667  090D  3432               	retlw	50
  1668  090E  3409               	retlw	9
  1669  090F  3404               	retlw	4
  1670  0910  3400               	retlw	0
  1671  0911  3400               	retlw	0
  1672  0912  3401               	retlw	1
  1673  0913  3402               	retlw	2
  1674  0914  3402               	retlw	2
  1675  0915  3401               	retlw	1
  1676  0916  3400               	retlw	0
  1677  0917  3405               	retlw	5
  1678  0918  3424               	retlw	36
  1679  0919  3400               	retlw	0
  1680  091A  3410               	retlw	16
  1681  091B  3401               	retlw	1
  1682  091C  3404               	retlw	4
  1683  091D  3424               	retlw	36
  1684  091E  3402               	retlw	2
  1685  091F  3402               	retlw	2
  1686  0920  3405               	retlw	5
  1687  0921  3424               	retlw	36
  1688  0922  3406               	retlw	6
  1689  0923  3400               	retlw	0
  1690  0924  3401               	retlw	1
  1691  0925  3405               	retlw	5
  1692  0926  3424               	retlw	36
  1693  0927  3401               	retlw	1
  1694  0928  3400               	retlw	0
  1695  0929  3401               	retlw	1
  1696  092A  3407               	retlw	7
  1697  092B  3405               	retlw	5
  1698  092C  3481               	retlw	129
  1699  092D  3403               	retlw	3
  1700  092E  3408               	retlw	8
  1701  092F  3400               	retlw	0
  1702  0930  3402               	retlw	2
  1703  0931  3409               	retlw	9
  1704  0932  3404               	retlw	4
  1705  0933  3401               	retlw	1
  1706  0934  3400               	retlw	0
  1707  0935  3402               	retlw	2
  1708  0936  340A               	retlw	10
  1709  0937  3400               	retlw	0
  1710  0938  3400               	retlw	0
  1711  0939  3400               	retlw	0
  1712  093A  3407               	retlw	7
  1713  093B  3405               	retlw	5
  1714  093C  3402               	retlw	2
  1715  093D  3402               	retlw	2
  1716  093E  3440               	retlw	64
  1717  093F  3400               	retlw	0
  1718  0940  3400               	retlw	0
  1719  0941  3407               	retlw	7
  1720  0942  3405               	retlw	5
  1721  0943  3482               	retlw	130
  1722  0944  3402               	retlw	2
  1723  0945  3440               	retlw	64
  1724  0946  3400               	retlw	0
  1725  0947  3400               	retlw	0
  1726  0948                     __end_of_configDescriptor1:	
  1727  0948                     _sd001:	
  1728  0948  3434               	retlw	52
  1729  0949  3403               	retlw	3
  1730  094A  344D               	retlw	77
  1731  094B  3400               	retlw	0
  1732  094C  3469               	retlw	105
  1733  094D  3400               	retlw	0
  1734  094E  3463               	retlw	99
  1735  094F  3400               	retlw	0
  1736  0950  3472               	retlw	114
  1737  0951  3400               	retlw	0
  1738  0952  346F               	retlw	111
  1739  0953  3400               	retlw	0
  1740  0954  3463               	retlw	99
  1741  0955  3400               	retlw	0
  1742  0956  3468               	retlw	104
  1743  0957  3400               	retlw	0
  1744  0958  3469               	retlw	105
  1745  0959  3400               	retlw	0
  1746  095A  3470               	retlw	112
  1747  095B  3400               	retlw	0
  1748  095C  3420               	retlw	32
  1749  095D  3400               	retlw	0
  1750  095E  3454               	retlw	84
  1751  095F  3400               	retlw	0
  1752  0960  3465               	retlw	101
  1753  0961  3400               	retlw	0
  1754  0962  3463               	retlw	99
  1755  0963  3400               	retlw	0
  1756  0964  3468               	retlw	104
  1757  0965  3400               	retlw	0
  1758  0966  346E               	retlw	110
  1759  0967  3400               	retlw	0
  1760  0968  346F               	retlw	111
  1761  0969  3400               	retlw	0
  1762  096A  346C               	retlw	108
  1763  096B  3400               	retlw	0
  1764  096C  346F               	retlw	111
  1765  096D  3400               	retlw	0
  1766  096E  3467               	retlw	103
  1767  096F  3400               	retlw	0
  1768  0970  3479               	retlw	121
  1769  0971  3400               	retlw	0
  1770  0972  3420               	retlw	32
  1771  0973  3400               	retlw	0
  1772  0974  3449               	retlw	73
  1773  0975  3400               	retlw	0
  1774  0976  346E               	retlw	110
  1775  0977  3400               	retlw	0
  1776  0978  3463               	retlw	99
  1777  0979  3400               	retlw	0
  1778  097A  342E               	retlw	46
  1779  097B  3400               	retlw	0
  1780  097C                     __end_of_sd001:	
  1781  097C                     _sd002:	
  1782  097C  3434               	retlw	52
  1783  097D  3403               	retlw	3
  1784  097E  3443               	retlw	67
  1785  097F  3400               	retlw	0
  1786  0980  3444               	retlw	68
  1787  0981  3400               	retlw	0
  1788  0982  3443               	retlw	67
  1789  0983  3400               	retlw	0
  1790  0984  3420               	retlw	32
  1791  0985  3400               	retlw	0
  1792  0986  3452               	retlw	82
  1793  0987  3400               	retlw	0
  1794  0988  3453               	retlw	83
  1795  0989  3400               	retlw	0
  1796  098A  342D               	retlw	45
  1797  098B  3400               	retlw	0
  1798  098C  3432               	retlw	50
  1799  098D  3400               	retlw	0
  1800  098E  3433               	retlw	51
  1801  098F  3400               	retlw	0
  1802  0990  3432               	retlw	50
  1803  0991  3400               	retlw	0
  1804  0992  3420               	retlw	32
  1805  0993  3400               	retlw	0
  1806  0994  3445               	retlw	69
  1807  0995  3400               	retlw	0
  1808  0996  346D               	retlw	109
  1809  0997  3400               	retlw	0
  1810  0998  3475               	retlw	117
  1811  0999  3400               	retlw	0
  1812  099A  346C               	retlw	108
  1813  099B  3400               	retlw	0
  1814  099C  3461               	retlw	97
  1815  099D  3400               	retlw	0
  1816  099E  3474               	retlw	116
  1817  099F  3400               	retlw	0
  1818  09A0  3469               	retlw	105
  1819  09A1  3400               	retlw	0
  1820  09A2  346F               	retlw	111
  1821  09A3  3400               	retlw	0
  1822  09A4  346E               	retlw	110
  1823  09A5  3400               	retlw	0
  1824  09A6  3420               	retlw	32
  1825  09A7  3400               	retlw	0
  1826  09A8  3444               	retlw	68
  1827  09A9  3400               	retlw	0
  1828  09AA  3465               	retlw	101
  1829  09AB  3400               	retlw	0
  1830  09AC  346D               	retlw	109
  1831  09AD  3400               	retlw	0
  1832  09AE  346F               	retlw	111
  1833  09AF  3400               	retlw	0
  1834  09B0                     __end_of_sd002:	
  1835  09B0                     _device_dsc:	
  1836  09B0  3412               	retlw	18
  1837  09B1  3401               	retlw	1
  1838  09B2  3400               	retlw	0
  1839  09B3  3402               	retlw	2
  1840  09B4  3402               	retlw	2
  1841  09B5  3400               	retlw	0
  1842  09B6  3400               	retlw	0
  1843  09B7  3408               	retlw	8
  1844  09B8  34D8               	retlw	216
  1845  09B9  3404               	retlw	4
  1846  09BA  340A               	retlw	10
  1847  09BB  3400               	retlw	0
  1848  09BC  3400               	retlw	0
  1849  09BD  3401               	retlw	1
  1850  09BE  3401               	retlw	1
  1851  09BF  3402               	retlw	2
  1852  09C0  3400               	retlw	0
  1853  09C1  3401               	retlw	1
  1854  09C2                     __end_of_device_dsc:	
  1855  09C2                     _sd000:	
  1856  09C2  3404               	retlw	4
  1857  09C3  3403               	retlw	3
  1858  09C4  3409               	retlw	9
  1859  09C5  3404               	retlw	4
  1860  09C6                     __end_of_sd000:	
  1861  000B                     _INTCONbits	set	11
  1862  0012                     _PIR2bits	set	18
  1863  000C                     _PORTAbits	set	12
  1864  0015                     _TMR0	set	21
  1865  009D                     _ADCON0bits	set	157
  1866  009E                     _ADCON1bits	set	158
  1867  009F                     _ADCON2bits	set	159
  1868  009C                     _ADRESH	set	156
  1869  0095                     _OPTION_REGbits	set	149
  1870  0099                     _OSCCON	set	153
  1871  0091                     _PIE1bits	set	145
  1872  0092                     _PIE2bits	set	146
  1873  008C                     _TRISAbits	set	140
  1874  008E                     _TRISCbits	set	142
  1875  010E                     _LATCbits	set	270
  1876  018C                     _ANSELA	set	396
  1877  018C                     _ANSELAbits	set	396
  1878  018E                     _ANSELCbits	set	398
  1879  039B                     _ACTCON	set	923
  1880  0E96                     _UADDR	set	3734
  1881  0E91                     _UCFG	set	3729
  1882  0E8E                     _UCON	set	3726
  1883  0E8E                     _UCONbits	set	3726
  1884  0E97                     _UEIE	set	3735
  1885  0E93                     _UEIR	set	3731
  1886  0E98                     _UEP0bits	set	3736
  1887  0E92                     _UIE	set	3730
  1888  0E92                     _UIEbits	set	3730
  1889  0E90                     _UIR	set	3728
  1890  0E90                     _UIRbits	set	3728
  1891  0E8F                     _USTAT	set	3727
  1892  0E98                     _UEP0	set	3736
  1893  0E99                     _UEP1	set	3737
  1894                           
  1895                           ; #config settings
  1896  0000                     
  1897                           	psect	cinit
  1898  0008                     start_initialization:	
  1899  0008                     __initialization:	
  1900                           
  1901                           ; Clear objects allocated to BANK0
  1902  0008  01EE               	clrf	__pbssBANK0& (0+127)
  1903  0009  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1904                           
  1905                           ; Clear objects allocated to BANK1
  1906  000A  30E0               	movlw	low __pbssBANK1
  1907  000B  0084               	movwf	4
  1908  000C  3000               	movlw	high __pbssBANK1
  1909  000D  0085               	movwf	5
  1910  000E  3010               	movlw	16
  1911  000F  318C  2424  3180   	fcall	clear_ram0
  1912                           
  1913                           ; Clear objects allocated to BANK2
  1914  0012  3060               	movlw	low __pbssBANK2
  1915  0013  0084               	movwf	4
  1916  0014  3001               	movlw	high __pbssBANK2
  1917  0015  0085               	movwf	5
  1918  0016  3010               	movlw	16
  1919  0017  318C  2424  3180   	fcall	clear_ram0
  1920                           
  1921                           ; Clear objects allocated to BANK3
  1922  001A  30A0               	movlw	low __pbssBANK3
  1923  001B  0084               	movwf	4
  1924  001C  3001               	movlw	high __pbssBANK3
  1925  001D  0085               	movwf	5
  1926  001E  302F               	movlw	47
  1927  001F  318C  2424  3180   	fcall	clear_ram0
  1928                           
  1929                           ; Clear objects allocated to BANK4
  1930  0022  3020               	movlw	low __pbssBANK4
  1931  0023  0084               	movwf	4
  1932  0024  3002               	movlw	high __pbssBANK4
  1933  0025  0085               	movwf	5
  1934  0026  3040               	movlw	64
  1935  0027  318C  2424  3180   	fcall	clear_ram0
  1936                           
  1937                           ; Clear objects allocated to BANK5
  1938  002A  30A0               	movlw	low __pbssBANK5
  1939  002B  0084               	movwf	4
  1940  002C  3002               	movlw	high __pbssBANK5
  1941  002D  0085               	movwf	5
  1942  002E  3040               	movlw	64
  1943  002F  318C  2424  3180   	fcall	clear_ram0
  1944                           
  1945                           ; Clear objects allocated to BANK6
  1946  0032  3020               	movlw	low __pbssBANK6
  1947  0033  0084               	movwf	4
  1948  0034  3003               	movlw	high __pbssBANK6
  1949  0035  0085               	movwf	5
  1950  0036  3040               	movlw	64
  1951  0037  318C  2424  3180   	fcall	clear_ram0
  1952                           
  1953                           ; Initialize objects allocated to BANK3
  1954  003A  3012               	movlw	low __pidataBANK3
  1955  003B  0084               	movwf	4
  1956  003C  308C               	movlw	(high __pidataBANK3)| (0+128)
  1957  003D  0085               	movwf	5
  1958  003E  30CF               	movlw	low __pdataBANK3
  1959  003F  0086               	movwf	6
  1960  0040  3001               	movlw	high __pdataBANK3
  1961  0041  0087               	movwf	7
  1962  0042  3012               	movlw	18
  1963  0043  318C  242A  3180   	fcall	init_ram
  1964  0046                     end_of_initialization:	
  1965                           ;End of C runtime variable initialization code
  1966                           
  1967  0046                     __end_of__initialization:	
  1968  0046  0020               	movlb	0
  1969  0047  2848               	ljmp	_main	;jump to C main() function
  1970  0048                     __pmaintext:	
  1971 ;;
  1972 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1973 ;;
  1974 ;; *************** function _main *****************
  1975 ;; Defined at:
  1976 ;;		line 52 in file "../src/main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;		None               void
  1983 ;; Registers used:
  1984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 17F/0
  1987 ;;		On exit  : 1C/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels required when called:   11
  1996 ;; This function calls:
  1997 ;;		_APP_DeviceCDCBasicDemoTasks
  1998 ;;		_SYSTEM_Initialize
  1999 ;;		_USBDeviceInit
  2000 ;;		_USBDeviceTasks
  2001 ;; This function is called by:
  2002 ;;		Startup code after reset
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _main
  2008  0048                     _main:	
  2009                           
  2010                           ;main.c: 53: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _main: [allreg]
  2014  0048  3000               	movlw	0
  2015  0049  22A5  3180         	fcall	_SYSTEM_Initialize
  2016                           
  2017                           ;main.c: 55: USBDeviceInit();
  2018  004B  22BC  3180         	fcall	_USBDeviceInit
  2019  004D                     l4460:	
  2020                           
  2021                           ;main.c: 59: {
  2022                           ;main.c: 60: ;
  2023                           ;main.c: 75: USBDeviceTasks();
  2024  004D  2335  3180         	fcall	_USBDeviceTasks
  2025                           
  2026                           ;main.c: 82: if( USBDeviceState < CONFIGURED_STATE )
  2027  004F  3020               	movlw	32
  2028  0050  0021               	movlb	1	; select bank1
  2029  0051  0265               	subwf	_USBDeviceState^(0+128),w
  2030  0052  1C03               	btfss	3,0
  2031  0053  284D               	goto	l4460
  2032                           
  2033                           ;main.c: 86: }
  2034                           ;main.c: 92: if( UCONbits.SUSPND== 1 )
  2035  0054  003D               	movlb	29	; select bank29
  2036  0055  188E               	btfsc	14,1	;volatile
  2037  0056  284D               	goto	l4460
  2038                           
  2039                           ;main.c: 96: }
  2040                           ;main.c: 99: APP_DeviceCDCBasicDemoTasks();
  2041  0057  205A  3180         	fcall	_APP_DeviceCDCBasicDemoTasks
  2042  0059  284D               	goto	l4460
  2043  005A                     __end_of_main:	
  2044  005A                     __ptext34:	
  2045 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  2046 ;; Defined at:
  2047 ;;		line 88 in file "../src/app_device_cdc_basic.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  i               1    3[BANK0 ] unsigned char 
  2052 ;;  numBytesRead    1    2[BANK0 ] unsigned char 
  2053 ;;  velocity        1    1[BANK0 ] unsigned char 
  2054 ;;  scan_pitch      1    0[BANK0 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;		None               void
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 1F/1D
  2061 ;;		On exit  : 1C/0
  2062 ;;		Unchanged: FFFE0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2067 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2068 ;;Total ram usage:        4 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    4
  2071 ;; This function calls:
  2072 ;;		_scan_task
  2073 ;;		_BUTTON_IsPressed
  2074 ;;		_putrsUSBUSART
  2075 ;;		_getsUSBUSART
  2076 ;;		_putUSBUSART
  2077 ;;		_CDCTxService
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _APP_DeviceCDCBasicDemoTasks
  2085  005A                     _APP_DeviceCDCBasicDemoTasks:	
  2086                           
  2087                           ;app_device_cdc_basic.c: 90: {
  2088                           ;app_device_cdc_basic.c: 91: uint8_t scan_pitch = 0x3C, velocity = 0;
  2089                           
  2090                           ;incstack = 0
  2091                           ; Regs used in _APP_DeviceCDCBasicDemoTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2092  005A  303C               	movlw	60
  2093  005B  0020               	movlb	0	; select bank0
  2094  005C  00E0               	movwf	APP_DeviceCDCBasicDemoTasks@scan_pitch
  2095  005D  3061               	movlw	APP_DeviceCDCBasicDemoTasks@velocity& (0+255)
  2096  005E  01E1               	clrf	APP_DeviceCDCBasicDemoTasks@velocity
  2097                           
  2098                           ;app_device_cdc_basic.c: 92: if (scan_task(&scan_pitch, &velocity)) {
  2099  005F  00F5               	movwf	?_scan_task
  2100  0060  3060               	movlw	APP_DeviceCDCBasicDemoTasks@scan_pitch& (0+255)
  2101  0061  20C6  3180         	fcall	_scan_task
  2102  0063  3A00               	xorlw	0
  2103  0064  1903               	skipnz
  2104  0065  286E               	goto	l4274
  2105                           
  2106                           ;app_device_cdc_basic.c: 93: midiData.IDX = scan_pitch;
  2107  0066  0020               	movlb	0	; select bank0
  2108  0067  0860               	movf	APP_DeviceCDCBasicDemoTasks@scan_pitch,w
  2109  0068  0023               	movlb	3	; select bank3
  2110  0069  00AF               	movwf	_midiData^(0+384)
  2111                           
  2112                           ;app_device_cdc_basic.c: 94: midiData.ADC = velocity;
  2113  006A  0020               	movlb	0	; select bank0
  2114  006B  0861               	movf	APP_DeviceCDCBasicDemoTasks@velocity,w
  2115  006C  0023               	movlb	3	; select bank3
  2116  006D  00B0               	movwf	(_midiData^(0+384)+1)
  2117  006E                     l4274:	
  2118                           
  2119                           ;app_device_cdc_basic.c: 96: }
  2120                           ;app_device_cdc_basic.c: 98: }
  2121                           ;app_device_cdc_basic.c: 107: if(BUTTON_IsPressed(BUTTON_S1) == 1)
  2122  006E  3001               	movlw	1
  2123  006F  2220  3180         	fcall	_BUTTON_IsPressed
  2124  0071  3A01               	xorlw	1
  2125  0072  1D03               	skipz
  2126  0073  2883               	goto	l4284
  2127                           
  2128                           ;app_device_cdc_basic.c: 108: {
  2129                           ;app_device_cdc_basic.c: 112: if(buttonPressed == 0)
  2130  0074  0022               	movlb	2	; select bank2
  2131  0075  08E8               	movf	_buttonPressed^(0+256),f
  2132  0076  1D03               	skipz
  2133  0077  2885               	goto	l4286
  2134                           
  2135                           ;app_device_cdc_basic.c: 113: {
  2136                           ;app_device_cdc_basic.c: 116: if((cdc_trf_state == 0) == 1)
  2137  0078  0021               	movlb	1	; select bank1
  2138  0079  08E7               	movf	_cdc_trf_state^(0+128),f
  2139  007A  1D03               	skipz
  2140  007B  2885               	goto	l4286
  2141                           
  2142                           ;app_device_cdc_basic.c: 117: {
  2143                           ;app_device_cdc_basic.c: 118: putrsUSBUSART(buttonMessage);
  2144  007C  30CF               	movlw	_buttonMessage& (0+255)
  2145  007D  2231  3180         	fcall	_putrsUSBUSART
  2146                           
  2147                           ;app_device_cdc_basic.c: 119: buttonPressed = 1;
  2148  007F  0022               	movlb	2	; select bank2
  2149  0080  01E8               	clrf	_buttonPressed^(0+256)
  2150  0081  0AE8               	incf	_buttonPressed^(0+256),f
  2151  0082  2885               	goto	l4286
  2152  0083                     l4284:	
  2153                           
  2154                           ;app_device_cdc_basic.c: 123: else
  2155                           ;app_device_cdc_basic.c: 124: {
  2156                           ;app_device_cdc_basic.c: 128: buttonPressed = 0;
  2157  0083  0022               	movlb	2	; select bank2
  2158  0084  01E8               	clrf	_buttonPressed^(0+256)
  2159  0085                     l4286:	
  2160                           
  2161                           ;app_device_cdc_basic.c: 129: }
  2162                           ;app_device_cdc_basic.c: 134: if( (cdc_trf_state == 0) == 1)
  2163  0085  0021               	movlb	1	; select bank1
  2164  0086  08E7               	movf	_cdc_trf_state^(0+128),f
  2165  0087  1D03               	skipz
  2166  0088  28C5               	goto	l4308
  2167                           
  2168                           ;app_device_cdc_basic.c: 135: {
  2169                           ;app_device_cdc_basic.c: 136: uint8_t i;
  2170                           ;app_device_cdc_basic.c: 137: uint8_t numBytesRead;
  2171                           ;app_device_cdc_basic.c: 139: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer)
      +                          );
  2172  0089  3040               	movlw	64
  2173  008A  00F8               	movwf	?_getsUSBUSART
  2174  008B  3020               	movlw	_readBuffer& (0+255)
  2175  008C  2253  3180         	fcall	_getsUSBUSART
  2176  008E  0020               	movlb	0	; select bank0
  2177  008F  00E2               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead
  2178                           
  2179                           ;app_device_cdc_basic.c: 142: for(i=0; i<numBytesRead; i++)
  2180  0090  01E3               	clrf	APP_DeviceCDCBasicDemoTasks@i
  2181  0091  28AB               	goto	l4302
  2182  0092                     l4292:	
  2183                           
  2184                           ;app_device_cdc_basic.c: 150: case 0x0D:
  2185                           ;app_device_cdc_basic.c: 151: writeBuffer[i] = readBuffer[i];
  2186  0092  0863               	movf	APP_DeviceCDCBasicDemoTasks@i,w
  2187  0093  3EA0               	addlw	_writeBuffer& (0+255)
  2188  0094  0086               	movwf	6
  2189  0095  3002               	movlw	2	; select bank5/6
  2190  0096  0087               	movwf	7
  2191  0097  0863               	movf	APP_DeviceCDCBasicDemoTasks@i,w
  2192  0098  3E20               	addlw	_readBuffer& (0+255)
  2193  0099  0084               	movwf	4
  2194  009A  3002               	movlw	2	; select bank4/5
  2195  009B  0085               	movwf	5
  2196  009C  0800               	movf	0,w
  2197  009D  28A9               	goto	L14
  2198  009E                     l4294:	
  2199                           ;app_device_cdc_basic.c: 152: break;
  2200                           
  2201                           
  2202                           ;app_device_cdc_basic.c: 160: writeBuffer[i] = readBuffer[i] + 1;
  2203  009E  0863               	movf	APP_DeviceCDCBasicDemoTasks@i,w
  2204  009F  3EA0               	addlw	_writeBuffer& (0+255)
  2205  00A0  0086               	movwf	6
  2206  00A1  3002               	movlw	2	; select bank5/6
  2207  00A2  0087               	movwf	7
  2208  00A3  0863               	movf	APP_DeviceCDCBasicDemoTasks@i,w
  2209  00A4  3E20               	addlw	_readBuffer& (0+255)
  2210  00A5  0084               	movwf	4
  2211  00A6  3002               	movlw	2	; select bank4/5
  2212  00A7  0085               	movwf	5
  2213  00A8  0A00               	incf	0,w
  2214  00A9                     L14:	
  2215  00A9  0081               	movwf	1
  2216  00AA                     l4300:	
  2217                           ;app_device_cdc_basic.c: 161: break;
  2218                           
  2219  00AA  0AE3               	incf	APP_DeviceCDCBasicDemoTasks@i,f
  2220  00AB                     l4302:	
  2221  00AB  0862               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead,w
  2222  00AC  0263               	subwf	APP_DeviceCDCBasicDemoTasks@i,w
  2223  00AD  1803               	btfsc	3,0
  2224  00AE  28BD               	goto	l4304
  2225  00AF  0863               	movf	APP_DeviceCDCBasicDemoTasks@i,w
  2226  00B0  3E20               	addlw	_readBuffer& (0+255)
  2227  00B1  0086               	movwf	6
  2228  00B2  3002               	movlw	2	; select bank4/5
  2229  00B3  0087               	movwf	7
  2230  00B4  0801               	movf	1,w
  2231                           
  2232                           ; Switch size 1, requested type "speed"
  2233                           ; Number of cases is 2, Range of values is 10 to 13
  2234                           ; switch strategies available:
  2235                           ; Name         Instructions Cycles
  2236                           ; simple_byte            7     4 (average)
  2237                           ; direct_byte           17     9 (fixed)
  2238                           ; jumptable            263     9 (fixed)
  2239                           ;	Chosen strategy is simple_byte
  2240  00B5  3A0A               	xorlw	10	; case 10
  2241  00B6  1903               	skipnz
  2242  00B7  2892               	goto	l4292
  2243  00B8  3A07               	xorlw	7	; case 13
  2244  00B9  1903               	skipnz
  2245  00BA  2892               	goto	l4292
  2246  00BB  289E               	goto	l4294
  2247  00BC  28AA               	goto	l4300
  2248  00BD                     l4304:	
  2249                           
  2250                           ;app_device_cdc_basic.c: 163: }
  2251                           ;app_device_cdc_basic.c: 165: if(numBytesRead > 0)
  2252  00BD  0862               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead,w
  2253  00BE  1903               	btfsc	3,2
  2254  00BF  28C5               	goto	l4308
  2255                           
  2256                           ;app_device_cdc_basic.c: 166: {
  2257                           ;app_device_cdc_basic.c: 170: putUSBUSART(writeBuffer,numBytesRead);
  2258  00C0  0862               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead,w
  2259  00C1  00F0               	movwf	?_putUSBUSART
  2260  00C2  30A0               	movlw	_writeBuffer& (0+255)
  2261  00C3  2291  3180         	fcall	_putUSBUSART
  2262  00C5                     l4308:	
  2263                           
  2264                           ;app_device_cdc_basic.c: 171: }
  2265                           ;app_device_cdc_basic.c: 172: }
  2266                           ;app_device_cdc_basic.c: 174: CDCTxService();
  2267  00C5  2DF3               	ljmp	l4338
  2268  00C6                     __end_of_APP_DeviceCDCBasicDemoTasks:	
  2269  00C6                     __ptext41:	
  2270 ;; *************** function _scan_task *****************
  2271 ;; Defined at:
  2272 ;;		line 125 in file "../src/scan.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  note            1    wreg     PTR unsigned char 
  2275 ;;		 -> APP_DeviceCDCBasicDemoTasks@scan_pitch(1), 
  2276 ;;  velocity        1    5[COMMON] PTR unsigned char 
  2277 ;;		 -> APP_DeviceCDCBasicDemoTasks@velocity(1), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  note            1   10[COMMON] PTR unsigned char 
  2280 ;;		 -> APP_DeviceCDCBasicDemoTasks@scan_pitch(1), 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 1F/0
  2287 ;;		On exit  : 1E/2
  2288 ;;		Unchanged: FFFE0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;Total ram usage:        6 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    3
  2297 ;; This function calls:
  2298 ;;		_scan_init
  2299 ;;		_set_timer
  2300 ;;		_waiting_for_timer
  2301 ;;		_set_clock_and_data
  2302 ;;		_get_data
  2303 ;;		_is_end_of_scan
  2304 ;;		_run_adc
  2305 ;;		_is_adc_ready
  2306 ;;		_get_adc
  2307 ;;		_store_key_level
  2308 ;; This function is called by:
  2309 ;;		_APP_DeviceCDCBasicDemoTasks
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _scan_task
  2315  00C6                     _scan_task:	
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2319                           ;scan_task@note stored from wreg
  2320  00C6  00FA               	movwf	scan_task@note
  2321                           
  2322                           ;scan.c: 126: static uint8_t state = S_INIT;
  2323                           ;scan.c: 128: note_event.pitch = note_event.velocity = 0;
  2324  00C7  0023               	movlb	3	; select bank3
  2325  00C8  01B2               	clrf	(_note_event^(0+384)+1)
  2326  00C9  01B1               	clrf	_note_event^(0+384)
  2327                           
  2328                           ;scan.c: 129: *note = *velocity = 0;
  2329  00CA  0875               	movf	scan_task@velocity,w
  2330  00CB  0086               	movwf	6
  2331  00CC  0187               	clrf	7
  2332  00CD  0181               	clrf	1
  2333  00CE  087A               	movf	scan_task@note,w
  2334  00CF  0086               	movwf	6
  2335  00D0  0181               	clrf	1
  2336                           
  2337                           ;scan.c: 131: if (!is_initialized)
  2338  00D1  08BC               	movf	_is_initialized^(0+384),f
  2339  00D2  1D03               	skipz
  2340  00D3  28D6               	goto	i1L__ptext50
  2341                           
  2342                           ;scan.c: 132: scan_init();
  2343  00D4  2204  3180         	fcall	_scan_init
  2344  00D6                     i1L__ptext50:	
  2345                           ;scan.c: 134: if (waiting_for_timer()) return 0;
  2346                           
  2347                           
  2348                           ;psect for function _waiting_for_timer
  2349  00D6                     i1L_waiting_for_timer:	
  2350  00D6                     i1Ll3430:	
  2351                           
  2352                           ;scan.c: 67: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  2353  00D6  01F0               	clrf	_waiting_for_timer$704
  2354  00D7                     i1Ll3432:	
  2355  00D7  0022               	movlb	2	; select bank2
  2356  00D8  086D               	movf	_wait_timer^(0+256),w
  2357  00D9  1D03               	btfss	3,2
  2358  00DA  28DC               	ljmp	i1Ll3434
  2359  00DB  28E5               	ljmp	i1Ll3438
  2360  00DC                     i1Lu2330:	
  2361  00DC                     i1Ll3434:	
  2362  00DC  3180  190B         	btfsc	11,2	;volatile
  2363  00DE  280C  3180         	ljmp	l3438
  2364  00E0  28E3               	ljmp	i1Ll3436
  2365  00E1                     i1Lu2341:	
  2366  00E1  3180  280C         	ljmp	l3438
  2367  00E3                     i1Lu2340:	
  2368  00E3                     i1Ll3436:	
  2369  00E3  01F0               	clrf	_waiting_for_timer$704
  2370  00E4  0AF0               	incf	_waiting_for_timer$704,f
  2371  00E5                     i1Ll3438:	
  2372  00E5  0870               	movf	_waiting_for_timer$704,w
  2373  00E6  00ED               	movwf	_wait_timer^(0+256)
  2374  00E7                     i1Ll202:	
  2375  00E7  3A00               	xorlw	0
  2376  00E8  1D03               	btfss	3,2
  2377  00E9  3400               	retlw	0
  2378  00EA  29EA               	goto	l2882
  2379  00EB                     l2848:	
  2380  00EB  3000               	movlw	0
  2381                           
  2382                           ;scan.c: 138: set_clock_and_data(0,1);
  2383  00EC  01F0               	clrf	?_set_clock_and_data
  2384  00ED  0AF0               	incf	?_set_clock_and_data,f
  2385  00EE                     i2L__ptext49:	
  2386                           
  2387                           ;psect for function _set_clock_and_data
  2388  00EE                     i2L_set_clock_and_data:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2392                           ;set_clock_and_data@c stored from wreg
  2393  00EE  00F2               	movwf	set_clock_and_data@c
  2394  00EF                     i2Ll3442:	
  2395                           
  2396                           ;scan.c: 71: LATCbits.LATC4 = !!c;
  2397  00EF  3000               	movlw	0
  2398  00F0  08F2               	movf	set_clock_and_data@c,f
  2399  00F1  1D03               	btfss	3,2
  2400  00F2  3001               	movlw	1
  2401  00F3  00F1               	movwf	??_set_clock_and_data
  2402  00F4  0EF1               	swapf	??_set_clock_and_data,f
  2403  00F5  0022               	movlb	2	; select bank2
  2404  00F6  080E               	movf	14,w	;volatile
  2405  00F7  0671               	xorwf	??_set_clock_and_data,w
  2406  00F8  39EF               	andlw	-17
  2407  00F9  0671               	xorwf	??_set_clock_and_data,w
  2408  00FA  008E               	movwf	14	;volatile
  2409                           
  2410                           ;scan.c: 72: LATCbits.LATC5 = !!d;
  2411  00FB  3000               	movlw	0
  2412  00FC  08F0               	movf	set_clock_and_data@d,f
  2413  00FD  1D03               	btfss	3,2
  2414  00FE  3001               	movlw	1
  2415  00FF  00F1               	movwf	??_set_clock_and_data
  2416  0100  0EF1               	swapf	??_set_clock_and_data,f
  2417  0101  0DF1               	rlf	??_set_clock_and_data,f
  2418  0102  080E               	movf	14,w	;volatile
  2419  0103  0671               	xorwf	??_set_clock_and_data,w
  2420  0104  39DF               	andlw	-33
  2421  0105  0671               	xorwf	??_set_clock_and_data,w
  2422  0106  008E               	movwf	14	;volatile
  2423  0107                     i2Ll205:	
  2424                           
  2425                           ;scan.c: 139: state = S_GO;
  2426  0107  0023               	movlb	3	; select bank3
  2427  0108  01BD               	clrf	scan_task@state^(0+384)
  2428  0109  0ABD               	incf	scan_task@state^(0+384),f
  2429  010A                     i3L__ptext51:	
  2430                           ;scan.c: 140: set_timer();
  2431                           
  2432                           
  2433                           ;psect for function _set_timer
  2434  010A                     i3L_set_timer:	
  2435  010A                     i3Ll3426:	
  2436                           
  2437                           ;scan.c: 58: wait_timer = 1;
  2438  010A  0022               	movlb	2	; select bank2
  2439  010B  01ED               	clrf	_wait_timer^(0+256)
  2440  010C  0AED               	incf	_wait_timer^(0+256),f
  2441                           
  2442                           ;scan.c: 59: OPTION_REGbits.TMR0CS = 0;
  2443  010D  0021               	movlb	1	; select bank1
  2444  010E  1295               	bcf	21,5	;volatile
  2445                           
  2446                           ;scan.c: 60: OPTION_REGbits.PSA = 1;
  2447  010F  1595               	bsf	21,3	;volatile
  2448                           
  2449                           ;scan.c: 61: INTCONbits.TMR0IE = 0;
  2450  0110  128B               	bcf	11,5	;volatile
  2451                           
  2452                           ;scan.c: 62: INTCONbits.TMR0IF = 0;
  2453  0111  110B               	bcf	11,2	;volatile
  2454  0112                     i3Ll3428:	
  2455                           
  2456                           ;scan.c: 63: TMR0 = 0;
  2457  0112  0020               	movlb	0	; select bank0
  2458  0113  0195               	clrf	21	;volatile
  2459  0114                     i3Ll197:	
  2460                           
  2461                           ;scan.c: 141: break;
  2462  0114  29F5               	goto	l2884
  2463  0115                     l2854:	
  2464  0115  3000               	movlw	0
  2465                           
  2466                           ;scan.c: 144: set_clock_and_data(0,1);
  2467  0116  01F0               	clrf	?_set_clock_and_data
  2468  0117  0AF0               	incf	?_set_clock_and_data,f
  2469  0118                     i4L__ptext49:	
  2470                           
  2471                           ;psect for function _set_clock_and_data
  2472  0118                     i4L_set_clock_and_data:	
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2476                           ;set_clock_and_data@c stored from wreg
  2477  0118  00F2               	movwf	set_clock_and_data@c
  2478  0119                     i4Ll3442:	
  2479                           
  2480                           ;scan.c: 71: LATCbits.LATC4 = !!c;
  2481  0119  3000               	movlw	0
  2482  011A  08F2               	movf	set_clock_and_data@c,f
  2483  011B  1D03               	btfss	3,2
  2484  011C  3001               	movlw	1
  2485  011D  00F1               	movwf	??_set_clock_and_data
  2486  011E  0EF1               	swapf	??_set_clock_and_data,f
  2487  011F  0022               	movlb	2	; select bank2
  2488  0120  080E               	movf	14,w	;volatile
  2489  0121  0671               	xorwf	??_set_clock_and_data,w
  2490  0122  39EF               	andlw	-17
  2491  0123  0671               	xorwf	??_set_clock_and_data,w
  2492  0124  008E               	movwf	14	;volatile
  2493                           
  2494                           ;scan.c: 72: LATCbits.LATC5 = !!d;
  2495  0125  3000               	movlw	0
  2496  0126  08F0               	movf	set_clock_and_data@d,f
  2497  0127  1D03               	btfss	3,2
  2498  0128  3001               	movlw	1
  2499  0129  00F1               	movwf	??_set_clock_and_data
  2500  012A  0EF1               	swapf	??_set_clock_and_data,f
  2501  012B  0DF1               	rlf	??_set_clock_and_data,f
  2502  012C  080E               	movf	14,w	;volatile
  2503  012D  0671               	xorwf	??_set_clock_and_data,w
  2504  012E  39DF               	andlw	-33
  2505  012F  0671               	xorwf	??_set_clock_and_data,w
  2506  0130  008E               	movwf	14	;volatile
  2507  0131                     i4Ll205:	
  2508                           
  2509                           ;scan.c: 145: state = S_CLOCK_RAISE;
  2510  0131  3002               	movlw	2
  2511  0132  0023               	movlb	3	; select bank3
  2512  0133  00BD               	movwf	scan_task@state^(0+384)
  2513  0134                     i5L__ptext51:	
  2514                           ;scan.c: 146: set_timer();
  2515                           
  2516                           
  2517                           ;psect for function _set_timer
  2518  0134                     i5L_set_timer:	
  2519  0134                     i5Ll3426:	
  2520                           
  2521                           ;scan.c: 58: wait_timer = 1;
  2522  0134  0022               	movlb	2	; select bank2
  2523  0135  01ED               	clrf	_wait_timer^(0+256)
  2524  0136  0AED               	incf	_wait_timer^(0+256),f
  2525                           
  2526                           ;scan.c: 59: OPTION_REGbits.TMR0CS = 0;
  2527  0137  0021               	movlb	1	; select bank1
  2528  0138  1295               	bcf	21,5	;volatile
  2529                           
  2530                           ;scan.c: 60: OPTION_REGbits.PSA = 1;
  2531  0139  1595               	bsf	21,3	;volatile
  2532                           
  2533                           ;scan.c: 61: INTCONbits.TMR0IE = 0;
  2534  013A  128B               	bcf	11,5	;volatile
  2535                           
  2536                           ;scan.c: 62: INTCONbits.TMR0IF = 0;
  2537  013B  110B               	bcf	11,2	;volatile
  2538  013C                     i5Ll3428:	
  2539                           
  2540                           ;scan.c: 63: TMR0 = 0;
  2541  013C  0020               	movlb	0	; select bank0
  2542  013D  0195               	clrf	21	;volatile
  2543  013E                     i5Ll197:	
  2544                           
  2545                           ;scan.c: 147: break;
  2546  013E  29F5               	goto	l2884
  2547  013F                     l2858:	
  2548  013F                     i6L__ptext48:	
  2549                           ;scan.c: 150: set_clock_and_data(1, get_data());
  2550                           
  2551                           
  2552                           ;psect for function _get_data
  2553  013F                     i6L_get_data:	
  2554  013F                     i6Ll3444:	
  2555                           
  2556                           ;scan.c: 76: return LATCbits.LATC5;
  2557  013F  0022               	movlb	2	; select bank2
  2558  0140  0E0E               	swapf	14,w	;volatile
  2559  0141  0C89               	rrf	9,f
  2560  0142  3901               	andlw	1
  2561  0143                     i6Ll208:	
  2562  0143  00F0               	movwf	?_set_clock_and_data
  2563  0144  3001               	movlw	1
  2564  0145                     i7L__ptext49:	
  2565                           
  2566                           ;psect for function _set_clock_and_data
  2567  0145                     i7L_set_clock_and_data:	
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2571                           ;set_clock_and_data@c stored from wreg
  2572  0145  00F2               	movwf	set_clock_and_data@c
  2573  0146                     i7Ll3442:	
  2574                           
  2575                           ;scan.c: 71: LATCbits.LATC4 = !!c;
  2576  0146  3000               	movlw	0
  2577  0147  08F2               	movf	set_clock_and_data@c,f
  2578  0148  1D03               	btfss	3,2
  2579  0149  3001               	movlw	1
  2580  014A  00F1               	movwf	??_set_clock_and_data
  2581  014B  0EF1               	swapf	??_set_clock_and_data,f
  2582  014C  0022               	movlb	2	; select bank2
  2583  014D  080E               	movf	14,w	;volatile
  2584  014E  0671               	xorwf	??_set_clock_and_data,w
  2585  014F  39EF               	andlw	-17
  2586  0150  0671               	xorwf	??_set_clock_and_data,w
  2587  0151  008E               	movwf	14	;volatile
  2588                           
  2589                           ;scan.c: 72: LATCbits.LATC5 = !!d;
  2590  0152  3000               	movlw	0
  2591  0153  08F0               	movf	set_clock_and_data@d,f
  2592  0154  1D03               	btfss	3,2
  2593  0155  3001               	movlw	1
  2594  0156  00F1               	movwf	??_set_clock_and_data
  2595  0157  0EF1               	swapf	??_set_clock_and_data,f
  2596  0158  0DF1               	rlf	??_set_clock_and_data,f
  2597  0159  080E               	movf	14,w	;volatile
  2598  015A  0671               	xorwf	??_set_clock_and_data,w
  2599  015B  39DF               	andlw	-33
  2600  015C  0671               	xorwf	??_set_clock_and_data,w
  2601  015D  008E               	movwf	14	;volatile
  2602  015E                     i7Ll205:	
  2603                           
  2604                           ;scan.c: 151: state = S_CLOCK_FALL;
  2605  015E  3003               	movlw	3
  2606  015F  0023               	movlb	3	; select bank3
  2607  0160  00BD               	movwf	scan_task@state^(0+384)
  2608  0161                     i8L__ptext51:	
  2609                           ;scan.c: 152: set_timer();
  2610                           
  2611                           
  2612                           ;psect for function _set_timer
  2613  0161                     i8L_set_timer:	
  2614  0161                     i8Ll3426:	
  2615                           
  2616                           ;scan.c: 58: wait_timer = 1;
  2617  0161  0022               	movlb	2	; select bank2
  2618  0162  01ED               	clrf	_wait_timer^(0+256)
  2619  0163  0AED               	incf	_wait_timer^(0+256),f
  2620                           
  2621                           ;scan.c: 59: OPTION_REGbits.TMR0CS = 0;
  2622  0164  0021               	movlb	1	; select bank1
  2623  0165  1295               	bcf	21,5	;volatile
  2624                           
  2625                           ;scan.c: 60: OPTION_REGbits.PSA = 1;
  2626  0166  1595               	bsf	21,3	;volatile
  2627                           
  2628                           ;scan.c: 61: INTCONbits.TMR0IE = 0;
  2629  0167  128B               	bcf	11,5	;volatile
  2630                           
  2631                           ;scan.c: 62: INTCONbits.TMR0IF = 0;
  2632  0168  110B               	bcf	11,2	;volatile
  2633  0169                     i8Ll3428:	
  2634                           
  2635                           ;scan.c: 63: TMR0 = 0;
  2636  0169  0020               	movlb	0	; select bank0
  2637  016A  0195               	clrf	21	;volatile
  2638  016B                     i8Ll197:	
  2639                           
  2640                           ;scan.c: 153: break;
  2641  016B  29F5               	goto	l2884
  2642  016C                     l2862:	
  2643  016C  3000               	movlw	0
  2644                           
  2645                           ;scan.c: 156: set_clock_and_data(0,0);
  2646  016D  01F0               	clrf	?_set_clock_and_data
  2647  016E                     i9L__ptext49:	
  2648                           
  2649                           ;psect for function _set_clock_and_data
  2650  016E                     i9L_set_clock_and_data:	
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2654                           ;set_clock_and_data@c stored from wreg
  2655  016E  00F2               	movwf	set_clock_and_data@c
  2656  016F                     i9Ll3442:	
  2657                           
  2658                           ;scan.c: 71: LATCbits.LATC4 = !!c;
  2659  016F  3000               	movlw	0
  2660  0170  08F2               	movf	set_clock_and_data@c,f
  2661  0171  1D03               	btfss	3,2
  2662  0172  3001               	movlw	1
  2663  0173  00F1               	movwf	??_set_clock_and_data
  2664  0174  0EF1               	swapf	??_set_clock_and_data,f
  2665  0175  0022               	movlb	2	; select bank2
  2666  0176  080E               	movf	14,w	;volatile
  2667  0177  0671               	xorwf	??_set_clock_and_data,w
  2668  0178  39EF               	andlw	-17
  2669  0179  0671               	xorwf	??_set_clock_and_data,w
  2670  017A  008E               	movwf	14	;volatile
  2671                           
  2672                           ;scan.c: 72: LATCbits.LATC5 = !!d;
  2673  017B  3000               	movlw	0
  2674  017C  08F0               	movf	set_clock_and_data@d,f
  2675  017D  1D03               	btfss	3,2
  2676  017E  3001               	movlw	1
  2677  017F  00F1               	movwf	??_set_clock_and_data
  2678  0180  0EF1               	swapf	??_set_clock_and_data,f
  2679  0181  0DF1               	rlf	??_set_clock_and_data,f
  2680  0182  080E               	movf	14,w	;volatile
  2681  0183  0671               	xorwf	??_set_clock_and_data,w
  2682  0184  39DF               	andlw	-33
  2683  0185  0671               	xorwf	??_set_clock_and_data,w
  2684  0186  008E               	movwf	14	;volatile
  2685  0187                     i9Ll205:	
  2686  0187                     i10L__ptext46:	
  2687                           ;scan.c: 157: run_adc();
  2688                           
  2689                           
  2690                           ;psect for function _run_adc
  2691  0187                     i10L_run_adc:	
  2692  0187                     i10Ll3458:	
  2693                           
  2694                           ;scan.c: 88: ADCON0bits.CHS = 7;
  2695  0187  0021               	movlb	1	; select bank1
  2696  0188  081D               	movf	29,w	;volatile
  2697  0189  3983               	andlw	-125
  2698  018A  381C               	iorlw	28
  2699  018B  009D               	movwf	29	;volatile
  2700  018C                     i10Ll3460:	
  2701                           
  2702                           ;scan.c: 89: ADCON0bits.GO = 1;
  2703  018C  149D               	bsf	29,1	;volatile
  2704  018D                     i10Ll217:	
  2705                           
  2706                           ;scan.c: 158: state = S_ADC_WAIT;
  2707  018D  3004               	movlw	4
  2708  018E  0023               	movlb	3	; select bank3
  2709  018F  00BD               	movwf	scan_task@state^(0+384)
  2710  0190                     i11L__ptext51:	
  2711                           ;scan.c: 159: set_timer();
  2712                           
  2713                           
  2714                           ;psect for function _set_timer
  2715  0190                     i11L_set_timer:	
  2716  0190                     i11Ll3426:	
  2717                           
  2718                           ;scan.c: 58: wait_timer = 1;
  2719  0190  0022               	movlb	2	; select bank2
  2720  0191  01ED               	clrf	_wait_timer^(0+256)
  2721  0192  0AED               	incf	_wait_timer^(0+256),f
  2722                           
  2723                           ;scan.c: 59: OPTION_REGbits.TMR0CS = 0;
  2724  0193  0021               	movlb	1	; select bank1
  2725  0194  1295               	bcf	21,5	;volatile
  2726                           
  2727                           ;scan.c: 60: OPTION_REGbits.PSA = 1;
  2728  0195  1595               	bsf	21,3	;volatile
  2729                           
  2730                           ;scan.c: 61: INTCONbits.TMR0IE = 0;
  2731  0196  128B               	bcf	11,5	;volatile
  2732                           
  2733                           ;scan.c: 62: INTCONbits.TMR0IF = 0;
  2734  0197  110B               	bcf	11,2	;volatile
  2735  0198                     i11Ll3428:	
  2736                           
  2737                           ;scan.c: 63: TMR0 = 0;
  2738  0198  0020               	movlb	0	; select bank0
  2739  0199  0195               	clrf	21	;volatile
  2740  019A                     i11Ll197:	
  2741                           
  2742                           ;scan.c: 160: break;
  2743  019A  29F5               	goto	l2884
  2744  019B                     l2866:	
  2745  019B                     i12L__ptext45:	
  2746                           ;scan.c: 163: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  2747                           
  2748                           
  2749                           ;psect for function _is_adc_ready
  2750  019B                     i12L_is_adc_ready:	
  2751  019B                     i12Ll3462:	
  2752                           
  2753                           ;scan.c: 93: return !ADCON0bits.GO_nDONE;
  2754  019B  3000               	movlw	0
  2755  019C  0021               	movlb	1	; select bank1
  2756  019D  1C9D               	btfss	29,1	;volatile
  2757  019E  3001               	movlw	1
  2758  019F  3800               	iorlw	0
  2759  01A0  1D03               	skipz
  2760  01A1  29A4               	goto	l2870
  2761  01A2  3004               	movlw	4
  2762  01A3  29A5               	goto	L22
  2763  01A4                     l2870:	
  2764  01A4  3005               	movlw	5
  2765  01A5                     L22:	
  2766  01A5  00F6               	movwf	_scan_task$737
  2767  01A6  01F7               	clrf	_scan_task$737+1
  2768  01A7  29E7               	goto	L23
  2769  01A8                     l2872:	
  2770                           ;scan.c: 164: break;
  2771                           
  2772  01A8                     i13L__ptext47:	
  2773                           ;scan.c: 167: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  2774                           
  2775                           
  2776                           ;psect for function _is_end_of_scan
  2777  01A8                     i13L_is_end_of_scan:	
  2778  01A8                     i13Ll3448:	
  2779                           
  2780                           ;scan.c: 81: static uint8_t scan_counter = 0;
  2781                           ;scan.c: 82: bool res = (++scan_counter) >= N_KEYS;
  2782  01A8  3040               	movlw	64
  2783  01A9  0022               	movlb	2	; select bank2
  2784  01AA  0AEE               	incf	is_end_of_scan@scan_counter^(0+256),f
  2785  01AB  026E               	subwf	is_end_of_scan@scan_counter^(0+256),w
  2786  01AC  3000               	movlw	0
  2787  01AD  1803               	btfsc	3,0
  2788  01AE  3001               	movlw	1
  2789  01AF  00F0               	movwf	is_end_of_scan@res
  2790  01B0                     i13Ll3450:	
  2791                           
  2792                           ;scan.c: 83: if (scan_counter >= N_KEYS) scan_counter = 0;
  2793  01B0  3040               	movlw	64
  2794  01B1  026E               	subwf	is_end_of_scan@scan_counter^(0+256),w
  2795  01B2  1C03               	btfss	3,0
  2796  01B3  29B7               	ljmp	i13Ll3454
  2797  01B4  29B6               	ljmp	i13Ll3452
  2798  01B5                     i13Lu2351:	
  2799  01B5  29B7               	ljmp	i13Ll3454
  2800  01B6                     i13Lu2350:	
  2801  01B6                     i13Ll3452:	
  2802  01B6  01EE               	clrf	is_end_of_scan@scan_counter^(0+256)
  2803  01B7                     i13Ll3454:	
  2804                           
  2805                           ;scan.c: 84: return res;
  2806  01B7  0870               	movf	is_end_of_scan@res,w
  2807  01B8                     i13Ll214:	
  2808  01B8  00F3               	movwf	?_store_key_level
  2809  01B9                     i14L__ptext44:	
  2810                           
  2811                           ;psect for function _get_adc
  2812  01B9                     i14L_get_adc:	
  2813  01B9                     i14Ll3466:	
  2814                           
  2815                           ;scan.c: 97: return ADRESH;
  2816  01B9  0021               	movlb	1	; select bank1
  2817  01BA  081C               	movf	28,w	;volatile
  2818  01BB                     i14Ll223:	
  2819  01BB                     i15L__ptext42:	
  2820                           
  2821                           ;psect for function _store_key_level
  2822  01BB                     i15L_store_key_level:	
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _store_key_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2826                           ;store_key_level@level stored from wreg
  2827  01BB  00F4               	movwf	store_key_level@level
  2828  01BC                     i15Ll3470:	
  2829                           
  2830                           ;scan.c: 108: static uint8_t idx_key = 0;
  2831                           ;scan.c: 109: process_level(idx_key, adc_levels[idx_key], level);
  2832  01BC  0869               	movf	store_key_level@idx_key^(0+128),w
  2833  01BD  3E20               	addlw	_adc_levels& (0+255)
  2834  01BE  0086               	movwf	6
  2835  01BF  3003               	movlw	3	; select bank6/7
  2836  01C0  0087               	movwf	7
  2837  01C1  0801               	movf	1,w
  2838  01C2  00F0               	movwf	?_process_level
  2839  01C3  0874               	movf	store_key_level@level,w
  2840  01C4  00F1               	movwf	?_process_level+1
  2841  01C5                     i16L__ptext43:	
  2842                           
  2843                           ;psect for function _process_level
  2844  01C5                     i16L_process_level:	
  2845  01C5                     i16Ll226:	
  2846  01C5                     i15Ll3472:	
  2847                           
  2848                           ;scan.c: 110: adc_levels[idx_key] = level;
  2849  01C5  0869               	movf	store_key_level@idx_key^(0+128),w
  2850  01C6  3E20               	addlw	_adc_levels& (0+255)
  2851  01C7  0086               	movwf	6
  2852  01C8  3003               	movlw	3	; select bank6/7
  2853  01C9  0087               	movwf	7
  2854  01CA  0874               	movf	store_key_level@level,w
  2855  01CB  0081               	movwf	1
  2856  01CC                     i15Ll3474:	
  2857                           
  2858                           ;scan.c: 111: idx_key ++;
  2859  01CC  0AE9               	incf	store_key_level@idx_key^(0+128),f
  2860  01CD                     i15Ll3476:	
  2861                           
  2862                           ;scan.c: 112: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  2863  01CD  3040               	movlw	64
  2864  01CE  0269               	subwf	store_key_level@idx_key^(0+128),w
  2865  01CF  1803               	btfsc	3,0
  2866  01D0  29D7               	ljmp	i15Ll3480
  2867  01D1  29D3               	ljmp	i15Ll3478
  2868  01D2                     i15Lu2361:	
  2869  01D2  29D7               	ljmp	i15Ll3480
  2870  01D3                     i15Lu2360:	
  2871  01D3                     i15Ll3478:	
  2872  01D3  0873               	movf	store_key_level@end_of_scan,w
  2873  01D4  1D03               	btfss	3,2
  2874  01D5  29D7               	ljmp	i15Ll3480
  2875  01D6  29D8               	ljmp	i15Ll3482
  2876  01D7                     i15Lu2370:	
  2877  01D7                     i15Ll3480:	
  2878  01D7  01E9               	clrf	store_key_level@idx_key^(0+128)
  2879  01D8                     i15Ll3482:	
  2880                           
  2881                           ;scan.c: 113: return idx_key == 0;
  2882  01D8  0869               	movf	store_key_level@idx_key^(0+128),w
  2883  01D9  3A00               	xorlw	0
  2884  01DA  3000               	movlw	0
  2885  01DB  1903               	btfsc	3,2
  2886  01DC  3001               	movlw	1
  2887  01DD  3800               	iorlw	0
  2888  01DE  1D03               	skipz
  2889  01DF  29E3               	goto	l2876
  2890  01E0  3002               	movlw	2
  2891  01E1  00F8               	movwf	_scan_task$738
  2892  01E2  29E5               	goto	L24
  2893  01E3                     l2876:	
  2894  01E3  01F8               	clrf	_scan_task$738
  2895  01E4  0AF8               	incf	_scan_task$738,f
  2896  01E5                     L24:	
  2897  01E5  01F9               	clrf	_scan_task$738+1
  2898  01E6  0878               	movf	_scan_task$738,w
  2899  01E7                     L23:	
  2900  01E7  0023               	movlb	3	; select bank3
  2901  01E8  00BD               	movwf	scan_task@state^(0+384)
  2902                           
  2903                           ;scan.c: 168: break;
  2904  01E9  29F5               	goto	l2884
  2905  01EA                     l2882:	
  2906  01EA  0023               	movlb	3	; select bank3
  2907  01EB  083D               	movf	scan_task@state^(0+384),w
  2908                           
  2909                           ; Switch size 1, requested type "speed"
  2910                           ; Number of cases is 6, Range of values is 0 to 5
  2911                           ; switch strategies available:
  2912                           ; Name         Instructions Cycles
  2913                           ; direct_byte           18     6 (fixed)
  2914                           ; simple_byte           19    10 (average)
  2915                           ; jumptable            260     6 (fixed)
  2916                           ; rangetable            10     4 (fixed)
  2917                           ; spacedrange           17     6 (fixed)
  2918                           ; locatedrange           6     3 (fixed)
  2919                           ;	Chosen strategy is direct_byte
  2920  01EC  0084               	movwf	4
  2921  01ED  3006               	movlw	6
  2922  01EE  0204               	subwf	4,w
  2923  01EF  1803               	skipnc
  2924  01F0  29F5               	goto	l2884
  2925  01F1  3188               	movlp	high S5498
  2926  01F2  3504               	lslf	4,w
  2927  01F3  3EEA               	addlw	low S5498
  2928  01F4  0082               	movwf	2
  2929  01F5                     l2884:	
  2930                           
  2931                           ;scan.c: 171: *note = note_event.pitch;
  2932  01F5  087A               	movf	scan_task@note,w
  2933  01F6  0086               	movwf	6
  2934  01F7  0187               	clrf	7
  2935  01F8  0023               	movlb	3	; select bank3
  2936  01F9  0831               	movf	_note_event^(0+384),w
  2937  01FA  0081               	movwf	1
  2938                           
  2939                           ;scan.c: 172: *velocity = note_event.velocity;
  2940  01FB  0875               	movf	scan_task@velocity,w
  2941  01FC  0086               	movwf	6
  2942  01FD  0832               	movf	(_note_event^(0+384)+1),w
  2943  01FE  0081               	movwf	1
  2944                           
  2945                           ;scan.c: 173: return !! note_event.pitch;
  2946  01FF  3000               	movlw	0
  2947  0200  08B1               	movf	_note_event^(0+384),f
  2948  0201  1D03               	skipz
  2949  0202  3001               	movlw	1
  2950  0203  0008               	return
  2951  0204                     __end_of_scan_task:	
  2952  0204                     __ptext52:	
  2953 ;; *************** function _scan_init *****************
  2954 ;; Defined at:
  2955 ;;		line 34 in file "../src/scan.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 1F/3
  2966 ;;		On exit  : 1F/1
  2967 ;;		Unchanged: FFFE0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_scan_task
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _scan_init
  2985  0204                     _scan_init:	
  2986                           
  2987                           ;scan.c: 35: is_initialized = 1;
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  2991  0204  01BC               	clrf	_is_initialized^(0+384)
  2992  0205  0ABC               	incf	_is_initialized^(0+384),f
  2993                           
  2994                           ;scan.c: 36: TRISCbits.TRISC3 = PIN_INPUT;
  2995  0206  0021               	movlb	1	; select bank1
  2996  0207  158E               	bsf	14,3	;volatile
  2997                           
  2998                           ;scan.c: 37: TRISCbits.TRISC4 = PIN_OUTPUT;
  2999  0208  120E               	bcf	14,4	;volatile
  3000                           
  3001                           ;scan.c: 38: TRISCbits.TRISC5 = PIN_OUTPUT;
  3002  0209  128E               	bcf	14,5	;volatile
  3003                           
  3004                           ;scan.c: 40: ANSELA = 0;
  3005  020A  0023               	movlb	3	; select bank3
  3006  020B  018C               	clrf	12	;volatile
  3007                           
  3008                           ;scan.c: 42: ANSELCbits.ANSC3 = PIN_ANALOG;
  3009  020C  158E               	bsf	14,3	;volatile
  3010                           
  3011                           ;scan.c: 43: LATCbits.LATC4 = 0;
  3012  020D  0022               	movlb	2	; select bank2
  3013  020E  120E               	bcf	14,4	;volatile
  3014                           
  3015                           ;scan.c: 44: LATCbits.LATC5 = 0;
  3016  020F  128E               	bcf	14,5	;volatile
  3017                           
  3018                           ;scan.c: 46: ANSELAbits.ANSA4 = PIN_DIGITAL;
  3019  0210  0023               	movlb	3	; select bank3
  3020  0211  120C               	bcf	12,4	;volatile
  3021                           
  3022                           ;scan.c: 47: TRISAbits.TRISA4 = PIN_INPUT;
  3023  0212  0021               	movlb	1	; select bank1
  3024  0213  160C               	bsf	12,4	;volatile
  3025                           
  3026                           ;scan.c: 49: PIE1bits.ADIE = 0;
  3027  0214  1311               	bcf	17,6	;volatile
  3028                           
  3029                           ;scan.c: 50: ADCON0bits.ADON = 1;
  3030  0215  141D               	bsf	29,0	;volatile
  3031                           
  3032                           ;scan.c: 51: ADCON1bits.ADFM = 0;
  3033  0216  139E               	bcf	30,7	;volatile
  3034                           
  3035                           ;scan.c: 52: ADCON1bits.ADCS = 0b110;
  3036  0217  081E               	movf	30,w	;volatile
  3037  0218  398F               	andlw	-113
  3038  0219  3860               	iorlw	96
  3039  021A  009E               	movwf	30	;volatile
  3040                           
  3041                           ;scan.c: 53: ADCON1bits.ADPREF = 0;
  3042  021B  30FC               	movlw	-4
  3043  021C  059E               	andwf	30,f	;volatile
  3044                           
  3045                           ;scan.c: 54: ADCON2bits.TRIGSEL = 0;
  3046  021D  308F               	movlw	-113
  3047  021E  059F               	andwf	31,f	;volatile
  3048  021F  0008               	return
  3049  0220                     __end_of_scan_init:	
  3050  0220                     __ptext40:	
  3051 ;; *************** function _BUTTON_IsPressed *****************
  3052 ;; Defined at:
  3053 ;;		line 56 in file "../bsp/pic16f1459/buttons.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  button          1    wreg     enum E2603
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  button          1    0[COMMON] enum E2603
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      unsigned char 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 1E/2
  3064 ;;		On exit  : 1C/0
  3065 ;;		Unchanged: FFFE0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;Total ram usage:        1 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_APP_DeviceCDCBasicDemoTasks
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _BUTTON_IsPressed
  3083  0220                     _BUTTON_IsPressed:	
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  3087                           ;BUTTON_IsPressed@button stored from wreg
  3088  0220  00F0               	movwf	BUTTON_IsPressed@button
  3089                           
  3090                           ;buttons.c: 57: switch(button)
  3091  0221  2A28               	goto	l2906
  3092  0222                     l2896:	
  3093                           
  3094                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  3095  0222  3000               	movlw	0
  3096  0223  0020               	movlb	0	; select bank0
  3097  0224  1D8C               	btfss	12,3	;volatile
  3098  0225  3001               	movlw	1
  3099  0226  0008               	return
  3100  0227                     l2900:	
  3101                           
  3102                           ;buttons.c: 63: return 0;
  3103  0227  3400               	retlw	0
  3104  0228                     l2906:	
  3105  0228  0870               	movf	BUTTON_IsPressed@button,w
  3106                           
  3107                           ; Switch size 1, requested type "speed"
  3108                           ; Number of cases is 2, Range of values is 0 to 1
  3109                           ; switch strategies available:
  3110                           ; Name         Instructions Cycles
  3111                           ; simple_byte            7     4 (average)
  3112                           ; direct_byte           10     6 (fixed)
  3113                           ; jumptable            260     6 (fixed)
  3114                           ; rangetable             6     4 (fixed)
  3115                           ; spacedrange            9     6 (fixed)
  3116                           ; locatedrange           2     3 (fixed)
  3117                           ;	Chosen strategy is simple_byte
  3118  0229  3A00               	xorlw	0	; case 0
  3119  022A  1903               	skipnz
  3120  022B  2A27               	goto	l2900
  3121  022C  3A01               	xorlw	1	; case 1
  3122  022D  1903               	skipnz
  3123  022E  2A22               	goto	l2896
  3124  022F  2A27               	goto	l2900
  3125  0230  0008               	return
  3126  0231                     __end_of_BUTTON_IsPressed:	
  3127  0231                     __ptext39:	
  3128 ;; *************** function _putrsUSBUSART *****************
  3129 ;; Defined at:
  3130 ;;		line 784 in file "../framework/usb/usb_device_cdc.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  data            1    wreg     PTR const unsigned char 
  3133 ;;		 -> buttonMessage(18), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  data            1    1[COMMON] PTR const unsigned char 
  3136 ;;		 -> buttonMessage(18), 
  3137 ;;  len             1    2[COMMON] unsigned char 
  3138 ;;  pData           1    0[COMMON] PTR const unsigned char 
  3139 ;;		 -> buttonMessage(18), 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;		None               void
  3142 ;; Registers used:
  3143 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 1F/1
  3146 ;;		On exit  : 1F/1
  3147 ;;		Unchanged: FFFE0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;Total ram usage:        3 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_APP_DeviceCDCBasicDemoTasks
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _putrsUSBUSART
  3165  0231                     _putrsUSBUSART:	
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in _putrsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3169                           ;putrsUSBUSART@data stored from wreg
  3170  0231  00F1               	movwf	putrsUSBUSART@data
  3171                           
  3172                           ;usb_device_cdc.c: 785: uint8_t len;
  3173                           ;usb_device_cdc.c: 786: const const char *pData;
  3174                           ;usb_device_cdc.c: 811: ;
  3175                           ;usb_device_cdc.c: 812: if(cdc_trf_state != 0)
  3176  0232  0867               	movf	_cdc_trf_state^(0+128),w
  3177  0233  1D03               	skipz
  3178  0234  0008               	return
  3179                           
  3180                           ;usb_device_cdc.c: 816: }
  3181                           ;usb_device_cdc.c: 822: len = 0;
  3182  0235  01F2               	clrf	putrsUSBUSART@len
  3183                           
  3184                           ;usb_device_cdc.c: 823: pData = data;
  3185  0236  0871               	movf	putrsUSBUSART@data,w
  3186  0237  00F0               	movwf	putrsUSBUSART@pData
  3187  0238                     l2920:	
  3188                           
  3189                           ;usb_device_cdc.c: 825: {
  3190                           ;usb_device_cdc.c: 826: len++;
  3191  0238  0AF2               	incf	putrsUSBUSART@len,f
  3192                           
  3193                           ;usb_device_cdc.c: 827: if(len == 255) break;
  3194  0239  0872               	movf	putrsUSBUSART@len,w
  3195  023A  3AFF               	xorlw	255
  3196  023B  1903               	btfsc	3,2
  3197  023C  2A45               	goto	l2928
  3198                           
  3199                           ;usb_device_cdc.c: 828: }while(*pData++);
  3200  023D  0870               	movf	putrsUSBUSART@pData,w
  3201  023E  0086               	movwf	6
  3202  023F  3001               	movlw	1	; select bank2/3
  3203  0240  0087               	movwf	7
  3204  0241  0AF0               	incf	putrsUSBUSART@pData,f
  3205  0242  0881               	movf	1,f
  3206  0243  1D03               	skipz
  3207  0244  2A38               	goto	l2920
  3208  0245                     l2928:	
  3209                           
  3210                           ;usb_device_cdc.c: 837: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3211  0245  0871               	movf	putrsUSBUSART@data,w
  3212  0246  0023               	movlb	3	; select bank3
  3213  0247  00B5               	movwf	_pCDCSrc^(0+384)
  3214  0248  3001               	movlw	1
  3215  0249  00B6               	movwf	(_pCDCSrc+1)^(0+384)
  3216  024A  0872               	movf	putrsUSBUSART@len,w
  3217  024B  0022               	movlb	2	; select bank2
  3218  024C  00E9               	movwf	_cdc_tx_len^(0+256)
  3219  024D  0023               	movlb	3	; select bank3
  3220  024E  01BB               	clrf	_cdc_mem_type^(0+384)
  3221  024F  0021               	movlb	1	; select bank1
  3222  0250  01E7               	clrf	_cdc_trf_state^(0+128)
  3223  0251  0AE7               	incf	_cdc_trf_state^(0+128),f
  3224  0252  0008               	return
  3225  0253                     __end_of_putrsUSBUSART:	
  3226  0253                     __ptext37:	
  3227 ;; *************** function _getsUSBUSART *****************
  3228 ;; Defined at:
  3229 ;;		line 543 in file "../framework/usb/usb_device_cdc.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  buffer          1    wreg     PTR unsigned char 
  3232 ;;		 -> readBuffer(64), 
  3233 ;;  len             1    8[COMMON] unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  buffer          1   10[COMMON] PTR unsigned char 
  3236 ;;		 -> readBuffer(64), 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      unsigned char 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 1F/1
  3243 ;;		On exit  : 1F/1
  3244 ;;		Unchanged: FFFE0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3246 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;Total ram usage:        5 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    2
  3253 ;; This function calls:
  3254 ;;		_USBTransferOnePacket
  3255 ;; This function is called by:
  3256 ;;		_APP_DeviceCDCBasicDemoTasks
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _getsUSBUSART
  3262  0253                     _getsUSBUSART:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _getsUSBUSART: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3266                           ;getsUSBUSART@buffer stored from wreg
  3267  0253  00FA               	movwf	getsUSBUSART@buffer
  3268                           
  3269                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  3270  0254  01E6               	clrf	_cdc_rx_len^(0+128)
  3271                           
  3272                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  3273  0255  0863               	movf	_CDCDataOutHandle^(0+128),w
  3274  0256  1903               	btfsc	3,2
  3275  0257  2A60               	goto	l4316
  3276  0258  0863               	movf	_CDCDataOutHandle^(0+128),w
  3277  0259  0086               	movwf	6
  3278  025A  0187               	clrf	7
  3279  025B  0D01               	rlf	1,w
  3280  025C  0D01               	rlf	1,w
  3281  025D  3901               	andlw	1
  3282  025E  00FB               	movwf	_getsUSBUSART$2358
  3283  025F  2A61               	goto	L18
  3284  0260                     l4316:	
  3285  0260  01FB               	clrf	_getsUSBUSART$2358
  3286  0261                     L18:	
  3287  0261  01FC               	clrf	_getsUSBUSART$2358+1
  3288  0262  087C               	movf	_getsUSBUSART$2358+1,w
  3289  0263  047B               	iorwf	_getsUSBUSART$2358,w
  3290  0264  1D03               	skipz
  3291  0265  2A8F               	goto	l4334
  3292                           
  3293                           ;usb_device_cdc.c: 547: {
  3294                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3295  0266  0A63               	incf	_CDCDataOutHandle^(0+128),w
  3296  0267  0086               	movwf	6
  3297  0268  0187               	clrf	7
  3298  0269  0878               	movf	getsUSBUSART@len,w
  3299  026A  0201               	subwf	1,w
  3300  026B  1803               	skipnc
  3301  026C  2A71               	goto	l4324
  3302                           
  3303                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3304  026D  0863               	movf	_CDCDataOutHandle^(0+128),w
  3305  026E  0086               	movwf	6
  3306  026F  3F41               	moviw [1]fsr1
  3307  0270  00F8               	movwf	getsUSBUSART@len
  3308  0271                     l4324:	
  3309                           
  3310                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3311  0271  01E6               	clrf	_cdc_rx_len^(0+128)
  3312  0272                     l4330:	
  3313  0272  0878               	movf	getsUSBUSART@len,w
  3314  0273  0266               	subwf	_cdc_rx_len^(0+128),w
  3315  0274  1803               	btfsc	3,0
  3316  0275  2A85               	goto	l4332
  3317                           
  3318                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3319  0276  0866               	movf	_cdc_rx_len^(0+128),w
  3320  0277  077A               	addwf	getsUSBUSART@buffer,w
  3321  0278  00F9               	movwf	??_getsUSBUSART
  3322  0279  0086               	movwf	6
  3323  027A  3002               	movlw	2	; select bank4/5
  3324  027B  0087               	movwf	7
  3325  027C  0866               	movf	_cdc_rx_len^(0+128),w
  3326  027D  3E20               	addlw	32
  3327  027E  0084               	movwf	4
  3328  027F  3001               	movlw	1	; select bank2/3
  3329  0280  0085               	movwf	5
  3330  0281  0800               	movf	0,w
  3331  0282  0081               	movwf	1
  3332  0283  0AE6               	incf	_cdc_rx_len^(0+128),f
  3333  0284  2A72               	goto	l4330
  3334  0285                     l4332:	
  3335  0285  3020               	movlw	32
  3336                           
  3337                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3338  0286  01F0               	clrf	?_USBTransferOnePacket
  3339  0287  00F1               	movwf	?_USBTransferOnePacket+1
  3340  0288  3001               	movlw	1
  3341  0289  00F2               	movwf	?_USBTransferOnePacket+2
  3342  028A  3040               	movlw	64
  3343  028B  00F3               	movwf	?_USBTransferOnePacket+3
  3344  028C  3002               	movlw	2
  3345  028D  266F               	fcall	_USBTransferOnePacket
  3346  028E  00E3               	movwf	_CDCDataOutHandle^(0+128)
  3347  028F                     l4334:	
  3348                           
  3349                           ;usb_device_cdc.c: 567: }
  3350                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  3351  028F  0866               	movf	_cdc_rx_len^(0+128),w
  3352  0290  0008               	return
  3353  0291                     __end_of_getsUSBUSART:	
  3354  0291                     __ptext36:	
  3355 ;; *************** function _putUSBUSART *****************
  3356 ;; Defined at:
  3357 ;;		line 614 in file "../framework/usb/usb_device_cdc.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  data            1    wreg     PTR unsigned char 
  3360 ;;		 -> writeBuffer(64), 
  3361 ;;  length          1    0[COMMON] unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  data            1    1[COMMON] PTR unsigned char 
  3364 ;;		 -> writeBuffer(64), 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;		None               void
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 1F/0
  3371 ;;		On exit  : 1F/1
  3372 ;;		Unchanged: FFFE0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3374 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_APP_DeviceCDCBasicDemoTasks
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _putUSBUSART
  3390  0291                     _putUSBUSART:	
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  3394                           ;putUSBUSART@data stored from wreg
  3395  0291  00F1               	movwf	putUSBUSART@data
  3396                           
  3397                           ;usb_device_cdc.c: 638: ;
  3398                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  3399  0292  0021               	movlb	1	; select bank1
  3400  0293  08E7               	movf	_cdc_trf_state^(0+128),f
  3401  0294  1D03               	skipz
  3402  0295  0008               	return
  3403                           
  3404                           ;usb_device_cdc.c: 640: {
  3405                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  3406  0296  0871               	movf	putUSBUSART@data,w
  3407  0297  0023               	movlb	3	; select bank3
  3408  0298  00B5               	movwf	_pCDCSrc^(0+384)
  3409  0299  3002               	movlw	2
  3410  029A  00B6               	movwf	(_pCDCSrc+1)^(0+384)
  3411  029B  0870               	movf	putUSBUSART@length,w
  3412  029C  0022               	movlb	2	; select bank2
  3413  029D  00E9               	movwf	_cdc_tx_len^(0+256)
  3414  029E  0023               	movlb	3	; select bank3
  3415  029F  01BB               	clrf	_cdc_mem_type^(0+384)
  3416  02A0  0ABB               	incf	_cdc_mem_type^(0+384),f
  3417  02A1  0021               	movlb	1	; select bank1
  3418  02A2  01E7               	clrf	_cdc_trf_state^(0+128)
  3419  02A3  0AE7               	incf	_cdc_trf_state^(0+128),f
  3420  02A4  0008               	return
  3421  02A5                     __end_of_putUSBUSART:	
  3422  02A5                     __ptext31:	
  3423 ;; *************** function _SYSTEM_Initialize *****************
  3424 ;; Defined at:
  3425 ;;		line 87 in file "../src/pic16f1459/system.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  state           1    wreg     enum E2631
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  state           1    1[COMMON] enum E2631
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 17F/0
  3436 ;;		On exit  : 178/0
  3437 ;;		Unchanged: FFE80/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    2
  3446 ;; This function calls:
  3447 ;;		_LED_Enable
  3448 ;;		_BUTTON_Enable
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _SYSTEM_Initialize
  3456  02A5                     _SYSTEM_Initialize:	
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3460                           ;SYSTEM_Initialize@state stored from wreg
  3461  02A5  00F1               	movwf	SYSTEM_Initialize@state
  3462                           
  3463                           ; Switch size 1, requested type "speed"
  3464                           ; Number of cases is 3, Range of values is 0 to 2
  3465                           ; switch strategies available:
  3466                           ; Name         Instructions Cycles
  3467                           ; simple_byte           10     6 (average)
  3468                           ; direct_byte           12     6 (fixed)
  3469                           ; jumptable            260     6 (fixed)
  3470                           ; rangetable             7     4 (fixed)
  3471                           ; spacedrange           11     6 (fixed)
  3472                           ; locatedrange           3     3 (fixed)
  3473                           ;	Chosen strategy is simple_byte
  3474                           
  3475                           ;system.c: 99: break;
  3476                           
  3477                           ;system.c: 88: switch(state)
  3478  02A6  3A00               	xorlw	0	; case 0
  3479  02A7  1903               	skipnz
  3480  02A8  2AB0               	goto	l3104
  3481  02A9  3A01               	xorlw	1	; case 1
  3482  02AA  1903               	skipnz
  3483  02AB  2ABB               	goto	l148
  3484  02AC  3A03               	xorlw	3	; case 2
  3485  02AD  1903               	skipnz
  3486  02AE  2ABB               	goto	l148
  3487  02AF  2ABB               	goto	l148
  3488  02B0                     l3104:	
  3489                           
  3490                           ;system.c: 94: OSCCON = 0xFC;
  3491  02B0  30FC               	movlw	252
  3492  02B1  0021               	movlb	1	; select bank1
  3493  02B2  0099               	movwf	25	;volatile
  3494                           
  3495                           ;system.c: 95: ACTCON = 0x90;
  3496  02B3  3090               	movlw	144
  3497  02B4  0027               	movlb	7	; select bank7
  3498  02B5  009B               	movwf	27	;volatile
  3499                           
  3500                           ;system.c: 97: LED_Enable(LED_D1);
  3501  02B6  3001               	movlw	1
  3502  02B7  2770  3180         	fcall	_LED_Enable
  3503                           
  3504                           ;system.c: 98: BUTTON_Enable(BUTTON_S1);
  3505  02B9  3001               	movlw	1
  3506  02BA  2F7E               	ljmp	_BUTTON_Enable
  3507  02BB                     l148:	
  3508  02BB  0008               	return
  3509  02BC                     __end_of_SYSTEM_Initialize:	
  3510  02BC                     __ptext30:	
  3511 ;; *************** function _USBDeviceInit *****************
  3512 ;; Defined at:
  3513 ;;		line 301 in file "../framework/usb/usb_device.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  p               2    2[COMMON] PTR unsigned char 
  3518 ;;		 -> UEP1(1), 
  3519 ;;  i               1    4[COMMON] unsigned char 
  3520 ;;  i               1    5[COMMON] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 1F/1
  3528 ;;		Unchanged: FFFE0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;Total ram usage:        6 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;;		_USBDeviceTasks
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _USBDeviceInit
  3547  02BC                     _USBDeviceInit:	
  3548                           
  3549                           ;usb_device.c: 302: uint8_t i;
  3550                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3554  02BC  0021               	movlb	1	; select bank1
  3555  02BD  1112               	bcf	18,2	;volatile
  3556                           
  3557                           ;usb_device.c: 307: {UEIR = 0;};
  3558  02BE  003D               	movlb	29	; select bank29
  3559  02BF  0193               	clrf	19	;volatile
  3560                           
  3561                           ;usb_device.c: 310: {UIR = 0;};
  3562  02C0  0190               	clrf	16	;volatile
  3563                           
  3564                           ;usb_device.c: 313: UEP0 = 0;
  3565  02C1  0198               	clrf	24	;volatile
  3566                           
  3567                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  3568  02C2  300E               	movlw	14
  3569  02C3  00F3               	movwf	USBDeviceInit@p+1
  3570  02C4  3099               	movlw	153
  3571  02C5  00F2               	movwf	USBDeviceInit@p
  3572  02C6  01F4               	clrf	USBDeviceInit@i_1507
  3573  02C7                     l4480:	
  3574  02C7  0872               	movf	USBDeviceInit@p,w
  3575  02C8  0086               	movwf	6
  3576  02C9  0873               	movf	USBDeviceInit@p+1,w
  3577  02CA  0087               	movwf	7
  3578  02CB  0181               	clrf	1
  3579  02CC  0AF2               	incf	USBDeviceInit@p,f
  3580  02CD  1903               	skipnz
  3581  02CE  0AF3               	incf	USBDeviceInit@p+1,f
  3582  02CF  3002               	movlw	2
  3583  02D0  0AF4               	incf	USBDeviceInit@i_1507,f
  3584  02D1  0274               	subwf	USBDeviceInit@i_1507,w
  3585  02D2  1C03               	skipc
  3586  02D3  2AC7               	goto	l4480
  3587                           
  3588                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3589  02D4  3016               	movlw	22
  3590  02D5  003D               	movlb	29	; select bank29
  3591  02D6  0091               	movwf	17	;volatile
  3592  02D7  309F               	movlw	159
  3593  02D8  0097               	movwf	23	;volatile
  3594  02D9  307B               	movlw	123
  3595  02DA  0092               	movwf	18	;volatile
  3596                           
  3597                           ;usb_device.c: 320: ;
  3598                           ;usb_device.c: 323: ;
  3599                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3600  02DB  01F5               	clrf	USBDeviceInit@i
  3601  02DC                     l4496:	
  3602                           
  3603                           ;usb_device.c: 327: {
  3604                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  3605  02DC  0875               	movf	USBDeviceInit@i,w
  3606  02DD  0709               	addwf	9,w
  3607  02DE  0709               	addwf	9,w
  3608  02DF  3E20               	addlw	32
  3609  02E0  0086               	movwf	6
  3610  02E1  3000               	movlw	0
  3611  02E2  0187               	clrf	7
  3612  02E3  3FC0               	movwi [0]fsr1
  3613  02E4  3FC1               	movwi [1]fsr1
  3614  02E5  3FC2               	movwi [2]fsr1
  3615  02E6  3FC3               	movwi [3]fsr1
  3616  02E7  300C               	movlw	12
  3617  02E8  0AF5               	incf	USBDeviceInit@i,f
  3618  02E9  0275               	subwf	USBDeviceInit@i,w
  3619  02EA  1C03               	skipc
  3620  02EB  2ADC               	goto	l4496
  3621                           
  3622                           ;usb_device.c: 329: }
  3623                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  3624  02EC  003D               	movlb	29	; select bank29
  3625  02ED  170E               	bsf	14,6	;volatile
  3626                           
  3627                           ;usb_device.c: 335: UADDR = 0x00;
  3628  02EE  0196               	clrf	22	;volatile
  3629                           
  3630                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  3631  02EF  120E               	bcf	14,4	;volatile
  3632                           
  3633                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  3634  02F0  130E               	bcf	14,6	;volatile
  3635  02F1                     l4508:	
  3636                           
  3637                           ;usb_device.c: 345: {
  3638                           ;usb_device.c: 346: (UIR &= 0xF7);
  3639  02F1  1190               	bcf	16,3	;volatile
  3640                           
  3641                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  3642  02F2  0021               	movlb	1	; select bank1
  3643  02F3  01EC               	clrf	(_inPipes^(0+128)+2)
  3644                           
  3645                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  3646  02F4  0023               	movlb	3	; select bank3
  3647  02F5  01A2               	clrf	(_outPipes^(0+384)+2)
  3648                           
  3649                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  3650  02F6  01A3               	clrf	(_outPipes^(0+384)+3)
  3651  02F7  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  3652                           
  3653                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  3654  02F8  003D               	movlb	29	; select bank29
  3655  02F9  1990               	btfsc	16,3	;volatile
  3656  02FA  2AF1               	goto	l4508
  3657                           
  3658                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  3659  02FB  3001               	movlw	1
  3660  02FC  0022               	movlb	2	; select bank2
  3661  02FD  00E5               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3662                           
  3663                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  3664  02FE  00E6               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3665                           
  3666                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  3667  02FF  01E3               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3668                           
  3669                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  3670  0300  01E4               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3671                           
  3672                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  3673  0301  0023               	movlb	3	; select bank3
  3674  0302  01B9               	clrf	_USBBusIsSuspended^(0+384)
  3675                           
  3676                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(2+1u); i++)
  3677  0303  01F5               	clrf	USBDeviceInit@i
  3678  0304                     l4524:	
  3679                           
  3680                           ;usb_device.c: 365: {
  3681                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  3682  0304  0875               	movf	USBDeviceInit@i,w
  3683  0305  3EE0               	addlw	_pBDTEntryIn& (0+255)
  3684  0306  0086               	movwf	6
  3685  0307  0187               	clrf	7
  3686  0308  0181               	clrf	1
  3687                           
  3688                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  3689  0309  0875               	movf	USBDeviceInit@i,w
  3690  030A  3EAC               	addlw	_pBDTEntryOut& (0+255)
  3691  030B  0086               	movwf	6
  3692  030C  3001               	movlw	1	; select bank3/4
  3693  030D  0087               	movwf	7
  3694  030E  0181               	clrf	1
  3695                           
  3696                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  3697  030F  0875               	movf	USBDeviceInit@i,w
  3698  0310  3EA6               	addlw	_ep_data_in& (0+255)
  3699  0311  0086               	movwf	6
  3700  0312  0181               	clrf	1
  3701                           
  3702                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  3703  0313  0875               	movf	USBDeviceInit@i,w
  3704  0314  3EA9               	addlw	_ep_data_out& (0+255)
  3705  0315  0086               	movwf	6
  3706  0316  3003               	movlw	3
  3707  0317  0181               	clrf	1
  3708  0318  0AF5               	incf	USBDeviceInit@i,f
  3709  0319  0275               	subwf	USBDeviceInit@i,w
  3710  031A  1C03               	skipc
  3711  031B  2B04               	goto	l4524
  3712                           
  3713                           ;usb_device.c: 370: }
  3714                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3715  031C  3028               	movlw	40
  3716  031D  0021               	movlb	1	; select bank1
  3717  031E  00E0               	movwf	_pBDTEntryIn^(0+128)
  3718                           
  3719                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  3720  031F  3016               	movlw	22
  3721  0320  003D               	movlb	29	; select bank29
  3722  0321  0098               	movwf	24	;volatile
  3723                           
  3724                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3725  0322  3050               	movlw	80
  3726  0323  00F0               	movwf	??_USBDeviceInit
  3727  0324  01F1               	clrf	??_USBDeviceInit+1
  3728  0325  0020               	movlb	0	; select bank0
  3729  0326  00A2               	movwf	34	;volatile
  3730  0327  0871               	movf	??_USBDeviceInit+1,w
  3731  0328  00A3               	movwf	35	;volatile
  3732                           
  3733                           ;usb_device.c: 378: BDT[0].CNT = 8;
  3734  0329  3008               	movlw	8
  3735  032A  00A1               	movwf	33	;volatile
  3736                           
  3737                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  3738  032B  3004               	movlw	4
  3739  032C  00A0               	movwf	32	;volatile
  3740                           
  3741                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  3742  032D  17A0               	bsf	32,7	;volatile
  3743                           
  3744                           ;usb_device.c: 385: USB1msTickCount = 0;
  3745  032E  0022               	movlb	2	; select bank2
  3746  032F  01EF               	clrf	_USBActiveConfiguration^(0+256)
  3747                           
  3748                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  3749  0330  0023               	movlb	3	; select bank3
  3750  0331  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  3751                           
  3752                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  3753  0332  0021               	movlb	1	; select bank1
  3754  0333  01E5               	clrf	_USBDeviceState^(0+128)
  3755  0334  0008               	return
  3756  0335                     __end_of_USBDeviceInit:	
  3757  0335                     __ptext1:	
  3758 ;; *************** function _USBDeviceTasks *****************
  3759 ;; Defined at:
  3760 ;;		line 497 in file "../framework/usb/usb_device.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  i               1    0[BANK3 ] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/1
  3771 ;;		On exit  : 1F/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Totals:         0       1       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3778 ;;Total ram usage:        2 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:   10
  3781 ;; This function calls:
  3782 ;;		_USBDeviceInit
  3783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3784 ;;		_USBWakeFromSuspend
  3785 ;;		_USBSuspend
  3786 ;;		_USBIncrement1msInternalTimers
  3787 ;;		_USBCtrlEPAllowStatusStage
  3788 ;;		_USBStallHandler
  3789 ;;		_USBCtrlEPService
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function _USBDeviceTasks
  3797  0335                     _USBDeviceTasks:	
  3798                           
  3799                           ;usb_device.c: 563: }
  3800                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  3801                           
  3802                           ;usb_device.c: 498: uint8_t i;
  3803                           ;usb_device.c: 524: if (1 != 1)
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _USBDeviceTasks: [allreg]
  3807  0335  0021               	movlb	1	; select bank1
  3808  0336  08E5               	movf	_USBDeviceState^(0+128),f
  3809  0337  1D03               	skipz
  3810  0338  2B49               	goto	l4560
  3811                           
  3812                           ;usb_device.c: 586: {
  3813                           ;usb_device.c: 588: UCON = 0;
  3814  0339  003D               	movlb	29	; select bank29
  3815  033A  018E               	clrf	14	;volatile
  3816                           
  3817                           ;usb_device.c: 591: UIE = 0;
  3818  033B  0192               	clrf	18	;volatile
  3819                           
  3820                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3821  033C  3016               	movlw	22
  3822  033D  0091               	movwf	17	;volatile
  3823  033E  309F               	movlw	159
  3824  033F  0097               	movwf	23	;volatile
  3825  0340  307B               	movlw	123
  3826  0341  0092               	movwf	18	;volatile
  3827  0342                     l504:	
  3828                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3829                           
  3830  0342  198E               	btfsc	14,3	;volatile
  3831  0343  2B46               	goto	l506
  3832  0344  158E               	bsf	14,3	;volatile
  3833  0345  2B42               	goto	l504
  3834  0346                     l506:	
  3835                           
  3836                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  3837  0346  0021               	movlb	1	; select bank1
  3838  0347  01E5               	clrf	_USBDeviceState^(0+128)
  3839  0348  0AE5               	incf	_USBDeviceState^(0+128),f
  3840  0349                     l4560:	
  3841                           
  3842                           ;usb_device.c: 606: }
  3843                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  3844  0349  0365               	decf	_USBDeviceState^(0+128),w
  3845  034A  1D03               	skipz
  3846  034B  2B56               	goto	l4572
  3847                           
  3848                           ;usb_device.c: 610: {
  3849                           ;usb_device.c: 620: if(!UCONbits.SE0)
  3850  034C  003D               	movlb	29	; select bank29
  3851  034D  1A8E               	btfsc	14,5	;volatile
  3852  034E  2B56               	goto	l4572
  3853                           
  3854                           ;usb_device.c: 621: {
  3855                           ;usb_device.c: 627: {UIR = 0;};
  3856  034F  0190               	clrf	16	;volatile
  3857                           
  3858                           ;usb_device.c: 631: UIE=0;
  3859  0350  0192               	clrf	18	;volatile
  3860                           
  3861                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  3862  0351  1412               	bsf	18,0	;volatile
  3863                           
  3864                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  3865  0352  1612               	bsf	18,4	;volatile
  3866                           
  3867                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  3868  0353  3002               	movlw	2
  3869  0354  0021               	movlb	1	; select bank1
  3870  0355  00E5               	movwf	_USBDeviceState^(0+128)
  3871  0356                     l4572:	
  3872                           
  3873                           ;usb_device.c: 636: }
  3874                           ;usb_device.c: 637: }
  3875                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3876  0356  003D               	movlb	29	; select bank29
  3877  0357  1910               	btfsc	16,2	;volatile
  3878  0358  1D12               	btfss	18,2	;volatile
  3879  0359  2B5D               	goto	l4580
  3880                           
  3881                           ;usb_device.c: 654: {
  3882                           ;usb_device.c: 655: (UIR &= 0xFB);
  3883  035A  1110               	bcf	16,2	;volatile
  3884                           
  3885                           ;usb_device.c: 659: USBWakeFromSuspend();
  3886  035B  23F7  3180         	fcall	_USBWakeFromSuspend
  3887  035D                     l4580:	
  3888                           
  3889                           ;usb_device.c: 661: }
  3890                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  3891  035D  003D               	movlb	29	; select bank29
  3892  035E  1C8E               	btfss	14,1	;volatile
  3893  035F  2B63               	goto	l510
  3894  0360                     l4582:	
  3895                           
  3896                           ;usb_device.c: 667: {
  3897                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  3898  0360  0020               	movlb	0	; select bank0
  3899  0361  1112               	bcf	18,2	;volatile
  3900                           
  3901                           ;usb_device.c: 669: return;
  3902  0362  0008               	return
  3903  0363                     l510:	
  3904                           
  3905                           ;usb_device.c: 670: }
  3906                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3907  0363  1810               	btfsc	16,0	;volatile
  3908  0364  1C12               	btfss	18,0	;volatile
  3909  0365  2B6C               	goto	l4592
  3910                           
  3911                           ;usb_device.c: 683: {
  3912                           ;usb_device.c: 684: USBDeviceInit();
  3913  0366  22BC  3180         	fcall	_USBDeviceInit
  3914                           
  3915                           ;usb_device.c: 688: ;
  3916                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  3917  0368  3004               	movlw	4
  3918  0369  00E5               	movwf	_USBDeviceState^(0+128)
  3919                           
  3920                           ;usb_device.c: 700: (UIR &= 0xFE);
  3921  036A  003D               	movlb	29	; select bank29
  3922  036B  1010               	bcf	16,0	;volatile
  3923  036C                     l4592:	
  3924                           
  3925                           ;usb_device.c: 701: }
  3926                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3927  036C  1A10               	btfsc	16,4	;volatile
  3928  036D  1E12               	btfss	18,4	;volatile
  3929  036E  2B71               	goto	l4598
  3930                           
  3931                           ;usb_device.c: 707: {
  3932                           ;usb_device.c: 713: USBSuspend();
  3933  036F  23E7  3180         	fcall	_USBSuspend
  3934  0371                     l4598:	
  3935                           
  3936                           ;usb_device.c: 715: }
  3937                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  3938  0371  003D               	movlb	29	; select bank29
  3939  0372  1F10               	btfss	16,6	;volatile
  3940  0373  2B8F               	goto	l4614
  3941                           
  3942                           ;usb_device.c: 728: {
  3943                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  3944  0374  1F12               	btfss	18,6	;volatile
  3945  0375  2B82               	goto	l4604
  3946                           
  3947                           ;usb_device.c: 731: {
  3948                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3949  0376  3073               	movlw	115
  3950  0377  0020               	movlb	0	; select bank0
  3951  0378  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  3952  0379  3000               	movlw	0
  3953  037A  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  3954  037B  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  3955  037C  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  3956  037D  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  3957  037E  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,f
  3958  037F  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  3959  0380  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3960  0382                     l4604:	
  3961                           
  3962                           ;usb_device.c: 733: }
  3963                           ;usb_device.c: 734: (UIR &= 0xBF);
  3964  0382  003D               	movlb	29	; select bank29
  3965  0383  1310               	bcf	16,6	;volatile
  3966                           
  3967                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  3968  0384  26AD  3180         	fcall	_USBIncrement1msInternalTimers
  3969                           
  3970                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  3971  0386  0022               	movlb	2	; select bank2
  3972  0387  0867               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3973  0388  1D03               	skipz
  3974                           
  3975                           ;usb_device.c: 755: {
  3976                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  3977  0389  03E7               	decf	_USBStatusStageTimeoutCounter^(0+256),f
  3978                           
  3979                           ;usb_device.c: 757: }
  3980                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  3981  038A  08E7               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  3982  038B  1D03               	skipz
  3983  038C  2B8F               	goto	l4614
  3984                           
  3985                           ;usb_device.c: 764: {
  3986                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  3987  038D  26D2  3180         	fcall	_USBCtrlEPAllowStatusStage
  3988  038F                     l4614:	
  3989                           
  3990                           ;usb_device.c: 766: }
  3991                           ;usb_device.c: 768: }
  3992                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3993  038F  003D               	movlb	29	; select bank29
  3994  0390  1A90               	btfsc	16,5	;volatile
  3995  0391  1E92               	btfss	18,5	;volatile
  3996  0392  2B95               	goto	l4620
  3997                           
  3998                           ;usb_device.c: 771: {
  3999                           ;usb_device.c: 772: USBStallHandler();
  4000  0393  26B5  3180         	fcall	_USBStallHandler
  4001  0395                     l4620:	
  4002                           
  4003                           ;usb_device.c: 773: }
  4004                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4005  0395  1890               	btfsc	16,1	;volatile
  4006  0396  1C92               	btfss	18,1	;volatile
  4007  0397  2BA6               	goto	l4628
  4008                           
  4009                           ;usb_device.c: 776: {
  4010                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4011  0398  30FF               	movlw	255
  4012  0399  0020               	movlb	0	; select bank0
  4013  039A  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4014  039B  307F               	movlw	127
  4015  039C  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4016  039D  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4017  039E  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4018  039F  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4019  03A0  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,f
  4020  03A1  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4021  03A2  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4022                           
  4023                           ;usb_device.c: 778: {UEIR = 0;};
  4024  03A4  003D               	movlb	29	; select bank29
  4025  03A5  0193               	clrf	19	;volatile
  4026  03A6                     l4628:	
  4027                           
  4028                           ;usb_device.c: 786: }
  4029                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  4030  03A6  3004               	movlw	4
  4031  03A7  0021               	movlb	1	; select bank1
  4032  03A8  0265               	subwf	_USBDeviceState^(0+128),w
  4033  03A9  1C03               	btfss	3,0
  4034  03AA  2B60               	goto	l4582
  4035                           
  4036                           ;usb_device.c: 797: }
  4037                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  4038  03AB  003D               	movlb	29	; select bank29
  4039  03AC  1D92               	btfss	18,3	;volatile
  4040  03AD  2B60               	goto	l4582
  4041                           
  4042                           ;usb_device.c: 803: {
  4043                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  4044  03AE  0023               	movlb	3	; select bank3
  4045  03AF  01E1               	clrf	USBDeviceTasks@i^(0+384)
  4046  03B0                     l521:	
  4047                           
  4048                           ;usb_device.c: 805: {
  4049                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  4050  03B0  003D               	movlb	29	; select bank29
  4051  03B1  1D90               	btfss	16,3	;volatile
  4052  03B2  2B60               	goto	l4582
  4053                           
  4054                           ;usb_device.c: 807: {
  4055                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  4056  03B3  080F               	movf	15,w	;volatile
  4057  03B4  0021               	movlb	1	; select bank1
  4058  03B5  00EF               	movwf	_USTATcopy^(0+128)
  4059                           
  4060                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  4061  03B6  0C6F               	rrf	_USTATcopy^(0+128),w
  4062  03B7  0020               	movlb	0	; select bank0
  4063  03B8  00ED               	movwf	??_USBDeviceTasks
  4064  03B9  0CED               	rrf	??_USBDeviceTasks,f
  4065  03BA  0C6D               	rrf	??_USBDeviceTasks,w
  4066  03BB  390F               	andlw	15
  4067  03BC  0022               	movlb	2	; select bank2
  4068  03BD  00EA               	movwf	_endpoint_number^(0+256)
  4069                           
  4070                           ;usb_device.c: 812: (UIR &= 0xF7);
  4071  03BE  003D               	movlb	29	; select bank29
  4072  03BF  1190               	bcf	16,3	;volatile
  4073                           
  4074                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  4075  03C0  0021               	movlb	1	; select bank1
  4076  03C1  196F               	btfsc	_USTATcopy^(0+128),2
  4077  03C2  2BC7               	goto	l4648
  4078                           
  4079                           ;usb_device.c: 818: {
  4080                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4081  03C3  0022               	movlb	2	; select bank2
  4082  03C4  086A               	movf	_endpoint_number^(0+256),w
  4083  03C5  3EA9               	addlw	_ep_data_out& (0+255)
  4084  03C6  2BCA               	goto	L1
  4085  03C7                     l4648:	
  4086                           ;usb_device.c: 820: }
  4087                           
  4088                           
  4089                           ;usb_device.c: 821: else
  4090                           ;usb_device.c: 822: {
  4091                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4092  03C7  0022               	movlb	2	; select bank2
  4093  03C8  086A               	movf	_endpoint_number^(0+256),w
  4094  03C9  3EA6               	addlw	_ep_data_in& (0+255)
  4095  03CA                     L1:	
  4096  03CA  0086               	movwf	6
  4097  03CB  3001               	movlw	1	; select bank3/4
  4098  03CC  0087               	movwf	7
  4099  03CD  0681               	xorwf	1,f
  4100                           
  4101                           ;usb_device.c: 824: }
  4102                           ;usb_device.c: 829: if(endpoint_number == 0)
  4103  03CE  08EA               	movf	_endpoint_number^(0+256),f
  4104  03CF  1D03               	skipz
  4105  03D0  2BD4               	goto	l4654
  4106                           
  4107                           ;usb_device.c: 830: {
  4108                           ;usb_device.c: 831: USBCtrlEPService();
  4109  03D1  271F  3180         	fcall	_USBCtrlEPService
  4110                           
  4111                           ;usb_device.c: 832: }
  4112  03D3  2BE0               	goto	l4656
  4113  03D4                     l4654:	
  4114                           
  4115                           ;usb_device.c: 833: else
  4116                           ;usb_device.c: 834: {
  4117                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4118  03D4  3072               	movlw	114
  4119  03D5  0020               	movlb	0	; select bank0
  4120  03D6  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4121  03D7  30EF               	movlw	low _USTATcopy
  4122  03D8  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4123  03D9  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4124  03DA  3000               	movlw	high _USTATcopy
  4125  03DB  00E3               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4126  03DC  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4127  03DD  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4128  03DE  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4129  03E0                     l4656:	
  4130  03E0  0023               	movlb	3	; select bank3
  4131  03E1  3004               	movlw	4
  4132  03E2  0AE1               	incf	USBDeviceTasks@i^(0+384),f
  4133  03E3  0261               	subwf	USBDeviceTasks@i^(0+384),w
  4134  03E4  1803               	btfsc	3,0
  4135  03E5  2B60               	goto	l4582
  4136  03E6  2BB0               	goto	l521
  4137  03E7                     __end_of_USBDeviceTasks:	
  4138  03E7                     __ptext19:	
  4139 ;; *************** function _USBSuspend *****************
  4140 ;; Defined at:
  4141 ;;		line 2265 in file "../framework/usb/usb_device.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 1F/1D
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: FFFE0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    6
  4162 ;; This function calls:
  4163 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4164 ;; This function is called by:
  4165 ;;		_USBDeviceTasks
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _USBSuspend
  4171  03E7                     _USBSuspend:	
  4172                           
  4173                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  4174                           
  4175                           ;incstack = 0
  4176                           ; Regs used in _USBSuspend: [allreg]
  4177  03E7  1512               	bsf	18,2	;volatile
  4178                           
  4179                           ;usb_device.c: 2290: (UIR &= 0xEF);
  4180  03E8  1210               	bcf	16,4	;volatile
  4181                           
  4182                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  4183  03E9  148E               	bsf	14,1	;volatile
  4184                           
  4185                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  4186  03EA  0023               	movlb	3	; select bank3
  4187  03EB  3075               	movlw	117
  4188  03EC  01B9               	clrf	_USBBusIsSuspended^(0+384)
  4189  03ED  0AB9               	incf	_USBBusIsSuspended^(0+384),f
  4190                           
  4191                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  4192  03EE  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  4193                           
  4194                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4195  03EF  0020               	movlb	0	; select bank0
  4196  03F0  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4197  03F1  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4198  03F2  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4199  03F3  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4200  03F4  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4201  03F5  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4202  03F6  2D58               	ljmp	l4660
  4203  03F7                     __end_of_USBSuspend:	
  4204  03F7                     __ptext20:	
  4205 ;; *************** function _USBWakeFromSuspend *****************
  4206 ;; Defined at:
  4207 ;;		line 2323 in file "../framework/usb/usb_device.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;		None               void
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 1F/1D
  4218 ;;		On exit  : 1F/3
  4219 ;;		Unchanged: FFFE0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    6
  4228 ;; This function calls:
  4229 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4230 ;; This function is called by:
  4231 ;;		_USBDeviceTasks
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _USBWakeFromSuspend
  4237  03F7                     _USBWakeFromSuspend:	
  4238                           
  4239                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _USBWakeFromSuspend: [allreg]
  4243  03F7  0023               	movlb	3	; select bank3
  4244  03F8  3074               	movlw	116
  4245  03F9  01B9               	clrf	_USBBusIsSuspended^(0+384)
  4246                           
  4247                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4248  03FA  0020               	movlb	0	; select bank0
  4249  03FB  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4250  03FC  3000               	movlw	0
  4251  03FD  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4252  03FE  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4253  03FF  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4254  0400  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4255  0401  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4256  0402  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4257                           
  4258                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  4259  0404  003D               	movlb	29	; select bank29
  4260  0405  108E               	bcf	14,1	;volatile
  4261                           
  4262                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  4263  0406  1112               	bcf	18,2	;volatile
  4264  0407                     l658:	
  4265                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  4266                           
  4267  0407  1D10               	btfss	16,2	;volatile
  4268  0408  2C0B               	goto	l4746
  4269                           
  4270                           ;usb_device.c: 2362: {
  4271                           ;usb_device.c: 2363: (UIR &= 0xFB);
  4272  0409  1110               	bcf	16,2	;volatile
  4273  040A  2C07               	goto	l658
  4274  040B                     l4746:	
  4275                           
  4276                           ;usb_device.c: 2364: }
  4277                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  4278  040B  0023               	movlb	3	; select bank3
  4279  040C  01BA               	clrf	_USBTicksSinceSuspendEnd^(0+384)
  4280  040D  0008               	return
  4281  040E                     __end_of_USBWakeFromSuspend:	
  4282  040E                     __ptext6:	
  4283 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4284 ;; Defined at:
  4285 ;;		line 2492 in file "../framework/usb/usb_device.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 1F/0
  4296 ;;		On exit  : 1C/0
  4297 ;;		Unchanged: FFFE0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    8
  4306 ;; This function calls:
  4307 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4308 ;;		_USBCtrlEPServiceComplete
  4309 ;;		_USBCheckStdRequest
  4310 ;; This function is called by:
  4311 ;;		_USBCtrlEPService
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _USBCtrlTrfSetupHandler
  4317  040E                     _USBCtrlTrfSetupHandler:	
  4318  040E                     l5162:	
  4319                           ;incstack = 0
  4320                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  4321                           
  4322                           
  4323                           ;usb_device.c: 2496: shortPacketStatus = 0;
  4324  040E  0022               	movlb	2	; select bank2
  4325  040F  01EC               	clrf	_shortPacketStatus^(0+256)
  4326                           
  4327                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  4328  0410  0021               	movlb	1	; select bank1
  4329  0411  01E4               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  4330                           
  4331                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  4332  0412  0022               	movlb	2	; select bank2
  4333  0413  01E3               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4334                           
  4335                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  4336  0414  01E4               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4337                           
  4338                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  4339  0415  0023               	movlb	3	; select bank3
  4340  0416  01B7               	clrf	_BothEP0OutUOWNsSet^(0+384)
  4341                           
  4342                           ;usb_device.c: 2501: controlTransferState = 0;
  4343  0417  0021               	movlb	1	; select bank1
  4344  0418  01E8               	clrf	_controlTransferState^(0+128)
  4345                           
  4346                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4347  0419  0860               	movf	_pBDTEntryIn^(0+128),w
  4348  041A  0086               	movwf	6
  4349  041B  3004               	movlw	4
  4350  041C  0187               	clrf	7
  4351  041D  1381               	bcf	1,7
  4352                           
  4353                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4354  041E  06E0               	xorwf	_pBDTEntryIn^(0+128),f
  4355                           
  4356                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4357  041F  0860               	movf	_pBDTEntryIn^(0+128),w
  4358  0420  0086               	movwf	6
  4359  0421  3004               	movlw	4
  4360  0422  1381               	bcf	1,7
  4361                           
  4362                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4363  0423  06E0               	xorwf	_pBDTEntryIn^(0+128),f
  4364                           
  4365                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4366  0424  0020               	movlb	0	; select bank0
  4367  0425  086F               	movf	_pBDTEntryEP0OutNext,w
  4368  0426  0086               	movwf	6
  4369  0427  1381               	bcf	1,7
  4370                           
  4371                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  4372  0428  0021               	movlb	1	; select bank1
  4373  0429  01EC               	clrf	(_inPipes^(0+128)+2)
  4374                           
  4375                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  4376  042A  01ED               	clrf	(_inPipes^(0+128)+3)
  4377  042B  01EE               	clrf	((_inPipes+1)^(0+128)+3)
  4378                           
  4379                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  4380  042C  0023               	movlb	3	; select bank3
  4381  042D  01A2               	clrf	(_outPipes^(0+384)+2)
  4382                           
  4383                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  4384  042E  01A3               	clrf	(_outPipes^(0+384)+3)
  4385  042F  01A4               	clrf	((_outPipes+1)^(0+384)+3)
  4386                           
  4387                           ;usb_device.c: 2525: USBCheckStdRequest();
  4388  0430  243E  3180         	fcall	_USBCheckStdRequest
  4389                           
  4390                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4391  0432  3003               	movlw	3
  4392  0433  0020               	movlb	0	; select bank0
  4393  0434  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4394  0435  3000               	movlw	0
  4395  0436  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4396  0437  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4397  0438  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4398  0439  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4399  043A  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4400  043B  2558               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4401                           
  4402                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  4403  043C  318F  2F03         	ljmp	l4958
  4404  043E                     __end_of_USBCtrlTrfSetupHandler:	
  4405  043E                     __ptext7:	
  4406 ;; *************** function _USBCheckStdRequest *****************
  4407 ;; Defined at:
  4408 ;;		line 2712 in file "../framework/usb/usb_device.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;		None               void
  4415 ;; Registers used:
  4416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 1F/3
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: FFFE0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    7
  4429 ;; This function calls:
  4430 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4431 ;;		_USBStdSetCfgHandler
  4432 ;;		_USBStdGetDscHandler
  4433 ;;		_USBStdGetStatusHandler
  4434 ;;		_USBStdFeatureReqHandler
  4435 ;; This function is called by:
  4436 ;;		_USBCtrlTrfSetupHandler
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _USBCheckStdRequest
  4442  043E                     _USBCheckStdRequest:	
  4443                           
  4444                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  4445                           
  4446                           ;incstack = 0
  4447                           ; Regs used in _USBCheckStdRequest: [allreg]
  4448  043E  0020               	movlb	0	; select bank0
  4449  043F  0E50               	swapf	80,w	;volatile
  4450  0440  0C89               	rrf	9,f
  4451  0441  3903               	andlw	3
  4452  0442  1D03               	btfss	3,2
  4453  0443  0008               	return
  4454                           
  4455                           ;usb_device.c: 2753: break;
  4456  0444  0851               	movf	81,w	;volatile
  4457                           
  4458                           ; Switch size 1, requested type "speed"
  4459                           ; Number of cases is 11, Range of values is 0 to 12
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; direct_byte           32     6 (fixed)
  4463                           ; simple_byte           34    18 (average)
  4464                           ; jumptable            260     6 (fixed)
  4465                           ; rangetable            17     4 (fixed)
  4466                           ; spacedrange           31     6 (fixed)
  4467                           ; locatedrange          13     3 (fixed)
  4468                           ;	Chosen strategy is direct_byte
  4469  0445  0084               	movwf	4
  4470  0446  300D               	movlw	13
  4471  0447  0204               	subwf	4,w
  4472  0448  1803               	skipnc
  4473  0449  0008               	return
  4474  044A  3187               	movlp	high S5488
  4475  044B  3504               	lslf	4,w
  4476  044C  3EE4               	addlw	low S5488
  4477  044D  0082               	movwf	2
  4478  044E                     l699:	
  4479  044E  0008               	return
  4480  044F                     l701:	
  4481                           ;usb_device.c: 2716: {
  4482                           ;usb_device.c: 2717: case 5:
  4483                           
  4484                           
  4485                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  4486  044F  0021               	movlb	1	; select bank1
  4487  0450  3008               	movlw	8
  4488  0451  17EC               	bsf	(_inPipes^(0+128)+2),7
  4489                           
  4490                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  4491  0452  00E5               	movwf	_USBDeviceState^(0+128)
  4492                           
  4493                           ;usb_device.c: 2721: break;
  4494  0453  0008               	return
  4495  0454                     l5242:	
  4496                           
  4497                           ;usb_device.c: 2723: USBStdGetDscHandler();
  4498  0454  318A  2ADF         	ljmp	l5102
  4499  0456                     l5244:	
  4500                           ;usb_device.c: 2724: break;
  4501                           
  4502                           
  4503                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  4504  0456  318A  2A67         	ljmp	l5042
  4505  0458                     l5246:	
  4506                           ;usb_device.c: 2727: break;
  4507                           
  4508                           
  4509                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4510  0458  306F               	movlw	low _USBActiveConfiguration
  4511  0459  0021               	movlb	1	; select bank1
  4512  045A  00EA               	movwf	_inPipes^(0+128)
  4513  045B  3001               	movlw	high _USBActiveConfiguration
  4514  045C                     L4:	
  4515  045C  00EB               	movwf	(_inPipes+1)^(0+128)
  4516                           
  4517                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4518  045D  146C               	bsf	(_inPipes^(0+128)+2),0
  4519                           
  4520                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  4521  045E  01ED               	clrf	(_inPipes^(0+128)+3)
  4522  045F  0AED               	incf	(_inPipes^(0+128)+3),f
  4523                           
  4524                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  4525  0460  17EC               	bsf	(_inPipes^(0+128)+2),7
  4526                           
  4527                           ;usb_device.c: 2733: break;
  4528  0461  0008               	return
  4529  0462                     l5254:	
  4530                           
  4531                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  4532  0462  318B  2BD0         	ljmp	l5132
  4533  0464                     l5256:	
  4534                           ;usb_device.c: 2736: break;
  4535                           
  4536                           
  4537                           ;usb_device.c: 2738: case 3:
  4538                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  4539  0464  2C7E               	ljmp	l5280
  4540  0465                     l5258:	
  4541                           ;usb_device.c: 2740: break;
  4542                           
  4543                           
  4544                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4545  0465  0854               	movf	84,w	;volatile
  4546  0466  3ECD               	addlw	_USBAlternateInterface& (0+255)
  4547  0467  0021               	movlb	1	; select bank1
  4548  0468  00EA               	movwf	_inPipes^(0+128)
  4549  0469  3001               	movlw	1
  4550  046A  2C5C               	goto	L4
  4551  046B                     l710:	
  4552                           ;usb_device.c: 2747: case 11:
  4553                           
  4554                           
  4555                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  4556  046B  0021               	movlb	1	; select bank1
  4557  046C  17EC               	bsf	(_inPipes^(0+128)+2),7
  4558                           
  4559                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4560  046D  0020               	movlb	0	; select bank0
  4561  046E  0854               	movf	84,w	;volatile
  4562  046F  3ECD               	addlw	_USBAlternateInterface& (0+255)
  4563  0470  0086               	movwf	6
  4564  0471  3001               	movlw	1	; select bank3/4
  4565  0472  0087               	movwf	7
  4566  0473  0852               	movf	82,w	;volatile
  4567  0474  0081               	movwf	1
  4568                           
  4569                           ;usb_device.c: 2750: break;
  4570  0475  0008               	return
  4571  0476                     l5268:	
  4572                           
  4573                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4574  0476  3002               	movlw	2
  4575  0477  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4576  0478  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4577  0479  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4578  047A  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4579  047B  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4580  047C  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4581  047D  2D58               	ljmp	l4660
  4582  047E                     __end_of_USBCheckStdRequest:	
  4583  047E                     __ptext8:	
  4584 ;; *************** function _USBStdFeatureReqHandler *****************
  4585 ;; Defined at:
  4586 ;;		line 2780 in file "../framework/usb/usb_device.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  pUEP            2    6[BANK0 ] PTR unsigned char 
  4591 ;;		 -> UEP0(1), 
  4592 ;;  p               1    9[BANK0 ] PTR struct __BDT
  4593 ;;		 -> NULL(0), BDT(48), 
  4594 ;;  current_ep_d    1    8[BANK0 ] struct .
  4595 ;; Return value:  Size  Location     Type
  4596 ;;		None               void
  4597 ;; Registers used:
  4598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 1C/0
  4601 ;;		On exit  : 1E/0
  4602 ;;		Unchanged: FFFE0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;Total ram usage:        6 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    6
  4611 ;; This function calls:
  4612 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4613 ;; This function is called by:
  4614 ;;		_USBCheckStdRequest
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _USBStdFeatureReqHandler
  4620  047E                     _USBStdFeatureReqHandler:	
  4621  047E                     l5280:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  4624                           
  4625                           
  4626                           ;usb_device.c: 2781: BDT_ENTRY *p;
  4627                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  4628                           ;usb_device.c: 2786: unsigned char* pUEP;
  4629                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  4630                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  4631  047E  0020               	movlb	0	; select bank0
  4632  047F  0B52               	decfsz	82,w	;volatile
  4633  0480  2C92               	goto	l5292
  4634  0481  0850               	movf	80,w	;volatile
  4635  0482  391F               	andlw	31
  4636  0483  1D03               	skipz
  4637  0484  2C92               	goto	l5292
  4638                           
  4639                           ;usb_device.c: 2826: {
  4640                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  4641  0485  0021               	movlb	1	; select bank1
  4642  0486  17EC               	bsf	(_inPipes^(0+128)+2),7
  4643                           
  4644                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  4645  0487  0020               	movlb	0	; select bank0
  4646  0488  0851               	movf	81,w	;volatile
  4647  0489  3A03               	xorlw	3
  4648  048A  1D03               	skipz
  4649  048B  2C90               	goto	l5290
  4650                           
  4651                           ;usb_device.c: 2829: RemoteWakeup = 1;
  4652  048C  0023               	movlb	3	; select bank3
  4653  048D  01B8               	clrf	_RemoteWakeup^(0+384)
  4654  048E  0AB8               	incf	_RemoteWakeup^(0+384),f
  4655  048F  2C92               	goto	l5292
  4656  0490                     l5290:	
  4657                           
  4658                           ;usb_device.c: 2830: else
  4659                           ;usb_device.c: 2831: RemoteWakeup = 0;
  4660  0490  0023               	movlb	3	; select bank3
  4661  0491  01B8               	clrf	_RemoteWakeup^(0+384)
  4662  0492                     l5292:	
  4663                           
  4664                           ;usb_device.c: 2832: }
  4665                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  4666                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  4667                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  4668                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  4669  0492  0020               	movlb	0	; select bank0
  4670  0493  0852               	movf	82,w
  4671  0494  1D03               	skipz
  4672  0495  0008               	return
  4673  0496  0850               	movf	80,w	;volatile
  4674  0497  391F               	andlw	31
  4675  0498  3A02               	xorlw	2
  4676  0499  1D03               	skipz
  4677  049A  0008               	return
  4678  049B  0854               	movf	84,w	;volatile
  4679  049C  390F               	andlw	15
  4680  049D  1903               	skipnz
  4681  049E  0008               	return
  4682  049F  0854               	movf	84,w	;volatile
  4683  04A0  390F               	andlw	15
  4684  04A1  00FA               	movwf	??_USBStdFeatureReqHandler
  4685  04A2  3003               	movlw	3
  4686  04A3  027A               	subwf	??_USBStdFeatureReqHandler,w
  4687  04A4  1803               	skipnc
  4688  04A5  0008               	return
  4689  04A6  0021               	movlb	1	; select bank1
  4690  04A7  0865               	movf	_USBDeviceState^(0+128),w
  4691  04A8  3A20               	xorlw	32
  4692  04A9  1D03               	skipz
  4693  04AA  0008               	return
  4694                           
  4695                           ;usb_device.c: 2839: {
  4696                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  4697  04AB  17EC               	bsf	(_inPipes^(0+128)+2),7
  4698                           
  4699                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  4700  04AC  0020               	movlb	0	; select bank0
  4701  04AD  1BD4               	btfsc	84,7	;volatile
  4702  04AE  2CBC               	goto	l5306
  4703                           
  4704                           ;usb_device.c: 2846: {
  4705                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4706  04AF  0854               	movf	84,w	;volatile
  4707  04B0  390F               	andlw	15
  4708  04B1  3EAC               	addlw	_pBDTEntryOut& (0+255)
  4709  04B2  0086               	movwf	6
  4710  04B3  3001               	movlw	1	; select bank3/4
  4711  04B4  0087               	movwf	7
  4712  04B5  0801               	movf	1,w
  4713  04B6  00E9               	movwf	USBStdFeatureReqHandler@p
  4714                           
  4715                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  4716  04B7  0854               	movf	84,w	;volatile
  4717  04B8  390F               	andlw	15
  4718  04B9  3EA9               	addlw	_ep_data_out& (0+255)
  4719  04BA  0086               	movwf	6
  4720  04BB  2CC9               	goto	L5
  4721  04BC                     l5306:	
  4722                           ;usb_device.c: 2849: }
  4723                           
  4724                           
  4725                           ;usb_device.c: 2850: else
  4726                           ;usb_device.c: 2851: {
  4727                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4728  04BC  0854               	movf	84,w	;volatile
  4729  04BD  390F               	andlw	15
  4730  04BE  3EE0               	addlw	_pBDTEntryIn& (0+255)
  4731  04BF  0086               	movwf	6
  4732  04C0  0187               	clrf	7
  4733  04C1  0801               	movf	1,w
  4734  04C2  00E9               	movwf	USBStdFeatureReqHandler@p
  4735                           
  4736                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  4737  04C3  0854               	movf	84,w	;volatile
  4738  04C4  390F               	andlw	15
  4739  04C5  3EA6               	addlw	_ep_data_in& (0+255)
  4740  04C6  0086               	movwf	6
  4741  04C7  3001               	movlw	1	; select bank3/4
  4742  04C8  0087               	movwf	7
  4743  04C9                     L5:	
  4744  04C9  0801               	movf	1,w
  4745  04CA  00E8               	movwf	USBStdFeatureReqHandler@current_ep_data
  4746                           
  4747                           ;usb_device.c: 2854: }
  4748                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  4749  04CB  1868               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  4750  04CC  2CCF               	goto	l722
  4751                           
  4752                           ;usb_device.c: 2861: {
  4753                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  4754  04CD  1169               	bcf	USBStdFeatureReqHandler@p,2
  4755                           
  4756                           ;usb_device.c: 2863: }
  4757  04CE  2CD0               	goto	l723
  4758  04CF                     l722:	
  4759                           
  4760                           ;usb_device.c: 2864: else
  4761                           ;usb_device.c: 2865: {
  4762                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  4763  04CF  1569               	bsf	USBStdFeatureReqHandler@p,2
  4764  04D0                     l723:	
  4765                           
  4766                           ;usb_device.c: 2867: }
  4767                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  4768  04D0  1BD4               	btfsc	84,7	;volatile
  4769  04D1  2CD9               	goto	l5314
  4770                           
  4771                           ;usb_device.c: 2873: {
  4772                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4773  04D2  0854               	movf	84,w	;volatile
  4774  04D3  390F               	andlw	15
  4775  04D4  3EAC               	addlw	_pBDTEntryOut& (0+255)
  4776  04D5  0086               	movwf	6
  4777  04D6  3001               	movlw	1	; select bank3/4
  4778  04D7  0087               	movwf	7
  4779  04D8  2CDE               	goto	L6
  4780  04D9                     l5314:	
  4781                           ;usb_device.c: 2875: }
  4782                           
  4783                           
  4784                           ;usb_device.c: 2876: else
  4785                           ;usb_device.c: 2877: {
  4786                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  4787  04D9  0854               	movf	84,w	;volatile
  4788  04DA  390F               	andlw	15
  4789  04DB  3EE0               	addlw	_pBDTEntryIn& (0+255)
  4790  04DC  0086               	movwf	6
  4791  04DD  0187               	clrf	7
  4792  04DE                     L6:	
  4793  04DE  0869               	movf	USBStdFeatureReqHandler@p,w
  4794  04DF  0081               	movwf	1
  4795                           
  4796                           ;usb_device.c: 2879: }
  4797                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  4798  04E0  0851               	movf	81,w	;volatile
  4799  04E1  3A03               	xorlw	3
  4800  04E2  1D03               	skipz
  4801  04E3  2CFE               	goto	l5330
  4802                           
  4803                           ;usb_device.c: 2883: {
  4804                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  4805  04E4  0869               	movf	USBStdFeatureReqHandler@p,w
  4806  04E5  0086               	movwf	6
  4807  04E6  0187               	clrf	7
  4808  04E7  1F81               	btfss	1,7
  4809  04E8  2CF6               	goto	l5326
  4810                           
  4811                           ;usb_device.c: 2885: {
  4812                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  4813  04E9  1BD4               	btfsc	84,7	;volatile
  4814  04EA  2CEF               	goto	l5324
  4815                           
  4816                           ;usb_device.c: 2889: {
  4817                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4818  04EB  0854               	movf	84,w	;volatile
  4819  04EC  390F               	andlw	15
  4820  04ED  3EA9               	addlw	_ep_data_out& (0+255)
  4821  04EE  2CF2               	goto	L7
  4822  04EF                     l5324:	
  4823                           ;usb_device.c: 2891: }
  4824                           
  4825                           
  4826                           ;usb_device.c: 2892: else
  4827                           ;usb_device.c: 2893: {
  4828                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  4829  04EF  0854               	movf	84,w	;volatile
  4830  04F0  390F               	andlw	15
  4831  04F1  3EA6               	addlw	_ep_data_in& (0+255)
  4832  04F2                     L7:	
  4833  04F2  0086               	movwf	6
  4834  04F3  3001               	movlw	1	; select bank3/4
  4835  04F4  0087               	movwf	7
  4836  04F5  1481               	bsf	1,1
  4837  04F6                     l5326:	
  4838                           
  4839                           ;usb_device.c: 2895: }
  4840                           ;usb_device.c: 2896: }
  4841                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  4842  04F6  0869               	movf	USBStdFeatureReqHandler@p,w
  4843  04F7  0086               	movwf	6
  4844  04F8  0187               	clrf	7
  4845  04F9  1501               	bsf	1,2
  4846                           
  4847                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  4848  04FA  0869               	movf	USBStdFeatureReqHandler@p,w
  4849  04FB  0086               	movwf	6
  4850  04FC  1781               	bsf	1,7
  4851                           
  4852                           ;usb_device.c: 2901: }
  4853  04FD  0008               	return
  4854  04FE                     l5330:	
  4855                           
  4856                           ;usb_device.c: 2902: else
  4857                           ;usb_device.c: 2903: {
  4858                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  4859  04FE  3004               	movlw	4
  4860  04FF  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  4861                           
  4862                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  4863  0500  0869               	movf	USBStdFeatureReqHandler@p,w
  4864  0501  0086               	movwf	6
  4865  0502  0187               	clrf	7
  4866                           
  4867                           ;usb_device.c: 2910: {
  4868                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  4869  0503  0869               	movf	USBStdFeatureReqHandler@p,w
  4870  0504  1F81               	btfss	1,7
  4871  0505  2D16               	goto	L9
  4872  0506  0086               	movwf	6
  4873  0507  1381               	bcf	1,7
  4874                           
  4875                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  4876  0508  0086               	movwf	6
  4877  0509  3005               	movlw	5
  4878  050A  1701               	bsf	1,6
  4879                           
  4880                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4881  050B  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4882  050C  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4883  050D  0869               	movf	USBStdFeatureReqHandler@p,w
  4884  050E  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4885  050F  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4886  0510  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4887  0511  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,f
  4888  0512  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4889  0513  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4890                           
  4891                           ;usb_device.c: 2916: }
  4892  0515  2D19               	goto	l5340
  4893  0516                     L9:	
  4894                           ;usb_device.c: 2917: else
  4895                           ;usb_device.c: 2918: {
  4896                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  4897                           
  4898  0516  0086               	movwf	6
  4899  0517  0187               	clrf	7
  4900  0518  1701               	bsf	1,6
  4901  0519                     l5340:	
  4902                           
  4903                           ;usb_device.c: 2921: }
  4904                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  4905  0519  3004               	movlw	4
  4906  051A  0020               	movlb	0	; select bank0
  4907  051B  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  4908                           
  4909                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  4910  051C  18E8               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  4911  051D  2D23               	goto	l735
  4912  051E  0869               	movf	USBStdFeatureReqHandler@p,w
  4913  051F  0086               	movwf	6
  4914  0520  0187               	clrf	7
  4915  0521  1F81               	btfss	1,7
  4916  0522  2D41               	goto	l5352
  4917  0523                     l735:	
  4918                           
  4919                           ;usb_device.c: 2932: {
  4920                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  4921  0523  1BD4               	btfsc	84,7	;volatile
  4922  0524  2D29               	goto	l5348
  4923                           
  4924                           ;usb_device.c: 2934: {
  4925                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4926  0525  0854               	movf	84,w	;volatile
  4927  0526  390F               	andlw	15
  4928  0527  3EA9               	addlw	_ep_data_out& (0+255)
  4929  0528  2D2C               	goto	L8
  4930  0529                     l5348:	
  4931                           ;usb_device.c: 2936: }
  4932                           
  4933                           
  4934                           ;usb_device.c: 2937: else
  4935                           ;usb_device.c: 2938: {
  4936                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4937  0529  0854               	movf	84,w	;volatile
  4938  052A  390F               	andlw	15
  4939  052B  3EA6               	addlw	_ep_data_in& (0+255)
  4940  052C                     L8:	
  4941  052C  0086               	movwf	6
  4942  052D  3001               	movlw	1	; select bank3/4
  4943  052E  0087               	movwf	7
  4944  052F  1081               	bcf	1,1
  4945                           
  4946                           ;usb_device.c: 2940: }
  4947                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4948  0530  0869               	movf	USBStdFeatureReqHandler@p,w
  4949  0531  0086               	movwf	6
  4950  0532  303B               	movlw	59
  4951  0533  0187               	clrf	7
  4952  0534  0581               	andwf	1,f
  4953                           
  4954                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4955  0535  3005               	movlw	5
  4956  0536  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4957  0537  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4958  0538  0869               	movf	USBStdFeatureReqHandler@p,w
  4959  0539  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4960  053A  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4961  053B  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4962  053C  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,f
  4963  053D  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  4964  053E  2558  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4965                           
  4966                           ;usb_device.c: 2946: }
  4967  0540  2D46               	goto	l5354
  4968  0541                     l5352:	
  4969                           
  4970                           ;usb_device.c: 2947: else
  4971                           ;usb_device.c: 2948: {
  4972                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4973  0541  0869               	movf	USBStdFeatureReqHandler@p,w
  4974  0542  0086               	movwf	6
  4975  0543  303B               	movlw	59
  4976  0544  0187               	clrf	7
  4977  0545  0581               	andwf	1,f
  4978  0546                     l5354:	
  4979                           
  4980                           ;usb_device.c: 2951: }
  4981                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  4982  0546  0020               	movlb	0	; select bank0
  4983  0547  0854               	movf	84,w	;volatile
  4984  0548  390F               	andlw	15
  4985  0549  3E98               	addlw	152
  4986  054A  00FA               	movwf	??_USBStdFeatureReqHandler
  4987  054B  300E               	movlw	14
  4988  054C  01FB               	clrf	??_USBStdFeatureReqHandler+1
  4989  054D  3DFB               	addwfc	??_USBStdFeatureReqHandler+1,f
  4990  054E  087A               	movf	??_USBStdFeatureReqHandler,w
  4991  054F  00E6               	movwf	USBStdFeatureReqHandler@pUEP
  4992  0550  087B               	movf	??_USBStdFeatureReqHandler+1,w
  4993  0551  00E7               	movwf	USBStdFeatureReqHandler@pUEP+1
  4994                           
  4995                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  4996  0552  0866               	movf	USBStdFeatureReqHandler@pUEP,w
  4997  0553  0086               	movwf	6
  4998  0554  0867               	movf	USBStdFeatureReqHandler@pUEP+1,w
  4999  0555  0087               	movwf	7
  5000  0556  1001               	bcf	1,0
  5001  0557  0008               	return
  5002  0558                     __end_of_USBStdFeatureReqHandler:	
  5003  0558                     __ptext21:	
  5004 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5005 ;; Defined at:
  5006 ;;		line 108 in file "../src/main.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  event           2    0[BANK0 ] enum E2680
  5009 ;;  pdata           2    2[BANK0 ] PTR void 
  5010 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  5011 ;;  size            2    4[BANK0 ] unsigned int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 1F/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: FFFE0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5023 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;Total ram usage:        6 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    5
  5030 ;; This function calls:
  5031 ;;		_APP_DeviceCDCBasicDemoInitialize
  5032 ;;		_APP_LEDUpdateUSBStatus
  5033 ;;		_USBCheckCDCRequest
  5034 ;; This function is called by:
  5035 ;;		_USBDeviceTasks
  5036 ;;		_USBStdSetCfgHandler
  5037 ;;		_USBSuspend
  5038 ;;		_USBWakeFromSuspend
  5039 ;;		_USBCtrlTrfSetupHandler
  5040 ;;		_USBCheckStdRequest
  5041 ;;		_USBStdFeatureReqHandler
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5047  0558                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5048  0558                     l4660:	
  5049                           ;incstack = 0
  5050                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  5051                           
  5052                           
  5053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5054                           ; Switch size 1, requested type "speed"
  5055                           ; Number of cases is 2, Range of values is 0 to 127
  5056                           ; switch strategies available:
  5057                           ; Name         Instructions Cycles
  5058                           ; simple_byte            7     4 (average)
  5059                           ; direct_byte          262     6 (fixed)
  5060                           ; jumptable            260     6 (fixed)
  5061                           ; rangetable           132     6 (fixed)
  5062                           ; spacedrange          261     8 (fixed)
  5063                           ; locatedrange         128     3 (fixed)
  5064                           ;	Chosen strategy is simple_byte
  5065                           
  5066                           ;main.c: 143: break;
  5067                           
  5068                           ;main.c: 109: switch( (int) event )
  5069  0558  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  5070  0559  3A00               	xorlw	0	; case 0
  5071  055A  1903               	skipnz
  5072  055B  2D64               	goto	l5490
  5073  055C  3A7F               	xorlw	127	; case 127
  5074  055D  1903               	skipnz
  5075  055E  2D71               	goto	l5492
  5076  055F  2D76               	goto	l118
  5077  0560                     l4662:	
  5078                           
  5079                           ;main.c: 117: APP_LEDUpdateUSBStatus();
  5080  0560  2F87               	ljmp	l4408
  5081  0561                     l4668:	
  5082                           ;main.c: 118: break;
  5083                           
  5084                           
  5085                           ;main.c: 133: APP_DeviceCDCBasicDemoInitialize();
  5086  0561  2D77               	ljmp	l4236
  5087  0562                     l4670:	
  5088                           ;main.c: 134: break;
  5089                           
  5090                           
  5091                           ;main.c: 142: USBCheckCDCRequest();
  5092  0562  318B  2B42         	ljmp	l4688
  5093  0564                     l5490:	
  5094                           
  5095                           ; Switch size 1, requested type "speed"
  5096                           ; Number of cases is 8, Range of values is 1 to 117
  5097                           ; switch strategies available:
  5098                           ; Name         Instructions Cycles
  5099                           ; direct_byte          243     9 (fixed)
  5100                           ; simple_byte           25    13 (average)
  5101                           ; jumptable            263     9 (fixed)
  5102                           ;	Chosen strategy is direct_byte
  5103  0564  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  5104  0565  3EFF               	addlw	-1
  5105  0566  1C03               	skipc
  5106  0567  0008               	return
  5107  0568  0084               	movwf	4
  5108  0569  3075               	movlw	117
  5109  056A  0204               	subwf	4,w
  5110  056B  1803               	skipnc
  5111  056C  0008               	return
  5112  056D  3188               	movlp	high S5494
  5113  056E  3504               	lslf	4,w
  5114  056F  3E00               	addlw	low S5494
  5115  0570  0082               	movwf	2
  5116  0571                     l5492:	
  5117                           
  5118                           ; Switch size 1, requested type "speed"
  5119                           ; Number of cases is 1, Range of values is 255 to 255
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte            4     3 (average)
  5123                           ; direct_byte            7     5 (fixed)
  5124                           ; jumptable            263     9 (fixed)
  5125                           ;	Chosen strategy is simple_byte
  5126  0571  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  5127  0572  3AFF               	xorlw	255	; case 255
  5128  0573  1903               	skipnz
  5129  0574  2D76               	goto	l118
  5130  0575  2D76               	goto	l118
  5131  0576                     l118:	
  5132  0576  0008               	return
  5133  0577                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5134  0577                     __ptext26:	
  5135 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
  5136 ;; Defined at:
  5137 ;;		line 61 in file "../src/app_device_cdc_basic.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;		None               void
  5144 ;; Registers used:
  5145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 1F/0
  5148 ;;		On exit  : 1F/2
  5149 ;;		Unchanged: FFFE0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    4
  5158 ;; This function calls:
  5159 ;;		_CDCInitEP
  5160 ;; This function is called by:
  5161 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _APP_DeviceCDCBasicDemoInitialize
  5167  0577                     _APP_DeviceCDCBasicDemoInitialize:	
  5168  0577                     l4236:	
  5169                           ;incstack = 0
  5170                           ; Regs used in _APP_DeviceCDCBasicDemoInitialize: [allreg]
  5171                           
  5172                           
  5173                           ;app_device_cdc_basic.c: 62: CDCInitEP();
  5174  0577  2586               	fcall	_CDCInitEP
  5175                           
  5176                           ;app_device_cdc_basic.c: 65: line_coding.bCharFormat = 0;
  5177  0578  0023               	movlb	3	; select bank3
  5178  0579  3008               	movlw	8
  5179  057A  01CA               	clrf	(_line_coding^(0+384)+4)
  5180                           
  5181                           ;app_device_cdc_basic.c: 66: line_coding.bDataBits = 8;
  5182  057B  00CC               	movwf	(_line_coding^(0+384)+6)
  5183  057C  3025               	movlw	37
  5184                           
  5185                           ;app_device_cdc_basic.c: 67: line_coding.bParityType = 0;
  5186  057D  01CB               	clrf	(_line_coding^(0+384)+5)
  5187                           
  5188                           ;app_device_cdc_basic.c: 68: line_coding.dwDTERate = 9600;
  5189  057E  01C9               	clrf	(_line_coding+3)^(0+384)
  5190  057F  01C8               	clrf	(_line_coding+2)^(0+384)
  5191  0580  00C7               	movwf	(_line_coding+1)^(0+384)
  5192  0581  3080               	movlw	128
  5193  0582  00C6               	movwf	_line_coding^(0+384)
  5194                           
  5195                           ;app_device_cdc_basic.c: 70: buttonPressed = 0;
  5196  0583  0022               	movlb	2	; select bank2
  5197  0584  01E8               	clrf	_buttonPressed^(0+256)
  5198  0585  0008               	return
  5199  0586                     __end_of_APP_DeviceCDCBasicDemoInitialize:	
  5200  0586                     __ptext27:	
  5201 ;; *************** function _CDCInitEP *****************
  5202 ;; Defined at:
  5203 ;;		line 352 in file "../framework/usb/usb_device_cdc.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;		None               void
  5210 ;; Registers used:
  5211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 1F/0
  5214 ;;		On exit  : 1F/1
  5215 ;;		Unchanged: FFFE0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    3
  5224 ;; This function calls:
  5225 ;;		_USBEnableEndpoint
  5226 ;;		_USBTransferOnePacket
  5227 ;; This function is called by:
  5228 ;;		_APP_DeviceCDCBasicDemoInitialize
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _CDCInitEP
  5234  0586                     _CDCInitEP:	
  5235                           
  5236                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5240  0586  0023               	movlb	3	; select bank3
  5241  0587  304B               	movlw	75
  5242  0588  01C9               	clrf	(_line_coding+3)^(0+384)
  5243  0589  01C8               	clrf	(_line_coding+2)^(0+384)
  5244  058A  00C7               	movwf	(_line_coding+1)^(0+384)
  5245  058B  3008               	movlw	8
  5246  058C  01C6               	clrf	_line_coding^(0+384)
  5247                           
  5248                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
  5249  058D  01CA               	clrf	(_line_coding^(0+384)+4)
  5250  058E  01CB               	clrf	(_line_coding^(0+384)+5)
  5251                           
  5252                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
  5253  058F  00CC               	movwf	(_line_coding^(0+384)+6)
  5254                           
  5255                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
  5256  0590  0021               	movlb	1	; select bank1
  5257  0591  301A               	movlw	26
  5258  0592  01E6               	clrf	_cdc_rx_len^(0+128)
  5259                           
  5260                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
  5261  0593  00F4               	movwf	?_USBEnableEndpoint
  5262  0594  3001               	movlw	1
  5263  0595  25AB  3180         	fcall	_USBEnableEndpoint
  5264                           
  5265                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  5266  0597  301E               	movlw	30
  5267  0598  00F4               	movwf	?_USBEnableEndpoint
  5268  0599  3002               	movlw	2
  5269  059A  25AB  3180         	fcall	_USBEnableEndpoint
  5270  059C  3020               	movlw	32
  5271                           
  5272                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  5273  059D  01F0               	clrf	?_USBTransferOnePacket
  5274  059E  00F1               	movwf	?_USBTransferOnePacket+1
  5275  059F  3001               	movlw	1
  5276  05A0  00F2               	movwf	?_USBTransferOnePacket+2
  5277  05A1  3040               	movlw	64
  5278  05A2  00F3               	movwf	?_USBTransferOnePacket+3
  5279  05A3  3002               	movlw	2
  5280  05A4  266F               	fcall	_USBTransferOnePacket
  5281  05A5  00E3               	movwf	_CDCDataOutHandle^(0+128)
  5282                           
  5283                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
  5284  05A6  0022               	movlb	2	; select bank2
  5285  05A7  01E2               	clrf	_CDCDataInHandle^(0+256)
  5286                           
  5287                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
  5288  05A8  0021               	movlb	1	; select bank1
  5289  05A9  01E7               	clrf	_cdc_trf_state^(0+128)
  5290  05AA  0008               	return
  5291  05AB                     __end_of_CDCInitEP:	
  5292  05AB                     __ptext28:	
  5293 ;; *************** function _USBEnableEndpoint *****************
  5294 ;; Defined at:
  5295 ;;		line 898 in file "../framework/usb/usb_device.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  ep              1    wreg     unsigned char 
  5298 ;;  options         1    4[COMMON] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  ep              1    9[COMMON] unsigned char 
  5301 ;;  p               2    7[COMMON] PTR unsigned char 
  5302 ;;		 -> UEP0(1), 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;		None               void
  5305 ;; Registers used:
  5306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 1F/1
  5309 ;;		On exit  : 1F/1
  5310 ;;		Unchanged: FFFE0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5312 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;Total ram usage:        6 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    2
  5319 ;; This function calls:
  5320 ;;		_USBConfigureEndpoint
  5321 ;; This function is called by:
  5322 ;;		_CDCInitEP
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _USBEnableEndpoint
  5328  05AB                     _USBEnableEndpoint:	
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5332                           ;USBEnableEndpoint@ep stored from wreg
  5333  05AB  00F9               	movwf	USBEnableEndpoint@ep
  5334                           
  5335                           ;usb_device.c: 899: unsigned char* p;
  5336                           ;usb_device.c: 903: if(options & 0x04)
  5337  05AC  1D74               	btfss	USBEnableEndpoint@options,2
  5338  05AD  2DB1               	goto	l4846
  5339                           
  5340                           ;usb_device.c: 904: {
  5341                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  5342  05AE  01F0               	clrf	?_USBConfigureEndpoint
  5343  05AF  25CA  3180         	fcall	_USBConfigureEndpoint
  5344  05B1                     l4846:	
  5345                           
  5346                           ;usb_device.c: 906: }
  5347                           ;usb_device.c: 907: if(options & 0x02)
  5348  05B1  1CF4               	btfss	USBEnableEndpoint@options,1
  5349  05B2  2DB7               	goto	l4850
  5350                           
  5351                           ;usb_device.c: 908: {
  5352                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  5353  05B3  01F0               	clrf	?_USBConfigureEndpoint
  5354  05B4  0AF0               	incf	?_USBConfigureEndpoint,f
  5355  05B5  0879               	movf	USBEnableEndpoint@ep,w
  5356  05B6  25CA               	fcall	_USBConfigureEndpoint
  5357  05B7                     l4850:	
  5358                           
  5359                           ;usb_device.c: 910: }
  5360                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  5361  05B7  0879               	movf	USBEnableEndpoint@ep,w
  5362  05B8  3E98               	addlw	152
  5363  05B9  00F5               	movwf	??_USBEnableEndpoint
  5364  05BA  300E               	movlw	14
  5365  05BB  01F6               	clrf	??_USBEnableEndpoint+1
  5366  05BC  3DF6               	addwfc	??_USBEnableEndpoint+1,f
  5367  05BD  0875               	movf	??_USBEnableEndpoint,w
  5368  05BE  00F7               	movwf	USBEnableEndpoint@p
  5369  05BF  0876               	movf	??_USBEnableEndpoint+1,w
  5370  05C0  00F8               	movwf	USBEnableEndpoint@p+1
  5371                           
  5372                           ;usb_device.c: 920: *p = options;
  5373  05C1  0874               	movf	USBEnableEndpoint@options,w
  5374  05C2  00F5               	movwf	??_USBEnableEndpoint
  5375  05C3  0877               	movf	USBEnableEndpoint@p,w
  5376  05C4  0086               	movwf	6
  5377  05C5  0878               	movf	USBEnableEndpoint@p+1,w
  5378  05C6  0087               	movwf	7
  5379  05C7  0875               	movf	??_USBEnableEndpoint,w
  5380  05C8  0081               	movwf	1
  5381  05C9  0008               	return
  5382  05CA                     __end_of_USBEnableEndpoint:	
  5383  05CA                     __ptext29:	
  5384 ;; *************** function _USBConfigureEndpoint *****************
  5385 ;; Defined at:
  5386 ;;		line 1563 in file "../framework/usb/usb_device.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  EPNum           1    wreg     unsigned char 
  5389 ;;  direction       1    0[COMMON] unsigned char 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  EPNum           1    2[COMMON] unsigned char 
  5392 ;;  handle          1    3[COMMON] PTR volatile struct __BD
  5393 ;;		 -> BDT(48), 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;		None               void
  5396 ;; Registers used:
  5397 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 1F/1
  5400 ;;		On exit  : 1F/1
  5401 ;;		Unchanged: FFFE0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;Total ram usage:        4 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_USBEnableEndpoint
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _USBConfigureEndpoint
  5419  05CA                     _USBConfigureEndpoint:	
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  5423                           ;USBConfigureEndpoint@EPNum stored from wreg
  5424  05CA  00F2               	movwf	USBConfigureEndpoint@EPNum
  5425                           
  5426                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  5427                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  5428  05CB  3020               	movlw	32
  5429  05CC  00F3               	movwf	USBConfigureEndpoint@handle
  5430                           
  5431                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  5432  05CD  0870               	movf	USBConfigureEndpoint@direction,w
  5433  05CE  00F1               	movwf	??_USBConfigureEndpoint
  5434  05CF  35F1               	lslf	??_USBConfigureEndpoint,f
  5435  05D0  0872               	movf	USBConfigureEndpoint@EPNum,w
  5436  05D1  0709               	addwf	9,w
  5437  05D2  0709               	addwf	9,w
  5438  05D3  0771               	addwf	??_USBConfigureEndpoint,w
  5439  05D4  0709               	addwf	9,w
  5440  05D5  0709               	addwf	9,w
  5441  05D6  07F3               	addwf	USBConfigureEndpoint@handle,f
  5442                           
  5443                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  5444  05D7  0873               	movf	USBConfigureEndpoint@handle,w
  5445  05D8  0086               	movwf	6
  5446  05D9  0187               	clrf	7
  5447  05DA  1381               	bcf	1,7
  5448                           
  5449                           ;usb_device.c: 1576: if(direction == 0)
  5450  05DB  08F0               	movf	USBConfigureEndpoint@direction,f
  5451  05DC  1D03               	skipz
  5452  05DD  2DE4               	goto	l4864
  5453                           
  5454                           ;usb_device.c: 1577: {
  5455                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  5456  05DE  0872               	movf	USBConfigureEndpoint@EPNum,w
  5457  05DF  3EAC               	addlw	_pBDTEntryOut& (0+255)
  5458  05E0  0086               	movwf	6
  5459  05E1  3001               	movlw	1	; select bank3/4
  5460  05E2  0087               	movwf	7
  5461  05E3  2DE8               	goto	L13
  5462  05E4                     l4864:	
  5463                           ;usb_device.c: 1579: }
  5464                           
  5465                           
  5466                           ;usb_device.c: 1580: else
  5467                           ;usb_device.c: 1581: {
  5468                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  5469  05E4  0872               	movf	USBConfigureEndpoint@EPNum,w
  5470  05E5  3EE0               	addlw	_pBDTEntryIn& (0+255)
  5471  05E6  0086               	movwf	6
  5472  05E7  0187               	clrf	7
  5473  05E8                     L13:	
  5474  05E8  0873               	movf	USBConfigureEndpoint@handle,w
  5475  05E9  0081               	movwf	1
  5476                           
  5477                           ;usb_device.c: 1583: }
  5478                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  5479  05EA  0873               	movf	USBConfigureEndpoint@handle,w
  5480  05EB  0086               	movwf	6
  5481  05EC  0187               	clrf	7
  5482  05ED  1301               	bcf	1,6
  5483                           
  5484                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  5485  05EE  0873               	movf	USBConfigureEndpoint@handle,w
  5486  05EF  3E04               	addlw	4
  5487  05F0  0086               	movwf	6
  5488  05F1  1701               	bsf	1,6
  5489  05F2  0008               	return
  5490  05F3                     __end_of_USBConfigureEndpoint:	
  5491  05F3                     __ptext35:	
  5492 ;; *************** function _CDCTxService *****************
  5493 ;; Defined at:
  5494 ;;		line 894 in file "../framework/usb/usb_device_cdc.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  byte_to_send    1   11[COMMON] unsigned char 
  5499 ;;  i               1   10[COMMON] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;		None               void
  5502 ;; Registers used:
  5503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 1E/1
  5506 ;;		On exit  : 1C/0
  5507 ;;		Unchanged: FFFE0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    2
  5516 ;; This function calls:
  5517 ;;		_USBTransferOnePacket
  5518 ;; This function is called by:
  5519 ;;		_APP_DeviceCDCBasicDemoTasks
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function _CDCTxService
  5525  05F3                     _CDCTxService:	
  5526  05F3                     l4338:	
  5527                           ;incstack = 0
  5528                           ; Regs used in _CDCTxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5529                           
  5530                           
  5531                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  5532                           ;usb_device_cdc.c: 896: uint8_t i;
  5533                           ;usb_device_cdc.c: 898: ;
  5534                           ;usb_device_cdc.c: 900: {};
  5535                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  5536  05F3  0022               	movlb	2	; select bank2
  5537  05F4  0862               	movf	_CDCDataInHandle^(0+256),w
  5538  05F5  1903               	btfsc	3,2
  5539  05F6  2DFF               	goto	l4342
  5540  05F7  0862               	movf	_CDCDataInHandle^(0+256),w
  5541  05F8  0086               	movwf	6
  5542  05F9  0187               	clrf	7
  5543  05FA  0D01               	rlf	1,w
  5544  05FB  0D01               	rlf	1,w
  5545  05FC  3901               	andlw	1
  5546  05FD  00F8               	movwf	_CDCTxService$2406
  5547  05FE  2E00               	goto	L15
  5548  05FF                     l4342:	
  5549  05FF  01F8               	clrf	_CDCTxService$2406
  5550  0600                     L15:	
  5551  0600  01F9               	clrf	_CDCTxService$2406+1
  5552  0601  0879               	movf	_CDCTxService$2406+1,w
  5553  0602  0478               	iorwf	_CDCTxService$2406,w
  5554  0603  1D03               	btfss	3,2
  5555  0604  0008               	return
  5556                           
  5557                           ;usb_device_cdc.c: 906: }
  5558                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  5559  0605  0021               	movlb	1	; select bank1
  5560  0606  0867               	movf	_cdc_trf_state^(0+128),w
  5561  0607  3A03               	xorlw	3
  5562  0608  1903               	btfsc	3,2
  5563                           
  5564                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  5565  0609  01E7               	clrf	_cdc_trf_state^(0+128)
  5566                           
  5567                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  5568  060A  08E7               	movf	_cdc_trf_state^(0+128),f
  5569  060B  1903               	btfsc	3,2
  5570  060C  0008               	return
  5571                           
  5572                           ;usb_device_cdc.c: 923: }
  5573                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  5574  060D  0867               	movf	_cdc_trf_state^(0+128),w
  5575  060E  3A02               	xorlw	2
  5576  060F  1D03               	skipz
  5577  0610  2E1E               	goto	l4362
  5578  0611  3002               	movlw	2
  5579                           
  5580                           ;usb_device_cdc.c: 929: {
  5581                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  5582  0612  01F0               	clrf	?_USBTransferOnePacket
  5583  0613  0AF0               	incf	?_USBTransferOnePacket,f
  5584  0614  01F1               	clrf	?_USBTransferOnePacket+1
  5585  0615  01F2               	clrf	?_USBTransferOnePacket+2
  5586  0616  01F3               	clrf	?_USBTransferOnePacket+3
  5587  0617  266F               	fcall	_USBTransferOnePacket
  5588  0618  0022               	movlb	2	; select bank2
  5589  0619  00E2               	movwf	_CDCDataInHandle^(0+256)
  5590                           
  5591                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  5592  061A  3003               	movlw	3
  5593  061B  0021               	movlb	1	; select bank1
  5594  061C  00E7               	movwf	_cdc_trf_state^(0+128)
  5595                           
  5596                           ;usb_device_cdc.c: 933: }
  5597  061D  0008               	return
  5598  061E                     l4362:	
  5599                           
  5600                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  5601  061E  0B67               	decfsz	_cdc_trf_state^(0+128),w
  5602  061F  0008               	return
  5603                           
  5604                           ;usb_device_cdc.c: 935: {
  5605                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  5606  0620  3041               	movlw	65
  5607  0621  0022               	movlb	2	; select bank2
  5608  0622  0269               	subwf	_cdc_tx_len^(0+256),w
  5609  0623  1C03               	skipc
  5610  0624  2E27               	goto	l4368
  5611                           
  5612                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  5613  0625  3040               	movlw	64
  5614  0626  2E28               	goto	L16
  5615  0627                     l4368:	
  5616                           
  5617                           ;usb_device_cdc.c: 941: else
  5618                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  5619  0627  0869               	movf	_cdc_tx_len^(0+256),w
  5620  0628                     L16:	
  5621  0628  00FB               	movwf	CDCTxService@byte_to_send
  5622                           
  5623                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  5624  0629  02E9               	subwf	_cdc_tx_len^(0+256),f
  5625                           
  5626                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  5627  062A  30A0               	movlw	160
  5628  062B  0023               	movlb	3	; select bank3
  5629  062C  00B3               	movwf	_pCDCDst^(0+384)
  5630                           
  5631                           ;usb_device_cdc.c: 951: i = byte_to_send;
  5632  062D  087B               	movf	CDCTxService@byte_to_send,w
  5633  062E  00FA               	movwf	CDCTxService@i
  5634                           
  5635                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  5636  062F  08BB               	movf	_cdc_mem_type^(0+384),f
  5637  0630  1903               	btfsc	3,2
  5638  0631  2E41               	goto	l4386
  5639  0632  2E53               	goto	l4396
  5640  0633                     l4378:	
  5641                           
  5642                           ;usb_device_cdc.c: 955: {
  5643                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  5644  0633  0833               	movf	_pCDCDst^(0+384),w
  5645  0634  0086               	movwf	6
  5646  0635  0187               	clrf	7
  5647  0636  0835               	movf	_pCDCSrc^(0+384),w
  5648  0637  0084               	movwf	4
  5649  0638  0836               	movf	(_pCDCSrc+1)^(0+384),w
  5650  0639  0085               	movwf	5
  5651  063A  0800               	movf	0,w
  5652  063B  0081               	movwf	1
  5653                           
  5654                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  5655  063C  0AB3               	incf	_pCDCDst^(0+384),f
  5656                           
  5657                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  5658  063D  0AB5               	incf	_pCDCSrc^(0+384),f
  5659  063E  1903               	skipnz
  5660  063F  0AB6               	incf	(_pCDCSrc+1)^(0+384),f
  5661                           
  5662                           ;usb_device_cdc.c: 959: i--;
  5663  0640  03FA               	decf	CDCTxService@i,f
  5664  0641                     l4386:	
  5665  0641  08FA               	movf	CDCTxService@i,f
  5666  0642  1903               	btfsc	3,2
  5667  0643  2E56               	goto	l4398
  5668  0644  2E33               	goto	l4378
  5669  0645                     l4388:	
  5670                           
  5671                           ;usb_device_cdc.c: 965: {
  5672                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  5673  0645  0833               	movf	_pCDCDst^(0+384),w
  5674  0646  0086               	movwf	6
  5675  0647  0187               	clrf	7
  5676  0648  0835               	movf	_pCDCSrc^(0+384),w
  5677  0649  0084               	movwf	4
  5678  064A  0836               	movf	(_pCDCSrc+1)^(0+384),w
  5679  064B  0085               	movwf	5
  5680  064C  0800               	movf	0,w
  5681  064D  0081               	movwf	1
  5682                           
  5683                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  5684  064E  0AB3               	incf	_pCDCDst^(0+384),f
  5685                           
  5686                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  5687  064F  0AB5               	incf	_pCDCSrc^(0+384),f
  5688  0650  1903               	skipnz
  5689  0651  0AB6               	incf	(_pCDCSrc+1)^(0+384),f
  5690                           
  5691                           ;usb_device_cdc.c: 969: i--;
  5692  0652  03FA               	decf	CDCTxService@i,f
  5693  0653                     l4396:	
  5694  0653  08FA               	movf	CDCTxService@i,f
  5695  0654  1D03               	skipz
  5696  0655  2E45               	goto	l4388
  5697  0656                     l4398:	
  5698                           
  5699                           ;usb_device_cdc.c: 970: }
  5700                           ;usb_device_cdc.c: 971: }
  5701                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  5702  0656  0022               	movlb	2	; select bank2
  5703  0657  08E9               	movf	_cdc_tx_len^(0+256),f
  5704  0658  1D03               	skipz
  5705  0659  2E63               	goto	l4406
  5706                           
  5707                           ;usb_device_cdc.c: 978: {
  5708                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  5709  065A  087B               	movf	CDCTxService@byte_to_send,w
  5710  065B  3A40               	xorlw	64
  5711  065C  1D03               	skipz
  5712  065D  2E60               	goto	l4404
  5713                           
  5714                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  5715  065E  3002               	movlw	2
  5716  065F  2E61               	goto	L17
  5717  0660                     l4404:	
  5718                           
  5719                           ;usb_device_cdc.c: 981: else
  5720                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  5721  0660  3003               	movlw	3
  5722  0661                     L17:	
  5723  0661  0021               	movlb	1	; select bank1
  5724  0662  00E7               	movwf	_cdc_trf_state^(0+128)
  5725  0663                     l4406:	
  5726  0663  30A0               	movlw	160
  5727                           
  5728                           ;usb_device_cdc.c: 983: }
  5729                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  5730  0664  01F0               	clrf	?_USBTransferOnePacket
  5731  0665  0AF0               	incf	?_USBTransferOnePacket,f
  5732  0666  00F1               	movwf	?_USBTransferOnePacket+1
  5733  0667  01F2               	clrf	?_USBTransferOnePacket+2
  5734  0668  087B               	movf	CDCTxService@byte_to_send,w
  5735  0669  00F3               	movwf	?_USBTransferOnePacket+3
  5736  066A  3002               	movlw	2
  5737  066B  266F               	fcall	_USBTransferOnePacket
  5738  066C  0022               	movlb	2	; select bank2
  5739  066D  00E2               	movwf	_CDCDataInHandle^(0+256)
  5740  066E  0008               	return
  5741  066F                     __end_of_CDCTxService:	
  5742  066F                     __ptext38:	
  5743 ;; *************** function _USBTransferOnePacket *****************
  5744 ;; Defined at:
  5745 ;;		line 1015 in file "../framework/usb/usb_device.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  ep              1    wreg     unsigned char 
  5748 ;;  dir             1    0[COMMON] unsigned char 
  5749 ;;  data            2    1[COMMON] PTR unsigned char 
  5750 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  5751 ;;  len             1    3[COMMON] unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  ep              1    6[COMMON] unsigned char 
  5754 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  5755 ;;		 -> NULL(0), BDT(48), 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      PTR void 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 1C/1
  5762 ;;		On exit  : 1C/1
  5763 ;;		Unchanged: FFFE3/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        8 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_CDCInitEP
  5776 ;;		_getsUSBUSART
  5777 ;;		_CDCTxService
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _USBTransferOnePacket
  5783  066F                     _USBTransferOnePacket:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  5787                           ;USBTransferOnePacket@ep stored from wreg
  5788  066F  00F6               	movwf	USBTransferOnePacket@ep
  5789                           
  5790                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  5791                           ;usb_device.c: 1019: if(dir != 0)
  5792  0670  0870               	movf	USBTransferOnePacket@dir,w
  5793  0671  1903               	btfsc	3,2
  5794  0672  2E78               	goto	l4874
  5795                           
  5796                           ;usb_device.c: 1020: {
  5797                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  5798  0673  0876               	movf	USBTransferOnePacket@ep,w
  5799  0674  3EE0               	addlw	_pBDTEntryIn& (0+255)
  5800  0675  0086               	movwf	6
  5801  0676  0187               	clrf	7
  5802  0677  2E7D               	goto	L19
  5803  0678                     l4874:	
  5804                           ;usb_device.c: 1023: }
  5805                           
  5806                           
  5807                           ;usb_device.c: 1024: else
  5808                           ;usb_device.c: 1025: {
  5809                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  5810  0678  0876               	movf	USBTransferOnePacket@ep,w
  5811  0679  3EAC               	addlw	_pBDTEntryOut& (0+255)
  5812  067A  0086               	movwf	6
  5813  067B  3001               	movlw	1	; select bank3/4
  5814  067C  0087               	movwf	7
  5815  067D                     L19:	
  5816  067D  0801               	movf	1,w
  5817  067E  00F7               	movwf	USBTransferOnePacket@handle
  5818                           
  5819                           ;usb_device.c: 1028: }
  5820                           ;usb_device.c: 1032: if(handle == 0)
  5821  067F  08F7               	movf	USBTransferOnePacket@handle,f
  5822  0680  1903               	btfsc	3,2
  5823                           
  5824                           ;usb_device.c: 1033: {
  5825                           ;usb_device.c: 1034: return 0;
  5826  0681  3400               	retlw	0
  5827                           
  5828                           ;usb_device.c: 1035: }
  5829                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  5830  0682  0871               	movf	USBTransferOnePacket@data,w
  5831  0683  00F4               	movwf	??_USBTransferOnePacket
  5832  0684  307F               	movlw	127
  5833  0685  0572               	andwf	USBTransferOnePacket@data+1,w
  5834  0686  00F5               	movwf	??_USBTransferOnePacket+1
  5835  0687  0877               	movf	USBTransferOnePacket@handle,w
  5836  0688  3E02               	addlw	2
  5837  0689  0086               	movwf	6
  5838  068A  0187               	clrf	7
  5839  068B  0874               	movf	??_USBTransferOnePacket,w
  5840  068C  3FC0               	movwi [0]fsr1
  5841  068D  0875               	movf	??_USBTransferOnePacket+1,w
  5842  068E  3FC1               	movwi [1]fsr1
  5843                           
  5844                           ;usb_device.c: 1049: handle->CNT = len;
  5845  068F  0A77               	incf	USBTransferOnePacket@handle,w
  5846  0690  0086               	movwf	6
  5847  0691  0873               	movf	USBTransferOnePacket@len,w
  5848  0692  0081               	movwf	1
  5849                           
  5850                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  5851  0693  0877               	movf	USBTransferOnePacket@handle,w
  5852  0694  0086               	movwf	6
  5853  0695  3040               	movlw	64
  5854  0696  0581               	andwf	1,f
  5855                           
  5856                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  5857  0697  0877               	movf	USBTransferOnePacket@handle,w
  5858  0698  0086               	movwf	6
  5859  0699  1581               	bsf	1,3
  5860                           
  5861                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  5862  069A  0877               	movf	USBTransferOnePacket@handle,w
  5863  069B  0086               	movwf	6
  5864  069C  1781               	bsf	1,7
  5865                           
  5866                           ;usb_device.c: 1055: if(dir != 0)
  5867  069D  0870               	movf	USBTransferOnePacket@dir,w
  5868  069E  1903               	btfsc	3,2
  5869  069F  2EA4               	goto	l4894
  5870                           
  5871                           ;usb_device.c: 1056: {
  5872                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  5873  06A0  0876               	movf	USBTransferOnePacket@ep,w
  5874  06A1  3EE0               	addlw	_pBDTEntryIn& (0+255)
  5875  06A2  0086               	movwf	6
  5876  06A3  2EA9               	goto	L21
  5877  06A4                     l4894:	
  5878                           ;usb_device.c: 1059: }
  5879                           
  5880                           
  5881                           ;usb_device.c: 1060: else
  5882                           ;usb_device.c: 1061: {
  5883                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  5884  06A4  0876               	movf	USBTransferOnePacket@ep,w
  5885  06A5  3EAC               	addlw	_pBDTEntryOut& (0+255)
  5886  06A6  0086               	movwf	6
  5887  06A7  3001               	movlw	1	; select bank3/4
  5888  06A8  0087               	movwf	7
  5889  06A9                     L21:	
  5890  06A9  3004               	movlw	4
  5891  06AA  0681               	xorwf	1,f
  5892                           
  5893                           ;usb_device.c: 1064: }
  5894                           ;usb_device.c: 1065: return (void*)handle;
  5895  06AB  0877               	movf	USBTransferOnePacket@handle,w
  5896  06AC  0008               	return
  5897  06AD                     __end_of_USBTransferOnePacket:	
  5898  06AD                     __ptext18:	
  5899 ;; *************** function _USBIncrement1msInternalTimers *****************
  5900 ;; Defined at:
  5901 ;;		line 3051 in file "../framework/usb/usb_device.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;		None               void
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 1F/1D
  5912 ;;		On exit  : 1F/3
  5913 ;;		Unchanged: FFFE0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    1
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_USBDeviceTasks
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           
  5930                           ;psect for function _USBIncrement1msInternalTimers
  5931  06AD                     _USBIncrement1msInternalTimers:	
  5932                           
  5933                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5937  06AD  0023               	movlb	3	; select bank3
  5938  06AE  08B9               	movf	_USBBusIsSuspended^(0+384),f
  5939  06AF  1903               	btfsc	3,2
  5940                           
  5941                           ;usb_device.c: 3060: {
  5942                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  5943  06B0  0FBA               	incfsz	_USBTicksSinceSuspendEnd^(0+384),f
  5944                           
  5945                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  5946  06B1  0008               	return
  5947                           
  5948                           ;usb_device.c: 3064: {
  5949                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  5950  06B2  30FF               	movlw	255
  5951  06B3  00BA               	movwf	_USBTicksSinceSuspendEnd^(0+384)
  5952  06B4  0008               	return
  5953  06B5                     __end_of_USBIncrement1msInternalTimers:	
  5954  06B5                     __ptext17:	
  5955 ;; *************** function _USBStallHandler *****************
  5956 ;; Defined at:
  5957 ;;		line 2222 in file "../framework/usb/usb_device.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;		None               void
  5964 ;; Registers used:
  5965 ;;		wreg, fsr1l, fsr1h
  5966 ;; Tracked objects:
  5967 ;;		On entry : 1F/1D
  5968 ;;		On exit  : 1F/1D
  5969 ;;		Unchanged: FFFE0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_USBDeviceTasks
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function _USBStallHandler
  5987  06B5                     _USBStallHandler:	
  5988                           
  5989                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _USBStallHandler: [wregfsr1]
  5993  06B5  1C18               	btfss	24,0	;volatile
  5994  06B6  2ED0               	goto	l4804
  5995                           
  5996                           ;usb_device.c: 2234: {
  5997                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5998  06B7  0020               	movlb	0	; select bank0
  5999  06B8  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6000  06B9  0086               	movwf	6
  6001  06BA  0187               	clrf	7
  6002  06BB  0801               	movf	1,w
  6003  06BC  3A80               	xorlw	128
  6004  06BD  1D03               	skipz
  6005  06BE  2ECE               	goto	l4802
  6006  06BF  0021               	movlb	1	; select bank1
  6007  06C0  0860               	movf	_pBDTEntryIn^(0+128),w
  6008  06C1  0086               	movwf	6
  6009  06C2  0801               	movf	1,w
  6010  06C3  3A84               	xorlw	132
  6011  06C4  1D03               	skipz
  6012  06C5  2ECE               	goto	l4802
  6013                           
  6014                           ;usb_device.c: 2237: {
  6015                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6016  06C6  0020               	movlb	0	; select bank0
  6017  06C7  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6018  06C8  0086               	movwf	6
  6019  06C9  300C               	movlw	12
  6020  06CA  0081               	movwf	1
  6021                           
  6022                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6023  06CB  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6024  06CC  0086               	movwf	6
  6025  06CD  1781               	bsf	1,7
  6026  06CE                     l4802:	
  6027                           
  6028                           ;usb_device.c: 2241: }
  6029                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  6030  06CE  003D               	movlb	29	; select bank29
  6031  06CF  1018               	bcf	24,0	;volatile
  6032  06D0                     l4804:	
  6033                           
  6034                           ;usb_device.c: 2243: }
  6035                           ;usb_device.c: 2245: (UIR &= 0xDF);
  6036  06D0  1290               	bcf	16,5	;volatile
  6037  06D1  0008               	return
  6038  06D2                     __end_of_USBStallHandler:	
  6039  06D2                     __ptext16:	
  6040 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6041 ;; Defined at:
  6042 ;;		line 1436 in file "../framework/usb/usb_device.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/2
  6053 ;;		On exit  : 1C/0
  6054 ;;		Unchanged: FFFE0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;Total ram usage:        2 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_USBDeviceTasks
  6067 ;;		_USBCtrlEPServiceComplete
  6068 ;;		_USBCtrlTrfRxService
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _USBCtrlEPAllowStatusStage
  6074  06D2                     _USBCtrlEPAllowStatusStage:	
  6075  06D2                     l4760:	
  6076                           ;incstack = 0
  6077                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6078                           
  6079                           
  6080                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  6081  06D2  0022               	movlb	2	; select bank2
  6082  06D3  08E5               	movf	_USBStatusStageEnabledFlag1^(0+256),f
  6083  06D4  1D03               	skipz
  6084  06D5  0008               	return
  6085                           
  6086                           ;usb_device.c: 1443: {
  6087                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  6088  06D6  3001               	movlw	1
  6089  06D7  00E5               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6090                           
  6091                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  6092  06D8  08E6               	movf	_USBStatusStageEnabledFlag2^(0+256),f
  6093  06D9  1D03               	skipz
  6094  06DA  0008               	return
  6095                           
  6096                           ;usb_device.c: 1446: {
  6097                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  6098  06DB  00E6               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6099                           
  6100                           ;usb_device.c: 1451: if(controlTransferState == 2)
  6101  06DC  0021               	movlb	1	; select bank1
  6102  06DD  0868               	movf	_controlTransferState^(0+128),w
  6103  06DE  3A02               	xorlw	2
  6104  06DF  1D03               	skipz
  6105  06E0  2EED               	goto	l4774
  6106                           
  6107                           ;usb_device.c: 1452: {
  6108                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  6109  06E1  0A60               	incf	_pBDTEntryIn^(0+128),w
  6110  06E2  0086               	movwf	6
  6111  06E3  0187               	clrf	7
  6112  06E4  0181               	clrf	1
  6113                           
  6114                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6115  06E5  0860               	movf	_pBDTEntryIn^(0+128),w
  6116  06E6  0086               	movwf	6
  6117  06E7  3048               	movlw	72
  6118  06E8  0081               	movwf	1
  6119                           
  6120                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6121  06E9  0860               	movf	_pBDTEntryIn^(0+128),w
  6122  06EA  0086               	movwf	6
  6123  06EB  1781               	bsf	1,7
  6124                           
  6125                           ;usb_device.c: 1456: }
  6126  06EC  0008               	return
  6127  06ED                     l4774:	
  6128                           
  6129                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  6130  06ED  0B68               	decfsz	_controlTransferState^(0+128),w
  6131  06EE  0008               	return
  6132                           
  6133                           ;usb_device.c: 1458: {
  6134                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  6135  06EF  0023               	movlb	3	; select bank3
  6136  06F0  01B7               	clrf	_BothEP0OutUOWNsSet^(0+384)
  6137                           
  6138                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  6139  06F1  0020               	movlb	0	; select bank0
  6140  06F2  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
  6141  06F3  0086               	movwf	6
  6142  06F4  3008               	movlw	8
  6143  06F5  0187               	clrf	7
  6144  06F6  0081               	movwf	1
  6145                           
  6146                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6147  06F7  3050               	movlw	80
  6148  06F8  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  6149  06F9  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  6150  06FA  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6151  06FB  3E02               	addlw	2
  6152  06FC  0086               	movwf	6
  6153  06FD  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  6154  06FE  3FC0               	movwi [0]fsr1
  6155  06FF  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  6156  0700  3FC1               	movwi [1]fsr1
  6157                           
  6158                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6159  0701  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6160  0702  0086               	movwf	6
  6161  0703  3004               	movlw	4
  6162  0704  0081               	movwf	1
  6163                           
  6164                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6165  0705  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6166  0706  0086               	movwf	6
  6167  0707  1781               	bsf	1,7
  6168                           
  6169                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  6170  0708  0023               	movlb	3	; select bank3
  6171  0709  01B7               	clrf	_BothEP0OutUOWNsSet^(0+384)
  6172  070A  0AB7               	incf	_BothEP0OutUOWNsSet^(0+384),f
  6173                           
  6174                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  6175  070B  0020               	movlb	0	; select bank0
  6176  070C  0A6F               	incf	_pBDTEntryEP0OutNext,w
  6177  070D  0086               	movwf	6
  6178  070E  3008               	movlw	8
  6179  070F  0081               	movwf	1
  6180                           
  6181                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6182  0710  3050               	movlw	80
  6183  0711  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  6184  0712  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  6185  0713  086F               	movf	_pBDTEntryEP0OutNext,w
  6186  0714  3E02               	addlw	2
  6187  0715  0086               	movwf	6
  6188  0716  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  6189  0717  3FC0               	movwi [0]fsr1
  6190  0718  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  6191  0719  3FC1               	movwi [1]fsr1
  6192                           
  6193                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  6194  071A  086F               	movf	_pBDTEntryEP0OutNext,w
  6195  071B  0086               	movwf	6
  6196  071C  3080               	movlw	128
  6197  071D  0081               	movwf	1
  6198  071E  0008               	return
  6199  071F                     __end_of_USBCtrlEPAllowStatusStage:	
  6200  071F                     __ptext2:	
  6201 ;; *************** function _USBCtrlEPService *****************
  6202 ;; Defined at:
  6203 ;;		line 2392 in file "../framework/usb/usb_device.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  setup_cnt       1   12[BANK0 ] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;		None               void
  6210 ;; Registers used:
  6211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 1F/2
  6214 ;;		On exit  : 1C/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;Total ram usage:        3 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    9
  6224 ;; This function calls:
  6225 ;;		_USBCtrlTrfSetupHandler
  6226 ;;		_USBCtrlTrfOutHandler
  6227 ;;		_USBCtrlTrfInHandler
  6228 ;; This function is called by:
  6229 ;;		_USBDeviceTasks
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           
  6234                           ;psect for function _USBCtrlEPService
  6235  071F                     _USBCtrlEPService:	
  6236                           
  6237                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  6238                           
  6239                           ;incstack = 0
  6240                           ; Regs used in _USBCtrlEPService: [allreg]
  6241  071F  302D               	movlw	45
  6242  0720  00E7               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  6243                           
  6244                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  6245  0721  0021               	movlb	1	; select bank1
  6246  0722  086F               	movf	_USTATcopy^(0+128),w
  6247  0723  39FD               	andlw	253
  6248  0724  1D03               	btfss	3,2
  6249  0725  2F67               	goto	l4838
  6250                           
  6251                           ;usb_device.c: 2402: {
  6252                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  6253  0726  366F               	lsrf	_USTATcopy^(0+128),w
  6254  0727  393F               	andlw	63
  6255  0728  0709               	addwf	9,w
  6256  0729  0709               	addwf	9,w
  6257  072A  3E20               	addlw	32
  6258  072B  0020               	movlb	0	; select bank0
  6259  072C  00EE               	movwf	_pBDTEntryEP0OutCurrent
  6260                           
  6261                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6262  072D  00EF               	movwf	_pBDTEntryEP0OutNext
  6263                           
  6264                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  6265  072E  3004               	movlw	4
  6266  072F  06EF               	xorwf	_pBDTEntryEP0OutNext,f
  6267                           
  6268                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  6269  0730  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6270  0731  0086               	movwf	6
  6271  0732  0187               	clrf	7
  6272  0733  0C01               	rrf	1,w
  6273  0734  0C89               	rrf	9,f
  6274  0735  390F               	andlw	15
  6275  0736  3A0D               	xorlw	13
  6276  0737  1D03               	skipz
  6277  0738  2F65               	goto	l4836
  6278                           
  6279                           ;usb_device.c: 2419: {
  6280                           ;usb_device.c: 2420: unsigned char setup_cnt;
  6281                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  6282  0739  01EC               	clrf	USBCtrlEPService@setup_cnt
  6283  073A                     l4824:	
  6284                           
  6285                           ;usb_device.c: 2427: {
  6286                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  6287  073A  086C               	movf	USBCtrlEPService@setup_cnt,w
  6288  073B  3E50               	addlw	80
  6289  073C  0086               	movwf	6
  6290  073D  0187               	clrf	7
  6291  073E  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6292  073F  3E02               	addlw	2
  6293  0740  0084               	movwf	4
  6294  0741  0185               	clrf	5
  6295  0742  3F00               	moviw [0]fsr0
  6296  0743  00EA               	movwf	??_USBCtrlEPService
  6297  0744  3F01               	moviw [1]fsr0
  6298  0745  00EB               	movwf	??_USBCtrlEPService+1
  6299  0746  086A               	movf	??_USBCtrlEPService,w
  6300  0747  0084               	movwf	4
  6301  0748  086B               	movf	??_USBCtrlEPService+1,w
  6302  0749  0085               	movwf	5
  6303  074A  0800               	movf	0,w
  6304  074B  0081               	movwf	1
  6305                           
  6306                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  6307  074C  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6308  074D  3E02               	addlw	2
  6309  074E  0086               	movwf	6
  6310  074F  3001               	movlw	1
  6311  0750  0781               	addwf	1,f
  6312  0751  3141               	addfsr 1,1
  6313  0752  1803               	skipnc
  6314  0753  0A81               	incf	1,f
  6315  0754  3008               	movlw	8
  6316  0755  0AEC               	incf	USBCtrlEPService@setup_cnt,f
  6317  0756  026C               	subwf	USBCtrlEPService@setup_cnt,w
  6318  0757  1C03               	skipc
  6319  0758  2F3A               	goto	l4824
  6320                           
  6321                           ;usb_device.c: 2430: }
  6322                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6323  0759  3050               	movlw	80
  6324  075A  00EA               	movwf	??_USBCtrlEPService
  6325  075B  01EB               	clrf	??_USBCtrlEPService+1
  6326  075C  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6327  075D  3E02               	addlw	2
  6328  075E  0086               	movwf	6
  6329  075F  0187               	clrf	7
  6330  0760  086A               	movf	??_USBCtrlEPService,w
  6331  0761  3FC0               	movwi [0]fsr1
  6332  0762  086B               	movf	??_USBCtrlEPService+1,w
  6333  0763  3FC1               	movwi [1]fsr1
  6334                           
  6335                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  6336  0764  2C0E               	ljmp	l5162
  6337  0765                     l4836:	
  6338                           ;usb_device.c: 2435: }
  6339                           
  6340                           
  6341                           ;usb_device.c: 2436: else
  6342                           ;usb_device.c: 2437: {
  6343                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  6344  0765  3189  29C6         	ljmp	l5188
  6345  0767                     l4838:	
  6346                           
  6347                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  6348  0767  30FD               	movlw	253
  6349  0768  056F               	andwf	_USTATcopy^(0+128),w
  6350  0769  0020               	movlb	0	; select bank0
  6351  076A  00EA               	movwf	??_USBCtrlEPService
  6352  076B  3A04               	xorlw	4
  6353  076C  1D03               	skipz
  6354  076D  0008               	return
  6355                           
  6356                           ;usb_device.c: 2443: {
  6357                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  6358  076E  318E  2EA5         	ljmp	l5200
  6359  0770                     __end_of_USBCtrlEPService:	
  6360  0770                     __ptext33:	
  6361 ;; *************** function _LED_Enable *****************
  6362 ;; Defined at:
  6363 ;;		line 170 in file "../bsp/pic16f1459/leds.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  led             1    wreg     enum E2
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  led             1    0[COMMON] enum E2
  6368 ;; Return value:  Size  Location     Type
  6369 ;;		None               void
  6370 ;; Registers used:
  6371 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 17F/7
  6374 ;;		On exit  : 179/1
  6375 ;;		Unchanged: FFE80/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;Total ram usage:        1 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    1
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_SYSTEM_Initialize
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _LED_Enable
  6393  0770                     _LED_Enable:	
  6394                           
  6395                           ;incstack = 0
  6396                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  6397                           ;LED_Enable@led stored from wreg
  6398  0770  00F0               	movwf	LED_Enable@led
  6399                           
  6400                           ;leds.c: 171: switch(led)
  6401  0771  2F75               	goto	l3392
  6402  0772                     l356:	
  6403                           ;leds.c: 172: {
  6404                           ;leds.c: 173: case LED_D1:
  6405                           
  6406                           
  6407                           ;leds.c: 174: TRISCbits.TRISC2 = 0;
  6408  0772  0021               	movlb	1	; select bank1
  6409  0773  110E               	bcf	14,2	;volatile
  6410                           
  6411                           ;leds.c: 175: break;
  6412  0774  0008               	return
  6413  0775                     l3392:	
  6414  0775  0870               	movf	LED_Enable@led,w
  6415                           
  6416                           ; Switch size 1, requested type "speed"
  6417                           ; Number of cases is 2, Range of values is 0 to 1
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            7     4 (average)
  6421                           ; direct_byte           10     6 (fixed)
  6422                           ; jumptable            260     6 (fixed)
  6423                           ; rangetable             6     4 (fixed)
  6424                           ; spacedrange            9     6 (fixed)
  6425                           ; locatedrange           2     3 (fixed)
  6426                           ;	Chosen strategy is simple_byte
  6427  0776  3A00               	xorlw	0	; case 0
  6428  0777  1903               	skipnz
  6429  0778  2F7D               	goto	l359
  6430  0779  3A01               	xorlw	1	; case 1
  6431  077A  1903               	skipnz
  6432  077B  2F72               	goto	l356
  6433  077C  2F7D               	goto	l359
  6434  077D                     l359:	
  6435  077D  0008               	return
  6436  077E                     __end_of_LED_Enable:	
  6437  077E                     __ptext32:	
  6438 ;; *************** function _BUTTON_Enable *****************
  6439 ;; Defined at:
  6440 ;;		line 86 in file "../bsp/pic16f1459/buttons.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  button          1    wreg     enum E2603
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  button          1    0[COMMON] enum E2603
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 179/7
  6451 ;;		On exit  : 179/7
  6452 ;;		Unchanged: FFE86/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;Total ram usage:        1 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_SYSTEM_Initialize
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           
  6469                           ;psect for function _BUTTON_Enable
  6470  077E                     _BUTTON_Enable:	
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  6474                           ;BUTTON_Enable@button stored from wreg
  6475  077E  00F0               	movwf	BUTTON_Enable@button
  6476                           
  6477                           ; Switch size 1, requested type "speed"
  6478                           ; Number of cases is 2, Range of values is 0 to 1
  6479                           ; switch strategies available:
  6480                           ; Name         Instructions Cycles
  6481                           ; simple_byte            7     4 (average)
  6482                           ; direct_byte           10     6 (fixed)
  6483                           ; jumptable            260     6 (fixed)
  6484                           ; rangetable             6     4 (fixed)
  6485                           ; spacedrange            9     6 (fixed)
  6486                           ; locatedrange           2     3 (fixed)
  6487                           ;	Chosen strategy is simple_byte
  6488                           
  6489                           ;buttons.c: 87: switch(button)
  6490  077F  3A00               	xorlw	0	; case 0
  6491  0780  1903               	skipnz
  6492  0781  2F86               	goto	l320
  6493  0782  3A01               	xorlw	1	; case 1
  6494  0783  1903               	skipnz
  6495  0784  2F86               	goto	l320
  6496  0785  2F86               	goto	l320
  6497  0786                     l320:	
  6498  0786  0008               	return
  6499  0787                     __end_of_BUTTON_Enable:	
  6500  0787                     __ptext23:	
  6501 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  6502 ;; Defined at:
  6503 ;;		line 76 in file "../src/app_led_usb_status.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 1F/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: FFFE0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    2
  6524 ;; This function calls:
  6525 ;;		_LED_Off
  6526 ;;		_LED_On
  6527 ;; This function is called by:
  6528 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function _APP_LEDUpdateUSBStatus
  6534  0787                     _APP_LEDUpdateUSBStatus:	
  6535  0787                     l4408:	
  6536                           ;incstack = 0
  6537                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6538                           
  6539                           
  6540                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  6541                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  6542  0787  003D               	movlb	29	; select bank29
  6543  0788  1C8E               	btfss	14,1	;volatile
  6544  0789  2FBE               	goto	l4440
  6545                           
  6546                           ;app_led_usb_status.c: 80: {
  6547                           ;app_led_usb_status.c: 81: LED_Off(LED_D1);
  6548  078A  3001               	movlw	1
  6549  078B  2FC9               	ljmp	_LED_Off
  6550  078C                     l4414:	
  6551                           
  6552                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  6553  078C  0022               	movlb	2	; select bank2
  6554  078D  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+256),w
  6555  078E  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6556  078F  1D03               	skipz
  6557  0790  2F95               	goto	l4418
  6558                           
  6559                           ;app_led_usb_status.c: 91: {
  6560                           ;app_led_usb_status.c: 92: LED_On(LED_D1);
  6561  0791  3001               	movlw	1
  6562  0792  27D7  3180         	fcall	_LED_On
  6563                           
  6564                           ;app_led_usb_status.c: 93: }
  6565  0794  2FC4               	goto	l4442
  6566  0795                     l4418:	
  6567                           
  6568                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  6569  0795  0860               	movf	APP_LEDUpdateUSBStatus@ledCount^(0+256),w
  6570  0796  3A4B               	xorlw	75
  6571  0797  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6572  0798  1D03               	skipz
  6573  0799  2F9E               	goto	l4422
  6574                           
  6575                           ;app_led_usb_status.c: 95: {
  6576                           ;app_led_usb_status.c: 96: LED_Off(LED_D1);
  6577  079A  3001               	movlw	1
  6578  079B  27C9  3180         	fcall	_LED_Off
  6579                           
  6580                           ;app_led_usb_status.c: 97: }
  6581  079D  2FC4               	goto	l4442
  6582  079E                     l4422:	
  6583                           
  6584                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  6585  079E  3000               	movlw	0
  6586  079F  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6587  07A0  3097               	movlw	151
  6588  07A1                     L12:	
  6589  07A1  1903               	skipnz
  6590  07A2  0260               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+256),w
  6591  07A3  1C03               	skipc
  6592  07A4  2FC4               	goto	l4442
  6593                           
  6594                           ;app_led_usb_status.c: 99: {
  6595                           ;app_led_usb_status.c: 100: ledCount = 0;
  6596  07A5  01E0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+256)
  6597  07A6  01E1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256)
  6598  07A7  2FC4               	goto	l4442
  6599  07A8                     l4426:	
  6600                           ;app_led_usb_status.c: 101: }
  6601                           ;app_led_usb_status.c: 102: break;
  6602                           
  6603                           
  6604                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  6605  07A8  0022               	movlb	2	; select bank2
  6606  07A9  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+256),w
  6607  07AA  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6608  07AB  1D03               	skipz
  6609  07AC  2FB1               	goto	l4430
  6610                           
  6611                           ;app_led_usb_status.c: 108: {
  6612                           ;app_led_usb_status.c: 109: LED_On(LED_D1);
  6613  07AD  3001               	movlw	1
  6614  07AE  27D7  3180         	fcall	_LED_On
  6615                           
  6616                           ;app_led_usb_status.c: 110: }
  6617  07B0  2FC4               	goto	l4442
  6618  07B1                     l4430:	
  6619                           
  6620                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  6621  07B1  0860               	movf	APP_LEDUpdateUSBStatus@ledCount^(0+256),w
  6622  07B2  3A32               	xorlw	50
  6623  07B3  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6624  07B4  1D03               	skipz
  6625  07B5  2FBA               	goto	l4434
  6626                           
  6627                           ;app_led_usb_status.c: 112: {
  6628                           ;app_led_usb_status.c: 113: LED_Off(LED_D1);
  6629  07B6  3001               	movlw	1
  6630  07B7  27C9  3180         	fcall	_LED_Off
  6631                           
  6632                           ;app_led_usb_status.c: 114: }
  6633  07B9  2FC4               	goto	l4442
  6634  07BA                     l4434:	
  6635                           
  6636                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  6637  07BA  3003               	movlw	3
  6638  07BB  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),w
  6639  07BC  30B7               	movlw	183
  6640  07BD  2FA1               	goto	L12
  6641  07BE                     l4440:	
  6642  07BE  0021               	movlb	1	; select bank1
  6643  07BF  0865               	movf	_USBDeviceState^(0+128),w
  6644                           
  6645                           ; Switch size 1, requested type "speed"
  6646                           ; Number of cases is 1, Range of values is 32 to 32
  6647                           ; switch strategies available:
  6648                           ; Name         Instructions Cycles
  6649                           ; simple_byte            4     3 (average)
  6650                           ; direct_byte           11     9 (fixed)
  6651                           ; jumptable            263     9 (fixed)
  6652                           ;	Chosen strategy is simple_byte
  6653  07C0  3A20               	xorlw	32	; case 32
  6654  07C1  1903               	skipnz
  6655  07C2  2F8C               	goto	l4414
  6656  07C3  2FA8               	goto	l4426
  6657  07C4                     l4442:	
  6658                           
  6659                           ;app_led_usb_status.c: 123: ledCount++;
  6660  07C4  0022               	movlb	2	; select bank2
  6661  07C5  0AE0               	incf	APP_LEDUpdateUSBStatus@ledCount^(0+256),f
  6662  07C6  1903               	skipnz
  6663  07C7  0AE1               	incf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+256),f
  6664  07C8  0008               	return
  6665  07C9                     __end_of_APP_LEDUpdateUSBStatus:	
  6666  07C9                     __ptext25:	
  6667 ;; *************** function _LED_Off *****************
  6668 ;; Defined at:
  6669 ;;		line 83 in file "../bsp/pic16f1459/leds.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  led             1    wreg     enum E2
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  led             1    0[COMMON] enum E2
  6674 ;; Return value:  Size  Location     Type
  6675 ;;		None               void
  6676 ;; Registers used:
  6677 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/1D
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: FFFE0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;Total ram usage:        1 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_APP_LEDUpdateUSBStatus
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           
  6698                           ;psect for function _LED_Off
  6699  07C9                     _LED_Off:	
  6700                           
  6701                           ;incstack = 0
  6702                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  6703                           ;LED_Off@led stored from wreg
  6704  07C9  00F0               	movwf	LED_Off@led
  6705                           
  6706                           ;leds.c: 84: switch(led)
  6707  07CA  2FCE               	goto	l4448
  6708  07CB                     l335:	
  6709                           ;leds.c: 85: {
  6710                           ;leds.c: 86: case LED_D1:
  6711                           
  6712                           
  6713                           ;leds.c: 87: LATCbits.LATC2 = 0;
  6714  07CB  0022               	movlb	2	; select bank2
  6715  07CC  110E               	bcf	14,2	;volatile
  6716                           
  6717                           ;leds.c: 88: break;
  6718  07CD  0008               	return
  6719  07CE                     l4448:	
  6720  07CE  0870               	movf	LED_Off@led,w
  6721                           
  6722                           ; Switch size 1, requested type "speed"
  6723                           ; Number of cases is 2, Range of values is 0 to 1
  6724                           ; switch strategies available:
  6725                           ; Name         Instructions Cycles
  6726                           ; simple_byte            7     4 (average)
  6727                           ; direct_byte           10     6 (fixed)
  6728                           ; jumptable            260     6 (fixed)
  6729                           ; rangetable             6     4 (fixed)
  6730                           ; spacedrange            9     6 (fixed)
  6731                           ; locatedrange           2     3 (fixed)
  6732                           ;	Chosen strategy is simple_byte
  6733  07CF  3A00               	xorlw	0	; case 0
  6734  07D0  1903               	skipnz
  6735  07D1  2FD6               	goto	l338
  6736  07D2  3A01               	xorlw	1	; case 1
  6737  07D3  1903               	skipnz
  6738  07D4  2FCB               	goto	l335
  6739  07D5  2FD6               	goto	l338
  6740  07D6                     l338:	
  6741  07D6  0008               	return
  6742  07D7                     __end_of_LED_Off:	
  6743  07D7                     __ptext24:	
  6744 ;; *************** function _LED_On *****************
  6745 ;; Defined at:
  6746 ;;		line 54 in file "../bsp/pic16f1459/leds.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  led             1    wreg     enum E2
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  led             1    0[COMMON] enum E2
  6751 ;; Return value:  Size  Location     Type
  6752 ;;		None               void
  6753 ;; Registers used:
  6754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 1F/2
  6757 ;;		On exit  : 1F/2
  6758 ;;		Unchanged: FFFE0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;Total ram usage:        1 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_APP_LEDUpdateUSBStatus
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _LED_On
  6776  07D7                     _LED_On:	
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  6780                           ;LED_On@led stored from wreg
  6781  07D7  00F0               	movwf	LED_On@led
  6782                           
  6783                           ;leds.c: 55: switch(led)
  6784  07D8  2FDB               	goto	l4454
  6785  07D9                     l328:	
  6786                           ;leds.c: 56: {
  6787                           ;leds.c: 57: case LED_D1:
  6788                           
  6789                           
  6790                           ;leds.c: 58: LATCbits.LATC2 = 1;
  6791  07D9  150E               	bsf	14,2	;volatile
  6792                           
  6793                           ;leds.c: 59: break;
  6794  07DA  0008               	return
  6795  07DB                     l4454:	
  6796  07DB  0870               	movf	LED_On@led,w
  6797                           
  6798                           ; Switch size 1, requested type "speed"
  6799                           ; Number of cases is 2, Range of values is 0 to 1
  6800                           ; switch strategies available:
  6801                           ; Name         Instructions Cycles
  6802                           ; simple_byte            7     4 (average)
  6803                           ; direct_byte           10     6 (fixed)
  6804                           ; jumptable            260     6 (fixed)
  6805                           ; rangetable             6     4 (fixed)
  6806                           ; spacedrange            9     6 (fixed)
  6807                           ; locatedrange           2     3 (fixed)
  6808                           ;	Chosen strategy is simple_byte
  6809  07DC  3A00               	xorlw	0	; case 0
  6810  07DD  1903               	skipnz
  6811  07DE  2FE3               	goto	l331
  6812  07DF  3A01               	xorlw	1	; case 1
  6813  07E0  1903               	skipnz
  6814  07E1  2FD9               	goto	l328
  6815  07E2  2FE3               	goto	l331
  6816  07E3                     l331:	
  6817  07E3  0008               	return
  6818  07E4                     __end_of_LED_On:	
  6819                           
  6820                           	psect	bssBANK0
  6821  006E                     __pbssBANK0:	
  6822  006E                     _pBDTEntryEP0OutCurrent:	
  6823  006E                     	ds	1
  6824  006F                     _pBDTEntryEP0OutNext:	
  6825  006F                     	ds	1
  6826                           
  6827                           	psect	bssBANK1
  6828  00E0                     __pbssBANK1:	
  6829  00E0                     _pBDTEntryIn:	
  6830  00E0                     	ds	3
  6831  00E3                     _CDCDataOutHandle:	
  6832  00E3                     	ds	1
  6833  00E4                     _USBDeferStatusStagePacket:	
  6834  00E4                     	ds	1
  6835  00E5                     _USBDeviceState:	
  6836  00E5                     	ds	1
  6837  00E6                     _cdc_rx_len:	
  6838  00E6                     	ds	1
  6839  00E7                     _cdc_trf_state:	
  6840  00E7                     	ds	1
  6841  00E8                     _controlTransferState:	
  6842  00E8                     	ds	1
  6843  00E9                     store_key_level@idx_key:	
  6844  00E9                     	ds	1
  6845  00EA                     _inPipes:	
  6846  00EA                     	ds	5
  6847  00EF                     _USTATcopy:	
  6848  00EF                     	ds	1
  6849                           
  6850                           	psect	bssBANK2
  6851  0160                     __pbssBANK2:	
  6852  0160                     APP_LEDUpdateUSBStatus@ledCount:	
  6853  0160                     	ds	2
  6854  0162                     _CDCDataInHandle:	
  6855  0162                     	ds	1
  6856  0163                     _USBDeferINDataStagePackets:	
  6857  0163                     	ds	1
  6858  0164                     _USBDeferOUTDataStagePackets:	
  6859  0164                     	ds	1
  6860  0165                     _USBStatusStageEnabledFlag1:	
  6861  0165                     	ds	1
  6862  0166                     _USBStatusStageEnabledFlag2:	
  6863  0166                     	ds	1
  6864  0167                     _USBStatusStageTimeoutCounter:	
  6865  0167                     	ds	1
  6866  0168                     _buttonPressed:	
  6867  0168                     	ds	1
  6868  0169                     _cdc_tx_len:	
  6869  0169                     	ds	1
  6870  016A                     _endpoint_number:	
  6871  016A                     	ds	1
  6872  016B                     _pDst:	
  6873  016B                     	ds	1
  6874  016C                     _shortPacketStatus:	
  6875  016C                     	ds	1
  6876  016D                     _wait_timer:	
  6877  016D                     	ds	1
  6878  016E                     is_end_of_scan@scan_counter:	
  6879  016E                     	ds	1
  6880  016F                     _USBActiveConfiguration:	
  6881  016F                     	ds	1
  6882                           
  6883                           	psect	bssBANK3
  6884  01A0                     __pbssBANK3:	
  6885  01A0                     _outPipes:	
  6886  01A0                     	ds	6
  6887  01A6                     _ep_data_in:	
  6888  01A6                     	ds	3
  6889  01A9                     _ep_data_out:	
  6890  01A9                     	ds	3
  6891  01AC                     _pBDTEntryOut:	
  6892  01AC                     	ds	3
  6893  01AF                     _midiData:	
  6894  01AF                     	ds	2
  6895  01B1                     _note_event:	
  6896  01B1                     	ds	2
  6897  01B3                     _pCDCDst:	
  6898  01B3                     	ds	2
  6899  01B5                     _pCDCSrc:	
  6900  01B5                     	ds	2
  6901  01B7                     _BothEP0OutUOWNsSet:	
  6902  01B7                     	ds	1
  6903  01B8                     _RemoteWakeup:	
  6904  01B8                     	ds	1
  6905  01B9                     _USBBusIsSuspended:	
  6906  01B9                     	ds	1
  6907  01BA                     _USBTicksSinceSuspendEnd:	
  6908  01BA                     	ds	1
  6909  01BB                     _cdc_mem_type:	
  6910  01BB                     	ds	1
  6911  01BC                     _is_initialized:	
  6912  01BC                     	ds	1
  6913  01BD                     scan_task@state:	
  6914  01BD                     	ds	1
  6915  01BE                     _dummy_encapsulated_cmd_response:	
  6916  01BE                     	ds	8
  6917  01C6                     _line_coding:	
  6918  01C6                     	ds	7
  6919  01CD                     _USBAlternateInterface:	
  6920  01CD                     	ds	2
  6921                           
  6922                           	psect	dataBANK3
  6923  01CF                     __pdataBANK3:	
  6924  01CF                     _buttonMessage:	
  6925  01CF                     	ds	18
  6926                           
  6927                           	psect	bssBANK4
  6928  0220                     __pbssBANK4:	
  6929  0220                     _readBuffer:	
  6930  0220                     	ds	64
  6931                           
  6932                           	psect	bssBANK5
  6933  02A0                     __pbssBANK5:	
  6934  02A0                     _writeBuffer:	
  6935  02A0                     	ds	64
  6936                           
  6937                           	psect	bssBANK6
  6938  0320                     __pbssBANK6:	
  6939  0320                     _adc_levels:	
  6940  0320                     	ds	64
  6941                           
  6942                           	psect	clrtext
  6943  0C24                     clear_ram0:	
  6944                           ;	Called with FSR0 containing the base address, and
  6945                           ;	WREG with the size to clear
  6946                           
  6947  0C24  0064               	clrwdt	;clear the watchdog before getting into this loop
  6948  0C25                     clrloop0:	
  6949  0C25  0180               	clrf	0	;clear RAM location pointed to by FSR
  6950  0C26  3101               	addfsr 0,1
  6951  0C27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6952  0C28  2C25               	goto	clrloop0	;have we reached the end yet?
  6953  0C29  3400               	retlw	0	;all done for this memory range, return
  6954                           
  6955                           	psect	inittext
  6956  0C2A                     init_ram:	
  6957  0C2A  00FE               	movwf	126
  6958  0C2B                     initloop:	
  6959  0C2B  0012               	moviw fsr0++
  6960  0C2C  001E               	movwi fsr1++
  6961  0C2D  0BFE               	decfsz	126,f
  6962  0C2E  2C2B               	goto	initloop
  6963  0C2F  3400               	retlw	0
  6964                           
  6965                           	psect	cstackBANK3
  6966  01E1                     __pcstackBANK3:	
  6967  01E1                     USBDeviceTasks@i:	
  6968                           
  6969                           ; 1 bytes @ 0x0
  6970  01E1                     	ds	1
  6971                           
  6972                           	psect	cstackCOMMON
  6973  0070                     __pcstackCOMMON:	
  6974  0070                     ?_CDCInitEP:	
  6975  0070                     ??_BUTTON_IsPressed:	
  6976                           ; 0 bytes @ 0x0
  6977                           
  6978  0070                     ?_putrsUSBUSART:	
  6979                           ; 0 bytes @ 0x0
  6980                           
  6981  0070                     ??_putrsUSBUSART:	
  6982                           ; 0 bytes @ 0x0
  6983                           
  6984  0070                     ?_putUSBUSART:	
  6985                           ; 0 bytes @ 0x0
  6986                           
  6987  0070                     ?_CDCTxService:	
  6988                           ; 0 bytes @ 0x0
  6989                           
  6990  0070                     ?_LED_Off:	
  6991                           ; 0 bytes @ 0x0
  6992                           
  6993  0070                     ??_LED_Off:	
  6994                           ; 0 bytes @ 0x0
  6995                           
  6996  0070                     ?_LED_On:	
  6997                           ; 0 bytes @ 0x0
  6998                           
  6999  0070                     ??_LED_On:	
  7000                           ; 0 bytes @ 0x0
  7001                           
  7002  0070                     ?_SYSTEM_Initialize:	
  7003                           ; 0 bytes @ 0x0
  7004                           
  7005  0070                     ?_USBDeviceInit:	
  7006                           ; 0 bytes @ 0x0
  7007                           
  7008  0070                     ??_USBDeviceInit:	
  7009                           ; 0 bytes @ 0x0
  7010                           
  7011  0070                     ?_USBDeviceTasks:	
  7012                           ; 0 bytes @ 0x0
  7013                           
  7014  0070                     ?_USBCheckCDCRequest:	
  7015                           ; 0 bytes @ 0x0
  7016                           
  7017  0070                     ??_USBCheckCDCRequest:	
  7018                           ; 0 bytes @ 0x0
  7019                           
  7020  0070                     ?_LED_Enable:	
  7021                           ; 0 bytes @ 0x0
  7022                           
  7023  0070                     ??_LED_Enable:	
  7024                           ; 0 bytes @ 0x0
  7025                           
  7026  0070                     ?_BUTTON_Enable:	
  7027                           ; 0 bytes @ 0x0
  7028                           
  7029  0070                     ??_BUTTON_Enable:	
  7030                           ; 0 bytes @ 0x0
  7031                           
  7032  0070                     ?_USBWakeFromSuspend:	
  7033                           ; 0 bytes @ 0x0
  7034                           
  7035  0070                     ?_USBSuspend:	
  7036                           ; 0 bytes @ 0x0
  7037                           
  7038  0070                     ?_USBIncrement1msInternalTimers:	
  7039                           ; 0 bytes @ 0x0
  7040                           
  7041  0070                     ??_USBIncrement1msInternalTimers:	
  7042                           ; 0 bytes @ 0x0
  7043                           
  7044  0070                     ?_USBCtrlEPAllowStatusStage:	
  7045                           ; 0 bytes @ 0x0
  7046                           
  7047  0070                     ??_USBCtrlEPAllowStatusStage:	
  7048                           ; 0 bytes @ 0x0
  7049                           
  7050  0070                     ?_USBStallHandler:	
  7051                           ; 0 bytes @ 0x0
  7052                           
  7053  0070                     ??_USBStallHandler:	
  7054                           ; 0 bytes @ 0x0
  7055                           
  7056  0070                     ?_USBCtrlEPService:	
  7057                           ; 0 bytes @ 0x0
  7058                           
  7059  0070                     ?_USBConfigureEndpoint:	
  7060                           ; 0 bytes @ 0x0
  7061                           
  7062  0070                     ?_USBCtrlTrfTxService:	
  7063                           ; 0 bytes @ 0x0
  7064                           
  7065  0070                     ??_USBCtrlTrfTxService:	
  7066                           ; 0 bytes @ 0x0
  7067                           
  7068  0070                     ?_USBCtrlTrfSetupHandler:	
  7069                           ; 0 bytes @ 0x0
  7070                           
  7071  0070                     ?_USBCtrlTrfOutHandler:	
  7072                           ; 0 bytes @ 0x0
  7073                           
  7074  0070                     ?_USBCtrlTrfInHandler:	
  7075                           ; 0 bytes @ 0x0
  7076                           
  7077  0070                     ?_USBCheckStdRequest:	
  7078                           ; 0 bytes @ 0x0
  7079                           
  7080  0070                     ?_USBStdFeatureReqHandler:	
  7081                           ; 0 bytes @ 0x0
  7082                           
  7083  0070                     ?_APP_DeviceCDCBasicDemoInitialize:	
  7084                           ; 0 bytes @ 0x0
  7085                           
  7086  0070                     ?_APP_DeviceCDCBasicDemoTasks:	
  7087                           ; 0 bytes @ 0x0
  7088                           
  7089  0070                     ?_APP_LEDUpdateUSBStatus:	
  7090                           ; 0 bytes @ 0x0
  7091                           
  7092  0070                     ?_main:	
  7093                           ; 0 bytes @ 0x0
  7094                           
  7095  0070                     ?_SYS_InterruptHigh:	
  7096                           ; 0 bytes @ 0x0
  7097                           
  7098  0070                     ??_SYS_InterruptHigh:	
  7099                           ; 0 bytes @ 0x0
  7100                           
  7101  0070                     ?_scan_init:	
  7102                           ; 0 bytes @ 0x0
  7103                           
  7104  0070                     ??_scan_init:	
  7105                           ; 0 bytes @ 0x0
  7106                           
  7107  0070                     ?_set_timer:	
  7108                           ; 0 bytes @ 0x0
  7109                           
  7110  0070                     ??_set_timer:	
  7111                           ; 0 bytes @ 0x0
  7112                           
  7113  0070                     ??_waiting_for_timer:	
  7114                           ; 0 bytes @ 0x0
  7115                           
  7116  0070                     ?_set_clock_and_data:	
  7117                           ; 0 bytes @ 0x0
  7118                           
  7119  0070                     ??_get_data:	
  7120                           ; 0 bytes @ 0x0
  7121                           
  7122  0070                     ??_is_end_of_scan:	
  7123                           ; 0 bytes @ 0x0
  7124                           
  7125  0070                     ?_run_adc:	
  7126                           ; 0 bytes @ 0x0
  7127                           
  7128  0070                     ??_run_adc:	
  7129                           ; 0 bytes @ 0x0
  7130                           
  7131  0070                     ??_is_adc_ready:	
  7132                           ; 0 bytes @ 0x0
  7133                           
  7134  0070                     ??_get_adc:	
  7135                           ; 0 bytes @ 0x0
  7136                           
  7137  0070                     ?_process_level:	
  7138                           ; 0 bytes @ 0x0
  7139                           
  7140  0070                     ?_USBCtrlEPAllowDataStage:	
  7141                           ; 0 bytes @ 0x0
  7142                           
  7143  0070                     ?_USBCtrlEPServiceComplete:	
  7144                           ; 0 bytes @ 0x0
  7145                           
  7146  0070                     ?_USBCtrlTrfRxService:	
  7147                           ; 0 bytes @ 0x0
  7148                           
  7149  0070                     ?_USBStdSetCfgHandler:	
  7150                           ; 0 bytes @ 0x0
  7151                           
  7152  0070                     ?_USBStdGetDscHandler:	
  7153                           ; 0 bytes @ 0x0
  7154                           
  7155  0070                     ??_USBStdGetDscHandler:	
  7156                           ; 0 bytes @ 0x0
  7157                           
  7158  0070                     ?_USBStdGetStatusHandler:	
  7159                           ; 0 bytes @ 0x0
  7160                           
  7161  0070                     ??_USBStdGetStatusHandler:	
  7162                           ; 0 bytes @ 0x0
  7163                           
  7164  0070                     ?_BUTTON_IsPressed:	
  7165                           ; 0 bytes @ 0x0
  7166                           
  7167  0070                     ?_waiting_for_timer:	
  7168                           ; 1 bytes @ 0x0
  7169                           
  7170  0070                     ?_get_data:	
  7171                           ; 1 bytes @ 0x0
  7172                           
  7173  0070                     ?_is_end_of_scan:	
  7174                           ; 1 bytes @ 0x0
  7175                           
  7176  0070                     ?_is_adc_ready:	
  7177                           ; 1 bytes @ 0x0
  7178                           
  7179  0070                     ?_get_adc:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182  0070                     ?_USBTransferOnePacket:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185  0070                     ?_memset:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188  0070                     _waiting_for_timer$704:	
  7189                           ; 2 bytes @ 0x0
  7190                           
  7191  0070                     set_clock_and_data@d:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194  0070                     is_end_of_scan@res:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197  0070                     process_level@old_level:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200  0070                     BUTTON_IsPressed@button:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203  0070                     BUTTON_Enable@button:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206  0070                     LED_On@led:	
  7207                           ; 1 bytes @ 0x0
  7208                           
  7209  0070                     LED_Off@led:	
  7210                           ; 1 bytes @ 0x0
  7211                           
  7212  0070                     LED_Enable@led:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0070                     USBTransferOnePacket@dir:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     USBConfigureEndpoint@direction:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     USBCtrlTrfTxService@byteToSend:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     USBStdGetStatusHandler@p:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     putUSBUSART@length:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     putrsUSBUSART@pData:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     memset@p1:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236                           
  7237                           ; 2 bytes @ 0x0
  7238  0070                     	ds	1
  7239  0071                     ??_putUSBUSART:	
  7240  0071                     ??_SYSTEM_Initialize:	
  7241                           ; 0 bytes @ 0x1
  7242                           
  7243  0071                     ??_USBConfigureEndpoint:	
  7244                           ; 0 bytes @ 0x1
  7245                           
  7246  0071                     ??_USBCtrlTrfInHandler:	
  7247                           ; 0 bytes @ 0x1
  7248                           
  7249  0071                     ??_APP_LEDUpdateUSBStatus:	
  7250                           ; 0 bytes @ 0x1
  7251                           
  7252  0071                     ??_set_clock_and_data:	
  7253                           ; 0 bytes @ 0x1
  7254                           
  7255  0071                     ??_USBCtrlEPAllowDataStage:	
  7256                           ; 0 bytes @ 0x1
  7257                           
  7258  0071                     SYSTEM_Initialize@state:	
  7259                           ; 0 bytes @ 0x1
  7260                           
  7261  0071                     process_level@new_level:	
  7262                           ; 1 bytes @ 0x1
  7263                           
  7264  0071                     putUSBUSART@data:	
  7265                           ; 1 bytes @ 0x1
  7266                           
  7267  0071                     putrsUSBUSART@data:	
  7268                           ; 1 bytes @ 0x1
  7269                           
  7270  0071                     USBTransferOnePacket@data:	
  7271                           ; 1 bytes @ 0x1
  7272                           
  7273                           
  7274                           ; 2 bytes @ 0x1
  7275  0071                     	ds	1
  7276  0072                     ??_process_level:	
  7277  0072                     ??_USBCtrlTrfRxService:	
  7278                           ; 0 bytes @ 0x2
  7279                           
  7280  0072                     set_clock_and_data@c:	
  7281                           ; 0 bytes @ 0x2
  7282                           
  7283  0072                     process_level@idx_key:	
  7284                           ; 1 bytes @ 0x2
  7285                           
  7286  0072                     USBConfigureEndpoint@EPNum:	
  7287                           ; 1 bytes @ 0x2
  7288                           
  7289  0072                     putrsUSBUSART@len:	
  7290                           ; 1 bytes @ 0x2
  7291                           
  7292  0072                     USBDeviceInit@p:	
  7293                           ; 1 bytes @ 0x2
  7294                           
  7295  0072                     memset@c:	
  7296                           ; 2 bytes @ 0x2
  7297                           
  7298                           
  7299                           ; 2 bytes @ 0x2
  7300  0072                     	ds	1
  7301  0073                     ??_USBCtrlEPServiceComplete:	
  7302  0073                     ?_store_key_level:	
  7303                           ; 0 bytes @ 0x3
  7304                           
  7305  0073                     store_key_level@end_of_scan:	
  7306                           ; 1 bytes @ 0x3
  7307                           
  7308  0073                     USBTransferOnePacket@len:	
  7309                           ; 1 bytes @ 0x3
  7310                           
  7311  0073                     USBConfigureEndpoint@handle:	
  7312                           ; 1 bytes @ 0x3
  7313                           
  7314  0073                     USBCtrlTrfInHandler@lastDTS:	
  7315                           ; 1 bytes @ 0x3
  7316                           
  7317                           
  7318                           ; 1 bytes @ 0x3
  7319  0073                     	ds	1
  7320  0074                     ??_store_key_level:	
  7321  0074                     ?_USBEnableEndpoint:	
  7322                           ; 0 bytes @ 0x4
  7323                           
  7324  0074                     ??_USBTransferOnePacket:	
  7325                           ; 0 bytes @ 0x4
  7326                           
  7327  0074                     store_key_level@level:	
  7328                           ; 0 bytes @ 0x4
  7329                           
  7330  0074                     USBDeviceInit@i_1507:	
  7331                           ; 1 bytes @ 0x4
  7332                           
  7333  0074                     USBEnableEndpoint@options:	
  7334                           ; 1 bytes @ 0x4
  7335                           
  7336  0074                     USBCtrlTrfRxService@i:	
  7337                           ; 1 bytes @ 0x4
  7338                           
  7339  0074                     memset@n:	
  7340                           ; 1 bytes @ 0x4
  7341                           
  7342                           
  7343                           ; 2 bytes @ 0x4
  7344  0074                     	ds	1
  7345  0075                     ??_USBEnableEndpoint:	
  7346  0075                     ?_scan_task:	
  7347                           ; 0 bytes @ 0x5
  7348                           
  7349  0075                     scan_task@velocity:	
  7350                           ; 1 bytes @ 0x5
  7351                           
  7352  0075                     USBDeviceInit@i:	
  7353                           ; 1 bytes @ 0x5
  7354                           
  7355  0075                     USBCtrlTrfRxService@byteToRead:	
  7356                           ; 1 bytes @ 0x5
  7357                           
  7358                           
  7359                           ; 1 bytes @ 0x5
  7360  0075                     	ds	1
  7361  0076                     ??_scan_task:	
  7362  0076                     ??_memset:	
  7363                           ; 0 bytes @ 0x6
  7364                           
  7365  0076                     ??_USBCtrlTrfOutHandler:	
  7366                           ; 0 bytes @ 0x6
  7367                           
  7368  0076                     USBTransferOnePacket@ep:	
  7369                           ; 0 bytes @ 0x6
  7370                           
  7371  0076                     _scan_task$737:	
  7372                           ; 1 bytes @ 0x6
  7373                           
  7374                           
  7375                           ; 2 bytes @ 0x6
  7376  0076                     	ds	1
  7377  0077                     USBTransferOnePacket@handle:	
  7378  0077                     USBEnableEndpoint@p:	
  7379                           ; 1 bytes @ 0x7
  7380                           
  7381  0077                     memset@p:	
  7382                           ; 2 bytes @ 0x7
  7383                           
  7384                           
  7385                           ; 2 bytes @ 0x7
  7386  0077                     	ds	1
  7387  0078                     ??_CDCTxService:	
  7388  0078                     ?_getsUSBUSART:	
  7389                           ; 0 bytes @ 0x8
  7390                           
  7391  0078                     getsUSBUSART@len:	
  7392                           ; 1 bytes @ 0x8
  7393                           
  7394  0078                     _scan_task$738:	
  7395                           ; 1 bytes @ 0x8
  7396                           
  7397  0078                     _CDCTxService$2406:	
  7398                           ; 2 bytes @ 0x8
  7399                           
  7400                           
  7401                           ; 2 bytes @ 0x8
  7402  0078                     	ds	1
  7403  0079                     ??_getsUSBUSART:	
  7404  0079                     USBEnableEndpoint@ep:	
  7405                           ; 0 bytes @ 0x9
  7406                           
  7407                           
  7408                           ; 1 bytes @ 0x9
  7409  0079                     	ds	1
  7410  007A                     ??_CDCInitEP:	
  7411  007A                     ??_USBWakeFromSuspend:	
  7412                           ; 0 bytes @ 0xA
  7413                           
  7414  007A                     ??_USBSuspend:	
  7415                           ; 0 bytes @ 0xA
  7416                           
  7417  007A                     ??_USBStdFeatureReqHandler:	
  7418                           ; 0 bytes @ 0xA
  7419                           
  7420  007A                     ??_APP_DeviceCDCBasicDemoInitialize:	
  7421                           ; 0 bytes @ 0xA
  7422                           
  7423  007A                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  7424                           ; 0 bytes @ 0xA
  7425                           
  7426  007A                     ??_USBStdSetCfgHandler:	
  7427                           ; 0 bytes @ 0xA
  7428                           
  7429  007A                     scan_task@note:	
  7430                           ; 0 bytes @ 0xA
  7431                           
  7432  007A                     getsUSBUSART@buffer:	
  7433                           ; 1 bytes @ 0xA
  7434                           
  7435  007A                     CDCTxService@i:	
  7436                           ; 1 bytes @ 0xA
  7437                           
  7438  007A                     USBStdSetCfgHandler@p:	
  7439                           ; 1 bytes @ 0xA
  7440                           
  7441                           
  7442                           ; 2 bytes @ 0xA
  7443  007A                     	ds	1
  7444  007B                     CDCTxService@byte_to_send:	
  7445  007B                     _getsUSBUSART$2358:	
  7446                           ; 1 bytes @ 0xB
  7447                           
  7448                           
  7449                           ; 2 bytes @ 0xB
  7450  007B                     	ds	1
  7451  007C                     USBStdSetCfgHandler@i_1837:	
  7452                           
  7453                           ; 1 bytes @ 0xC
  7454  007C                     	ds	1
  7455  007D                     ??_APP_DeviceCDCBasicDemoTasks:	
  7456  007D                     USBStdSetCfgHandler@i:	
  7457                           ; 0 bytes @ 0xD
  7458                           
  7459                           
  7460                           ; 1 bytes @ 0xD
  7461  007D                     	ds	1
  7462  007E                     ??_USBCtrlTrfSetupHandler:	
  7463  007E                     ??_USBCheckStdRequest:	
  7464                           ; 0 bytes @ 0xE
  7465                           
  7466  007E                     ??_main:	
  7467                           ; 0 bytes @ 0xE
  7468                           
  7469                           
  7470                           	psect	cstackBANK0
  7471  0060                     __pcstackBANK0:	
  7472                           ; 0 bytes @ 0xE
  7473                           
  7474  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  7475  0060                     APP_DeviceCDCBasicDemoTasks@scan_pitch:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481                           
  7482                           ; 2 bytes @ 0x0
  7483  0060                     	ds	1
  7484  0061                     APP_DeviceCDCBasicDemoTasks@velocity:	
  7485                           
  7486                           ; 1 bytes @ 0x1
  7487  0061                     	ds	1
  7488  0062                     APP_DeviceCDCBasicDemoTasks@numBytesRead:	
  7489  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  7490                           ; 1 bytes @ 0x2
  7491                           
  7492                           
  7493                           ; 2 bytes @ 0x2
  7494  0062                     	ds	1
  7495  0063                     APP_DeviceCDCBasicDemoTasks@i:	
  7496                           
  7497                           ; 1 bytes @ 0x3
  7498  0063                     	ds	1
  7499  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  7500                           
  7501                           ; 2 bytes @ 0x4
  7502  0064                     	ds	2
  7503  0066                     USBStdFeatureReqHandler@pUEP:	
  7504                           
  7505                           ; 2 bytes @ 0x6
  7506  0066                     	ds	2
  7507  0068                     USBStdFeatureReqHandler@current_ep_data:	
  7508                           
  7509                           ; 1 bytes @ 0x8
  7510  0068                     	ds	1
  7511  0069                     USBStdFeatureReqHandler@p:	
  7512                           
  7513                           ; 1 bytes @ 0x9
  7514  0069                     	ds	1
  7515  006A                     ??_USBCtrlEPService:	
  7516                           
  7517                           ; 0 bytes @ 0xA
  7518  006A                     	ds	2
  7519  006C                     USBCtrlEPService@setup_cnt:	
  7520                           
  7521                           ; 1 bytes @ 0xC
  7522  006C                     	ds	1
  7523  006D                     ??_USBDeviceTasks:	
  7524                           
  7525                           ; 0 bytes @ 0xD
  7526  006D                     	ds	1
  7527                           
  7528                           	psect	text3
  7529  0EA5                     __ptext3:	
  7530 ;; *************** function _USBCtrlTrfInHandler *****************
  7531 ;; Defined at:
  7532 ;;		line 2618 in file "../framework/usb/usb_device.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  lastDTS         1    3[COMMON] unsigned char 
  7537 ;; Return value:  Size  Location     Type
  7538 ;;		None               void
  7539 ;; Registers used:
  7540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : 1F/0
  7543 ;;		On exit  : 1F/1
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;Total ram usage:        3 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; Hardware stack levels required when called:    2
  7553 ;; This function calls:
  7554 ;;		_USBCtrlTrfTxService
  7555 ;;		Absolute function
  7556 ;; This function is called by:
  7557 ;;		_USBCtrlEPService
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _USBCtrlTrfInHandler
  7563  0EA5                     _USBCtrlTrfInHandler:	
  7564  0EA5                     l5200:	
  7565                           ;incstack = 0
  7566                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7567                           
  7568                           
  7569                           ;usb_device.c: 2619: uint8_t lastDTS;
  7570                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7571  0EA5  0021               	movlb	1	; select bank1
  7572  0EA6  0860               	movf	_pBDTEntryIn^(0+128),w
  7573  0EA7  0086               	movwf	6
  7574  0EA8  3000               	movlw	0
  7575  0EA9  0187               	clrf	7
  7576  0EAA  1B01               	btfsc	1,6
  7577  0EAB  3001               	movlw	1
  7578  0EAC  00F3               	movwf	USBCtrlTrfInHandler@lastDTS
  7579                           
  7580                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7581  0EAD  3004               	movlw	4
  7582  0EAE  06E0               	xorwf	_pBDTEntryIn^(0+128),f
  7583                           
  7584                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  7585  0EAF  0865               	movf	_USBDeviceState^(0+128),w
  7586  0EB0  3A08               	xorlw	8
  7587  0EB1  1D03               	skipz
  7588  0EB2  2EC0               	goto	l684
  7589                           
  7590                           ;usb_device.c: 2630: {
  7591                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  7592  0EB3  0020               	movlb	0	; select bank0
  7593  0EB4  0852               	movf	82,w	;volatile
  7594  0EB5  397F               	andlw	127
  7595  0EB6  003D               	movlb	29	; select bank29
  7596  0EB7  0096               	movwf	22	;volatile
  7597                           
  7598                           ;usb_device.c: 2632: if(UADDR != 0u)
  7599  0EB8  0816               	movf	22,w
  7600  0EB9  1903               	btfsc	3,2
  7601  0EBA  2EBD               	goto	l5212
  7602                           
  7603                           ;usb_device.c: 2633: {
  7604                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  7605  0EBB  3010               	movlw	16
  7606  0EBC  2EBE               	goto	L2
  7607  0EBD                     l5212:	
  7608                           ;usb_device.c: 2635: }
  7609                           
  7610                           
  7611                           ;usb_device.c: 2636: else
  7612                           ;usb_device.c: 2637: {
  7613                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  7614  0EBD  3004               	movlw	4
  7615  0EBE                     L2:	
  7616  0EBE  0021               	movlb	1	; select bank1
  7617  0EBF  00E5               	movwf	_USBDeviceState^(0+128)
  7618  0EC0                     l684:	
  7619                           
  7620                           ;usb_device.c: 2639: }
  7621                           ;usb_device.c: 2640: }
  7622                           ;usb_device.c: 2643: if(controlTransferState == 1)
  7623  0EC0  0B68               	decfsz	_controlTransferState^(0+128),w
  7624  0EC1  2EF5               	goto	l687
  7625                           
  7626                           ;usb_device.c: 2644: {
  7627                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7628  0EC2  3058               	movlw	88
  7629  0EC3  00F1               	movwf	??_USBCtrlTrfInHandler
  7630  0EC4  01F2               	clrf	??_USBCtrlTrfInHandler+1
  7631  0EC5  0860               	movf	_pBDTEntryIn^(0+128),w
  7632  0EC6  3E02               	addlw	2
  7633  0EC7  0086               	movwf	6
  7634  0EC8  0187               	clrf	7
  7635  0EC9  0871               	movf	??_USBCtrlTrfInHandler,w
  7636  0ECA  3FC0               	movwi [0]fsr1
  7637  0ECB  0872               	movf	??_USBCtrlTrfInHandler+1,w
  7638  0ECC  3FC1               	movwi [1]fsr1
  7639                           
  7640                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  7641  0ECD  27AE  318E         	fcall	_USBCtrlTrfTxService
  7642                           
  7643                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  7644  0ECF  0022               	movlb	2	; select bank2
  7645  0ED0  086C               	movf	_shortPacketStatus^(0+256),w
  7646  0ED1  3A02               	xorlw	2
  7647  0ED2  1D03               	skipz
  7648  0ED3  2EDE               	goto	l5222
  7649                           
  7650                           ;usb_device.c: 2653: {
  7651                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  7652  0ED4  0021               	movlb	1	; select bank1
  7653  0ED5  0860               	movf	_pBDTEntryIn^(0+128),w
  7654  0ED6  0086               	movwf	6
  7655  0ED7  3004               	movlw	4
  7656  0ED8  0187               	clrf	7
  7657  0ED9  0081               	movwf	1
  7658                           
  7659                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7660  0EDA  0860               	movf	_pBDTEntryIn^(0+128),w
  7661  0EDB  0086               	movwf	6
  7662  0EDC  1781               	bsf	1,7
  7663                           
  7664                           ;usb_device.c: 2658: }
  7665  0EDD  0008               	return
  7666  0EDE                     l5222:	
  7667                           
  7668                           ;usb_device.c: 2659: else
  7669                           ;usb_device.c: 2660: {
  7670                           ;usb_device.c: 2661: if(lastDTS == 0)
  7671  0EDE  08F3               	movf	USBCtrlTrfInHandler@lastDTS,f
  7672  0EDF  1D03               	skipz
  7673  0EE0  2EEB               	goto	l5226
  7674                           
  7675                           ;usb_device.c: 2662: {
  7676                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7677  0EE1  0021               	movlb	1	; select bank1
  7678  0EE2  0860               	movf	_pBDTEntryIn^(0+128),w
  7679  0EE3  0086               	movwf	6
  7680  0EE4  3048               	movlw	72
  7681  0EE5  0187               	clrf	7
  7682  0EE6  0081               	movwf	1
  7683                           
  7684                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7685  0EE7  0860               	movf	_pBDTEntryIn^(0+128),w
  7686  0EE8  0086               	movwf	6
  7687  0EE9  1781               	bsf	1,7
  7688                           
  7689                           ;usb_device.c: 2665: }
  7690  0EEA  0008               	return
  7691  0EEB                     l5226:	
  7692                           
  7693                           ;usb_device.c: 2666: else
  7694                           ;usb_device.c: 2667: {
  7695                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7696  0EEB  0021               	movlb	1	; select bank1
  7697  0EEC  0860               	movf	_pBDTEntryIn^(0+128),w
  7698  0EED  0086               	movwf	6
  7699  0EEE  3008               	movlw	8
  7700  0EEF  0187               	clrf	7
  7701  0EF0  0081               	movwf	1
  7702                           
  7703                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7704  0EF1  0860               	movf	_pBDTEntryIn^(0+128),w
  7705  0EF2  0086               	movwf	6
  7706  0EF3  1781               	bsf	1,7
  7707  0EF4  0008               	return
  7708  0EF5                     l687:	
  7709                           
  7710                           ;usb_device.c: 2673: else
  7711                           ;usb_device.c: 2674: {
  7712                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  7713  0EF5  0023               	movlb	3	; select bank3
  7714  0EF6  1FA2               	btfss	(_outPipes^(0+384)+2),7
  7715  0EF7  2F00               	goto	l5234
  7716                           
  7717                           ;usb_device.c: 2679: {
  7718                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  7719  0EF8  0825               	movf	(_outPipes+5)^(0+384),w
  7720  0EF9  1903               	btfsc	3,2
  7721  0EFA  2EFE               	goto	l5232
  7722                           
  7723                           ;usb_device.c: 2681: {
  7724                           ;usb_device.c: 2682: outPipes[0].pFunc();
  7725  0EFB  0825               	movf	(_outPipes+5)^(0+384),w
  7726  0EFC  318E  2EA5         	ljmp	$	;if you get stuck here, you called an invalid pointer
  7727  0EFE                     l5232:	
  7728                           
  7729                           ;usb_device.c: 2683: }
  7730                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  7731  0EFE  0023               	movlb	3	; select bank3
  7732  0EFF  13A2               	bcf	(_outPipes^(0+384)+2),7
  7733  0F00                     l5234:	
  7734                           
  7735                           ;usb_device.c: 2685: }
  7736                           ;usb_device.c: 2687: controlTransferState = 0;
  7737  0F00  0021               	movlb	1	; select bank1
  7738  0F01  01E8               	clrf	_controlTransferState^(0+128)
  7739  0F02  0008               	return
  7740  0F03                     __end_of_USBCtrlTrfInHandler:	
  7741  0F03                     __ptext13:	
  7742 ;; *************** function _USBCtrlEPServiceComplete *****************
  7743 ;; Defined at:
  7744 ;;		line 1636 in file "../framework/usb/usb_device.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;		None               void
  7751 ;; Registers used:
  7752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/3
  7755 ;;		On exit  : 1C/0
  7756 ;;		Unchanged: FFFE0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    3
  7765 ;; This function calls:
  7766 ;;		_USBCtrlEPAllowStatusStage
  7767 ;;		_USBCtrlEPAllowDataStage
  7768 ;; This function is called by:
  7769 ;;		_USBCtrlTrfSetupHandler
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           
  7774                           ;psect for function _USBCtrlEPServiceComplete
  7775  0F03                     _USBCtrlEPServiceComplete:	
  7776  0F03                     l4958:	
  7777                           ;incstack = 0
  7778                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7779                           
  7780                           
  7781                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  7782  0F03  003D               	movlb	29	; select bank29
  7783  0F04  120E               	bcf	14,4	;volatile
  7784                           
  7785                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  7786  0F05  0021               	movlb	1	; select bank1
  7787  0F06  1BEC               	btfsc	(_inPipes^(0+128)+2),7
  7788  0F07  2F37               	goto	l572
  7789                           
  7790                           ;usb_device.c: 1648: {
  7791                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  7792  0F08  0023               	movlb	3	; select bank3
  7793  0F09  1FA2               	btfss	(_outPipes^(0+384)+2),7
  7794  0F0A  2F17               	goto	l4972
  7795                           
  7796                           ;usb_device.c: 1650: {
  7797                           ;usb_device.c: 1651: controlTransferState = 2;
  7798  0F0B  3002               	movlw	2
  7799  0F0C  0021               	movlb	1	; select bank1
  7800  0F0D  00E8               	movwf	_controlTransferState^(0+128)
  7801                           
  7802                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  7803  0F0E  0022               	movlb	2	; select bank2
  7804  0F0F  08E4               	movf	_USBDeferOUTDataStagePackets^(0+256),f
  7805  0F10  1D03               	skipz
  7806  0F11  2F13               	goto	l4968
  7807                           
  7808                           ;usb_device.c: 1663: {
  7809                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  7810  0F12  2767               	fcall	_USBCtrlEPAllowDataStage
  7811  0F13                     l4968:	
  7812                           
  7813                           ;usb_device.c: 1665: }
  7814                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  7815  0F13  0022               	movlb	2	; select bank2
  7816  0F14  01E6               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7817                           
  7818                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  7819  0F15  01E5               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7820                           
  7821                           ;usb_device.c: 1671: }
  7822  0F16  0008               	return
  7823  0F17                     l4972:	
  7824                           
  7825                           ;usb_device.c: 1672: else
  7826                           ;usb_device.c: 1673: {
  7827                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  7828  0F17  0020               	movlb	0	; select bank0
  7829  0F18  0A6F               	incf	_pBDTEntryEP0OutNext,w
  7830  0F19  0086               	movwf	6
  7831  0F1A  3008               	movlw	8
  7832  0F1B  0187               	clrf	7
  7833  0F1C  0081               	movwf	1
  7834                           
  7835                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7836  0F1D  3050               	movlw	80
  7837  0F1E  00F3               	movwf	??_USBCtrlEPServiceComplete
  7838  0F1F  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  7839  0F20  086F               	movf	_pBDTEntryEP0OutNext,w
  7840  0F21  3E02               	addlw	2
  7841  0F22  0086               	movwf	6
  7842  0F23  0873               	movf	??_USBCtrlEPServiceComplete,w
  7843  0F24  3FC0               	movwi [0]fsr1
  7844  0F25  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  7845  0F26  3FC1               	movwi [1]fsr1
  7846                           
  7847                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7848  0F27  086F               	movf	_pBDTEntryEP0OutNext,w
  7849  0F28  0086               	movwf	6
  7850  0F29  300C               	movlw	12
  7851  0F2A  0081               	movwf	1
  7852                           
  7853                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7854  0F2B  086F               	movf	_pBDTEntryEP0OutNext,w
  7855  0F2C  0086               	movwf	6
  7856  0F2D  1781               	bsf	1,7
  7857                           
  7858                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  7859  0F2E  0021               	movlb	1	; select bank1
  7860  0F2F  0860               	movf	_pBDTEntryIn^(0+128),w
  7861  0F30  0086               	movwf	6
  7862  0F31  3004               	movlw	4
  7863  0F32  0081               	movwf	1
  7864                           
  7865                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7866  0F33  0860               	movf	_pBDTEntryIn^(0+128),w
  7867  0F34  0086               	movwf	6
  7868  0F35  1781               	bsf	1,7
  7869  0F36  0008               	return
  7870  0F37                     l572:	
  7871                           
  7872                           ;usb_device.c: 1686: else
  7873                           ;usb_device.c: 1687: {
  7874                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  7875  0F37  0020               	movlb	0	; select bank0
  7876  0F38  1FD0               	btfss	80,7	;volatile
  7877  0F39  2F4C               	goto	l4988
  7878                           
  7879                           ;usb_device.c: 1689: {
  7880                           ;usb_device.c: 1690: controlTransferState = 1;
  7881  0F3A  0021               	movlb	1	; select bank1
  7882  0F3B  01E8               	clrf	_controlTransferState^(0+128)
  7883  0F3C  0AE8               	incf	_controlTransferState^(0+128),f
  7884                           
  7885                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  7886  0F3D  0022               	movlb	2	; select bank2
  7887  0F3E  08E3               	movf	_USBDeferINDataStagePackets^(0+256),f
  7888  0F3F  1D03               	skipz
  7889  0F40  2F43               	goto	l4980
  7890                           
  7891                           ;usb_device.c: 1705: {
  7892                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  7893  0F41  2767  318E         	fcall	_USBCtrlEPAllowDataStage
  7894  0F43                     l4980:	
  7895                           
  7896                           ;usb_device.c: 1707: }
  7897                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  7898  0F43  0022               	movlb	2	; select bank2
  7899  0F44  01E6               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7900                           
  7901                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  7902  0F45  01E5               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7903                           
  7904                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  7905  0F46  0021               	movlb	1	; select bank1
  7906  0F47  08E4               	movf	_USBDeferStatusStagePacket^(0+128),f
  7907  0F48  1D03               	skipz
  7908  0F49  0008               	return
  7909                           
  7910                           ;usb_device.c: 1732: {
  7911                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  7912  0F4A  3186  2ED2         	ljmp	l4760
  7913  0F4C                     l4988:	
  7914                           
  7915                           ;usb_device.c: 1736: else
  7916                           ;usb_device.c: 1737: {
  7917                           ;usb_device.c: 1748: controlTransferState = 2;
  7918  0F4C  3002               	movlw	2
  7919  0F4D  0021               	movlb	1	; select bank1
  7920  0F4E  00E8               	movwf	_controlTransferState^(0+128)
  7921                           
  7922                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  7923  0F4F  0020               	movlb	0	; select bank0
  7924  0F50  0A6F               	incf	_pBDTEntryEP0OutNext,w
  7925  0F51  0086               	movwf	6
  7926  0F52  3008               	movlw	8
  7927  0F53  0187               	clrf	7
  7928  0F54  0081               	movwf	1
  7929                           
  7930                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7931  0F55  3050               	movlw	80
  7932  0F56  00F3               	movwf	??_USBCtrlEPServiceComplete
  7933  0F57  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  7934  0F58  086F               	movf	_pBDTEntryEP0OutNext,w
  7935  0F59  3E02               	addlw	2
  7936  0F5A  0086               	movwf	6
  7937  0F5B  0873               	movf	??_USBCtrlEPServiceComplete,w
  7938  0F5C  3FC0               	movwi [0]fsr1
  7939  0F5D  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  7940  0F5E  3FC1               	movwi [1]fsr1
  7941                           
  7942                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7943  0F5F  086F               	movf	_pBDTEntryEP0OutNext,w
  7944  0F60  0086               	movwf	6
  7945  0F61  3004               	movlw	4
  7946  0F62  0081               	movwf	1
  7947                           
  7948                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7949  0F63  086F               	movf	_pBDTEntryEP0OutNext,w
  7950  0F64  0086               	movwf	6
  7951  0F65  1781               	bsf	1,7
  7952  0F66  2F43               	goto	l4980
  7953  0F67                     __end_of_USBCtrlEPServiceComplete:	
  7954                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  7955                           
  7956                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  7957                           
  7958                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  7959                           
  7960  0F67                     __ptext14:	
  7961 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7962 ;; Defined at:
  7963 ;;		line 1508 in file "../framework/usb/usb_device.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;		None               void
  7970 ;; Registers used:
  7971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 1F/2
  7974 ;;		On exit  : 1E/0
  7975 ;;		Unchanged: FFFE0/0
  7976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;Total ram usage:        2 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    2
  7984 ;; This function calls:
  7985 ;;		_USBCtrlTrfTxService
  7986 ;; This function is called by:
  7987 ;;		_USBCtrlEPServiceComplete
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           
  7992                           ;psect for function _USBCtrlEPAllowDataStage
  7993  0F67                     _USBCtrlEPAllowDataStage:	
  7994                           
  7995                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  7996                           
  7997                           ;incstack = 0
  7998                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7999  0F67  01E3               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  8000                           
  8001                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  8002  0F68  01E4               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  8003                           
  8004                           ;usb_device.c: 1512: if(controlTransferState == 2)
  8005  0F69  0021               	movlb	1	; select bank1
  8006  0F6A  0868               	movf	_controlTransferState^(0+128),w
  8007  0F6B  3A02               	xorlw	2
  8008  0F6C  1D03               	skipz
  8009  0F6D  2F86               	goto	l4906
  8010                           
  8011                           ;usb_device.c: 1513: {
  8012                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  8013  0F6E  0020               	movlb	0	; select bank0
  8014  0F6F  0A6F               	incf	_pBDTEntryEP0OutNext,w
  8015  0F70  0086               	movwf	6
  8016  0F71  3008               	movlw	8
  8017  0F72  0187               	clrf	7
  8018  0F73  0081               	movwf	1
  8019                           
  8020                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8021  0F74  3058               	movlw	88
  8022  0F75  00F1               	movwf	??_USBCtrlEPAllowDataStage
  8023  0F76  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  8024  0F77  086F               	movf	_pBDTEntryEP0OutNext,w
  8025  0F78  3E02               	addlw	2
  8026  0F79  0086               	movwf	6
  8027  0F7A  0871               	movf	??_USBCtrlEPAllowDataStage,w
  8028  0F7B  3FC0               	movwi [0]fsr1
  8029  0F7C  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  8030  0F7D  3FC1               	movwi [1]fsr1
  8031                           
  8032                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8033  0F7E  086F               	movf	_pBDTEntryEP0OutNext,w
  8034  0F7F  0086               	movwf	6
  8035  0F80  3048               	movlw	72
  8036  0F81  0081               	movwf	1
  8037                           
  8038                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8039  0F82  086F               	movf	_pBDTEntryEP0OutNext,w
  8040  0F83  0086               	movwf	6
  8041  0F84  1781               	bsf	1,7
  8042                           
  8043                           ;usb_device.c: 1519: }
  8044  0F85  0008               	return
  8045  0F86                     l4906:	
  8046                           
  8047                           ;usb_device.c: 1520: else
  8048                           ;usb_device.c: 1521: {
  8049                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8050  0F86  086E               	movf	((_inPipes+1)^(0+128)+3),w
  8051  0F87  0020               	movlb	0	; select bank0
  8052  0F88  0257               	subwf	87,w	;volatile
  8053  0F89  1D03               	skipz
  8054  0F8A  2F8F               	goto	u4055
  8055  0F8B  0021               	movlb	1	; select bank1
  8056  0F8C  086D               	movf	(_inPipes^(0+128)+3),w
  8057  0F8D  0020               	movlb	0	; select bank0
  8058  0F8E  0256               	subwf	86,w	;volatile
  8059  0F8F                     u4055:	
  8060  0F8F  1803               	skipnc
  8061  0F90  2F98               	goto	l4910
  8062                           
  8063                           ;usb_device.c: 1525: {
  8064                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  8065  0F91  0857               	movf	87,w	;volatile
  8066  0F92  0021               	movlb	1	; select bank1
  8067  0F93  00EE               	movwf	((_inPipes+1)^(0+128)+3)
  8068  0F94  0020               	movlb	0	; select bank0
  8069  0F95  0856               	movf	86,w	;volatile
  8070  0F96  0021               	movlb	1	; select bank1
  8071  0F97  00ED               	movwf	(_inPipes^(0+128)+3)
  8072  0F98                     l4910:	
  8073                           
  8074                           ;usb_device.c: 1527: }
  8075                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  8076  0F98  27AE  318E         	fcall	_USBCtrlTrfTxService
  8077                           
  8078                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8079  0F9A  3058               	movlw	88
  8080  0F9B  00F1               	movwf	??_USBCtrlEPAllowDataStage
  8081  0F9C  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  8082  0F9D  0021               	movlb	1	; select bank1
  8083  0F9E  0860               	movf	_pBDTEntryIn^(0+128),w
  8084  0F9F  3E02               	addlw	2
  8085  0FA0  0086               	movwf	6
  8086  0FA1  0187               	clrf	7
  8087  0FA2  0871               	movf	??_USBCtrlEPAllowDataStage,w
  8088  0FA3  3FC0               	movwi [0]fsr1
  8089  0FA4  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  8090  0FA5  3FC1               	movwi [1]fsr1
  8091                           
  8092                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8093  0FA6  0860               	movf	_pBDTEntryIn^(0+128),w
  8094  0FA7  0086               	movwf	6
  8095  0FA8  3048               	movlw	72
  8096  0FA9  0081               	movwf	1
  8097                           
  8098                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8099  0FAA  0860               	movf	_pBDTEntryIn^(0+128),w
  8100  0FAB  0086               	movwf	6
  8101  0FAC  1781               	bsf	1,7
  8102  0FAD  0008               	return
  8103  0FAE                     __end_of_USBCtrlEPAllowDataStage:	
  8104  0FAE                     __ptext15:	
  8105 ;; *************** function _USBCtrlTrfTxService *****************
  8106 ;; Defined at:
  8107 ;;		line 1791 in file "../framework/usb/usb_device.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  byteToSend      1    0[COMMON] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;		None               void
  8114 ;; Registers used:
  8115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8116 ;; Tracked objects:
  8117 ;;		On entry : 1E/1
  8118 ;;		On exit  : 1C/0
  8119 ;;		Unchanged: FFFE0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        1 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_USBCtrlEPAllowDataStage
  8132 ;;		_USBCtrlTrfInHandler
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function _USBCtrlTrfTxService
  8138  0FAE                     _USBCtrlTrfTxService:	
  8139                           
  8140                           ;usb_device.c: 1792: uint8_t byteToSend;
  8141                           ;usb_device.c: 1796: byteToSend = 8;
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8145  0FAE  3008               	movlw	8
  8146  0FAF  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  8147                           
  8148                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  8149  0FB0  3000               	movlw	0
  8150  0FB1  0021               	movlb	1	; select bank1
  8151  0FB2  026E               	subwf	((_inPipes+1)^(0+128)+3),w
  8152  0FB3  3008               	movlw	8
  8153  0FB4  1903               	skipnz
  8154  0FB5  026D               	subwf	(_inPipes^(0+128)+3),w
  8155  0FB6  1803               	skipnc
  8156  0FB7  2FC5               	goto	l585
  8157                           
  8158                           ;usb_device.c: 1798: {
  8159                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  8160  0FB8  086D               	movf	(_inPipes^(0+128)+3),w
  8161  0FB9  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  8162                           
  8163                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  8164  0FBA  0022               	movlb	2	; select bank2
  8165  0FBB  08EC               	movf	_shortPacketStatus^(0+256),f
  8166  0FBC  1D03               	skipz
  8167  0FBD  2FC1               	goto	l4926
  8168                           
  8169                           ;usb_device.c: 1807: {
  8170                           ;usb_device.c: 1808: shortPacketStatus = 1;
  8171  0FBE  01EC               	clrf	_shortPacketStatus^(0+256)
  8172  0FBF  0AEC               	incf	_shortPacketStatus^(0+256),f
  8173                           
  8174                           ;usb_device.c: 1809: }
  8175  0FC0  2FC5               	goto	l585
  8176  0FC1                     l4926:	
  8177                           
  8178                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  8179  0FC1  0B6C               	decfsz	_shortPacketStatus^(0+256),w
  8180  0FC2  2FC5               	goto	l585
  8181                           
  8182                           ;usb_device.c: 1811: {
  8183                           ;usb_device.c: 1812: shortPacketStatus = 2;
  8184  0FC3  3002               	movlw	2
  8185  0FC4  00EC               	movwf	_shortPacketStatus^(0+256)
  8186  0FC5                     l585:	
  8187                           
  8188                           ;usb_device.c: 1813: }
  8189                           ;usb_device.c: 1814: }
  8190                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  8191  0FC5  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  8192  0FC6  0021               	movlb	1	; select bank1
  8193  0FC7  02ED               	subwf	(_inPipes^(0+128)+3),f
  8194  0FC8  1C03               	skipc
  8195  0FC9  03EE               	decf	((_inPipes+1)^(0+128)+3),f
  8196                           
  8197                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  8198  0FCA  0A60               	incf	_pBDTEntryIn^(0+128),w
  8199  0FCB  0086               	movwf	6
  8200  0FCC  0187               	clrf	7
  8201  0FCD  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  8202  0FCE  0081               	movwf	1
  8203                           
  8204                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  8205  0FCF  3058               	movlw	88
  8206  0FD0  0022               	movlb	2	; select bank2
  8207  0FD1  00EB               	movwf	_pDst^(0+256)
  8208                           
  8209                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8210  0FD2  0021               	movlb	1	; select bank1
  8211  0FD3  1C6C               	btfss	(_inPipes^(0+128)+2),0
  8212  0FD4  2FE7               	goto	l4946
  8213  0FD5  2FFC               	goto	l4956
  8214  0FD6                     l4938:	
  8215                           
  8216                           ;usb_device.c: 1831: {
  8217                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  8218  0FD6  0022               	movlb	2	; select bank2
  8219  0FD7  086B               	movf	_pDst^(0+256),w
  8220  0FD8  0086               	movwf	6
  8221  0FD9  0187               	clrf	7
  8222  0FDA  0021               	movlb	1	; select bank1
  8223  0FDB  086A               	movf	_inPipes^(0+128),w
  8224  0FDC  0084               	movwf	4
  8225  0FDD  086B               	movf	(_inPipes+1)^(0+128),w
  8226  0FDE  0085               	movwf	5
  8227  0FDF  0800               	movf	0,w	;code access
  8228  0FE0  0081               	movwf	1
  8229  0FE1  0AEA               	incf	_inPipes^(0+128),f
  8230  0FE2  1903               	skipnz
  8231  0FE3  0AEB               	incf	(_inPipes+1)^(0+128),f
  8232  0FE4  0022               	movlb	2	; select bank2
  8233  0FE5  0AEB               	incf	_pDst^(0+256),f
  8234                           
  8235                           ;usb_device.c: 1833: byteToSend--;
  8236  0FE6  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  8237  0FE7                     l4946:	
  8238  0FE7  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  8239  0FE8  1903               	btfsc	3,2
  8240  0FE9  0008               	return
  8241  0FEA  2FD6               	goto	l4938
  8242  0FEB                     l4948:	
  8243                           
  8244                           ;usb_device.c: 1839: {
  8245                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  8246  0FEB  0022               	movlb	2	; select bank2
  8247  0FEC  086B               	movf	_pDst^(0+256),w
  8248  0FED  0086               	movwf	6
  8249  0FEE  0187               	clrf	7
  8250  0FEF  0021               	movlb	1	; select bank1
  8251  0FF0  086A               	movf	_inPipes^(0+128),w
  8252  0FF1  0084               	movwf	4
  8253  0FF2  086B               	movf	(_inPipes+1)^(0+128),w
  8254  0FF3  0085               	movwf	5
  8255  0FF4  0800               	movf	0,w	;code access
  8256  0FF5  0081               	movwf	1
  8257  0FF6  0AEA               	incf	_inPipes^(0+128),f
  8258  0FF7  1903               	skipnz
  8259  0FF8  0AEB               	incf	(_inPipes+1)^(0+128),f
  8260  0FF9  0022               	movlb	2	; select bank2
  8261  0FFA  0AEB               	incf	_pDst^(0+256),f
  8262                           
  8263                           ;usb_device.c: 1841: byteToSend--;
  8264  0FFB  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  8265  0FFC                     l4956:	
  8266  0FFC  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  8267  0FFD  1903               	btfsc	3,2
  8268  0FFE  0008               	return
  8269  0FFF  2FEB               	goto	l4948
  8270  1000                     __end_of_USBCtrlTrfTxService:	
  8271                           
  8272                           	psect	text4
  8273  09C6                     __ptext4:	
  8274 ;; *************** function _USBCtrlTrfOutHandler *****************
  8275 ;; Defined at:
  8276 ;;		line 2564 in file "../framework/usb/usb_device.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;		None               void
  8283 ;; Registers used:
  8284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 1F/0
  8287 ;;		On exit  : 1C/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;Total ram usage:        2 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    3
  8297 ;; This function calls:
  8298 ;;		_USBCtrlTrfRxService
  8299 ;; This function is called by:
  8300 ;;		_USBCtrlEPService
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _USBCtrlTrfOutHandler
  8306  09C6                     _USBCtrlTrfOutHandler:	
  8307  09C6                     l5188:	
  8308                           ;incstack = 0
  8309                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8310                           
  8311                           
  8312                           ;usb_device.c: 2565: if(controlTransferState == 2)
  8313  09C6  0021               	movlb	1	; select bank1
  8314  09C7  0868               	movf	_controlTransferState^(0+128),w
  8315  09C8  3A02               	xorlw	2
  8316  09C9  1D03               	skipz
  8317  09CA  29CC               	goto	l5192
  8318                           
  8319                           ;usb_device.c: 2566: {
  8320                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  8321  09CB  29EB               	ljmp	l5006
  8322  09CC                     l5192:	
  8323                           ;usb_device.c: 2568: }
  8324                           
  8325                           
  8326                           ;usb_device.c: 2569: else
  8327                           ;usb_device.c: 2570: {
  8328                           ;usb_device.c: 2573: controlTransferState = 0;
  8329  09CC  01E8               	clrf	_controlTransferState^(0+128)
  8330                           
  8331                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  8332  09CD  0023               	movlb	3	; select bank3
  8333  09CE  08B7               	movf	_BothEP0OutUOWNsSet^(0+384),f
  8334  09CF  1D03               	skipz
  8335  09D0  29E9               	goto	l5198
  8336                           
  8337                           ;usb_device.c: 2581: {
  8338                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  8339  09D1  0020               	movlb	0	; select bank0
  8340  09D2  0A6F               	incf	_pBDTEntryEP0OutNext,w
  8341  09D3  0086               	movwf	6
  8342  09D4  3008               	movlw	8
  8343  09D5  0187               	clrf	7
  8344  09D6  0081               	movwf	1
  8345                           
  8346                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8347  09D7  3050               	movlw	80
  8348  09D8  00F6               	movwf	??_USBCtrlTrfOutHandler
  8349  09D9  01F7               	clrf	??_USBCtrlTrfOutHandler+1
  8350  09DA  086F               	movf	_pBDTEntryEP0OutNext,w
  8351  09DB  3E02               	addlw	2
  8352  09DC  0086               	movwf	6
  8353  09DD  0876               	movf	??_USBCtrlTrfOutHandler,w
  8354  09DE  3FC0               	movwi [0]fsr1
  8355  09DF  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  8356  09E0  3FC1               	movwi [1]fsr1
  8357                           
  8358                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8359  09E1  086F               	movf	_pBDTEntryEP0OutNext,w
  8360  09E2  0086               	movwf	6
  8361  09E3  300C               	movlw	12
  8362  09E4  0081               	movwf	1
  8363                           
  8364                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8365  09E5  086F               	movf	_pBDTEntryEP0OutNext,w
  8366  09E6  0086               	movwf	6
  8367  09E7  1781               	bsf	1,7
  8368                           
  8369                           ;usb_device.c: 2586: }
  8370  09E8  0008               	return
  8371  09E9                     l5198:	
  8372                           
  8373                           ;usb_device.c: 2587: else
  8374                           ;usb_device.c: 2588: {
  8375                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  8376  09E9  01B7               	clrf	_BothEP0OutUOWNsSet^(0+384)
  8377  09EA  0008               	return
  8378  09EB                     __end_of_USBCtrlTrfOutHandler:	
  8379  09EB                     __ptext5:	
  8380 ;; *************** function _USBCtrlTrfRxService *****************
  8381 ;; Defined at:
  8382 ;;		line 1872 in file "../framework/usb/usb_device.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  byteToRead      1    5[COMMON] unsigned char 
  8387 ;;  i               1    4[COMMON] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;		None               void
  8390 ;; Registers used:
  8391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 1F/1
  8394 ;;		On exit  : 1C/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    2
  8404 ;; This function calls:
  8405 ;;		_USBCtrlEPAllowStatusStage
  8406 ;;		Absolute function
  8407 ;; This function is called by:
  8408 ;;		_USBCtrlTrfOutHandler
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function _USBCtrlTrfRxService
  8414  09EB                     _USBCtrlTrfRxService:	
  8415  09EB                     l5006:	
  8416                           ;incstack = 0
  8417                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8418                           
  8419                           
  8420                           ;usb_device.c: 1873: uint8_t byteToRead;
  8421                           ;usb_device.c: 1874: uint8_t i;
  8422                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8423  09EB  0020               	movlb	0	; select bank0
  8424  09EC  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8425  09ED  0086               	movwf	6
  8426  09EE  0187               	clrf	7
  8427  09EF  3F41               	moviw [1]fsr1
  8428  09F0  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8429                           
  8430                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  8431  09F1  00F2               	movwf	??_USBCtrlTrfRxService
  8432  09F2  01F3               	clrf	??_USBCtrlTrfRxService+1
  8433  09F3  0873               	movf	??_USBCtrlTrfRxService+1,w
  8434  09F4  0023               	movlb	3	; select bank3
  8435  09F5  0224               	subwf	((_outPipes+1)^(0+384)+3),w
  8436  09F6  1D03               	skipz
  8437  09F7  29FA               	goto	u4195
  8438  09F8  0872               	movf	??_USBCtrlTrfRxService,w
  8439  09F9  0223               	subwf	(_outPipes^(0+384)+3),w
  8440  09FA                     u4195:	
  8441  09FA  1803               	skipnc
  8442  09FB  29FE               	goto	l600
  8443                           
  8444                           ;usb_device.c: 1885: {
  8445                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  8446  09FC  0823               	movf	(_outPipes^(0+384)+3),w
  8447  09FD  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  8448  09FE                     l600:	
  8449                           
  8450                           ;usb_device.c: 1887: }
  8451                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  8452  09FE  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8453  09FF  02A3               	subwf	(_outPipes^(0+384)+3),f
  8454  0A00  1C03               	skipc
  8455  0A01  03A4               	decf	((_outPipes+1)^(0+384)+3),f
  8456                           
  8457                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  8458  0A02  01F4               	clrf	USBCtrlTrfRxService@i
  8459  0A03                     l5020:	
  8460  0A03  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  8461  0A04  0274               	subwf	USBCtrlTrfRxService@i,w
  8462  0A05  1803               	btfsc	3,0
  8463  0A06  2A14               	goto	l5022
  8464                           
  8465                           ;usb_device.c: 1894: {
  8466                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8467  0A07  0820               	movf	_outPipes^(0+384),w
  8468  0A08  0086               	movwf	6
  8469  0A09  3001               	movlw	1	; select bank2/3
  8470  0A0A  0087               	movwf	7
  8471  0A0B  0874               	movf	USBCtrlTrfRxService@i,w
  8472  0A0C  3E58               	addlw	88
  8473  0A0D  0084               	movwf	4
  8474  0A0E  0185               	clrf	5
  8475  0A0F  0800               	movf	0,w
  8476  0A10  0081               	movwf	1
  8477  0A11  0AA0               	incf	_outPipes^(0+384),f
  8478  0A12  0AF4               	incf	USBCtrlTrfRxService@i,f
  8479  0A13  2A03               	goto	l5020
  8480  0A14                     l5022:	
  8481                           
  8482                           ;usb_device.c: 1896: }
  8483                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  8484  0A14  3003               	movlw	3
  8485  0A15  3EA0               	addlw	_outPipes& (0+255)
  8486  0A16  0086               	movwf	6
  8487  0A17  3001               	movlw	1	; select bank3/4
  8488  0A18  0087               	movwf	7
  8489  0A19  0016               	moviw fsr1++
  8490  0A1A  0401               	iorwf	1,w
  8491  0A1B  1903               	skipnz
  8492  0A1C  2A41               	goto	l5030
  8493                           
  8494                           ;usb_device.c: 1901: {
  8495                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  8496  0A1D  0020               	movlb	0	; select bank0
  8497  0A1E  0A6F               	incf	_pBDTEntryEP0OutNext,w
  8498  0A1F  0086               	movwf	6
  8499  0A20  3008               	movlw	8
  8500  0A21  0187               	clrf	7
  8501  0A22  0081               	movwf	1
  8502                           
  8503                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8504  0A23  3058               	movlw	88
  8505  0A24  00F2               	movwf	??_USBCtrlTrfRxService
  8506  0A25  01F3               	clrf	??_USBCtrlTrfRxService+1
  8507  0A26  086F               	movf	_pBDTEntryEP0OutNext,w
  8508  0A27  3E02               	addlw	2
  8509  0A28  0086               	movwf	6
  8510  0A29  0872               	movf	??_USBCtrlTrfRxService,w
  8511  0A2A  3FC0               	movwi [0]fsr1
  8512  0A2B  0873               	movf	??_USBCtrlTrfRxService+1,w
  8513  0A2C  3FC1               	movwi [1]fsr1
  8514                           
  8515                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8516  0A2D  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8517  0A2E  0086               	movwf	6
  8518                           
  8519                           ;usb_device.c: 1905: {
  8520                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8521  0A2F  086F               	movf	_pBDTEntryEP0OutNext,w
  8522  0A30  1B01               	btfsc	1,6
  8523  0A31  2A39               	goto	L3
  8524  0A32  0086               	movwf	6
  8525  0A33  3048               	movlw	72
  8526  0A34  0081               	movwf	1
  8527                           
  8528                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8529  0A35  086F               	movf	_pBDTEntryEP0OutNext,w
  8530  0A36  0086               	movwf	6
  8531  0A37  1781               	bsf	1,7
  8532                           
  8533                           ;usb_device.c: 1908: }
  8534  0A38  0008               	return
  8535  0A39                     L3:	
  8536                           ;usb_device.c: 1909: else
  8537                           ;usb_device.c: 1910: {
  8538                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8539                           
  8540  0A39  0086               	movwf	6
  8541  0A3A  3008               	movlw	8
  8542  0A3B  0187               	clrf	7
  8543  0A3C  0081               	movwf	1
  8544                           
  8545                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8546  0A3D  086F               	movf	_pBDTEntryEP0OutNext,w
  8547  0A3E  0086               	movwf	6
  8548  0A3F  1781               	bsf	1,7
  8549  0A40  0008               	return
  8550  0A41                     l5030:	
  8551                           
  8552                           ;usb_device.c: 1915: else
  8553                           ;usb_device.c: 1916: {
  8554                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  8555  0A41  0020               	movlb	0	; select bank0
  8556  0A42  0A6F               	incf	_pBDTEntryEP0OutNext,w
  8557  0A43  0086               	movwf	6
  8558  0A44  3008               	movlw	8
  8559  0A45  0187               	clrf	7
  8560  0A46  0081               	movwf	1
  8561                           
  8562                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8563  0A47  3050               	movlw	80
  8564  0A48  00F2               	movwf	??_USBCtrlTrfRxService
  8565  0A49  01F3               	clrf	??_USBCtrlTrfRxService+1
  8566  0A4A  086F               	movf	_pBDTEntryEP0OutNext,w
  8567  0A4B  3E02               	addlw	2
  8568  0A4C  0086               	movwf	6
  8569  0A4D  0872               	movf	??_USBCtrlTrfRxService,w
  8570  0A4E  3FC0               	movwi [0]fsr1
  8571  0A4F  0873               	movf	??_USBCtrlTrfRxService+1,w
  8572  0A50  3FC1               	movwi [1]fsr1
  8573                           
  8574                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8575  0A51  086F               	movf	_pBDTEntryEP0OutNext,w
  8576  0A52  0086               	movwf	6
  8577  0A53  3004               	movlw	4
  8578  0A54  0081               	movwf	1
  8579                           
  8580                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8581  0A55  086F               	movf	_pBDTEntryEP0OutNext,w
  8582  0A56  0086               	movwf	6
  8583  0A57  1781               	bsf	1,7
  8584                           
  8585                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  8586  0A58  0023               	movlb	3	; select bank3
  8587  0A59  0825               	movf	(_outPipes+5)^(0+384),w
  8588  0A5A  1903               	btfsc	3,2
  8589  0A5B  2A5F               	goto	l5036
  8590                           
  8591                           ;usb_device.c: 1934: {
  8592                           ;usb_device.c: 1940: outPipes[0].pFunc();
  8593  0A5C  0825               	movf	(_outPipes+5)^(0+384),w
  8594  0A5D  3189  29C6         	ljmp	$	;if you get stuck here, you called an invalid pointer
  8595  0A5F                     l5036:	
  8596                           
  8597                           ;usb_device.c: 1945: }
  8598                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  8599  0A5F  0023               	movlb	3	; select bank3
  8600  0A60  13A2               	bcf	(_outPipes^(0+384)+2),7
  8601                           
  8602                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  8603  0A61  0021               	movlb	1	; select bank1
  8604  0A62  08E4               	movf	_USBDeferStatusStagePacket^(0+128),f
  8605  0A63  1D03               	skipz
  8606  0A64  0008               	return
  8607                           
  8608                           ;usb_device.c: 1961: {
  8609                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  8610  0A65  3186  2ED2         	ljmp	l4760
  8611  0A67                     __end_of_USBCtrlTrfRxService:	
  8612                           
  8613                           	psect	swtext1
  8614  07E4                     __pswtext1:	
  8615  07E4                     S5488:	
  8616  07E4  3184  2C62         	ljmp	l5254
  8617  07E6  3184  2C64         	ljmp	l5256
  8618  07E8  3184  2C4E         	ljmp	l699
  8619  07EA  3184  2C64         	ljmp	l5256
  8620  07EC  3184  2C4E         	ljmp	l699
  8621  07EE  3184  2C4F         	ljmp	l701
  8622  07F0  3184  2C54         	ljmp	l5242
  8623  07F2  3184  2C76         	ljmp	l5268
  8624  07F4  3184  2C58         	ljmp	l5246
  8625  07F6  3184  2C56         	ljmp	l5244
  8626  07F8  3184  2C65         	ljmp	l5258
  8627  07FA  3184  2C6B         	ljmp	l710
  8628  07FC  3184  2C4E         	ljmp	l699
  8629                           
  8630                           	psect	text9
  8631  0BD0                     __ptext9:	
  8632 ;; *************** function _USBStdGetStatusHandler *****************
  8633 ;; Defined at:
  8634 ;;		line 2149 in file "../framework/usb/usb_device.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;		None
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  p               1    0[COMMON] PTR struct __BDT
  8639 ;;		 -> NULL(0), BDT(48), 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;		None               void
  8642 ;; Registers used:
  8643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8644 ;; Tracked objects:
  8645 ;;		On entry : 1C/0
  8646 ;;		On exit  : 1F/1
  8647 ;;		Unchanged: FFFE0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        1 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_USBCheckStdRequest
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function _USBStdGetStatusHandler
  8665  0BD0                     _USBStdGetStatusHandler:	
  8666  0BD0                     l5132:	
  8667                           ;incstack = 0
  8668                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  8669                           
  8670                           
  8671                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  8672  0BD0  0020               	movlb	0	; select bank0
  8673  0BD1  01D8               	clrf	88	;volatile
  8674                           
  8675                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  8676  0BD2  01D9               	clrf	89	;volatile
  8677                           
  8678                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  8679  0BD3  2BFD               	goto	l5154
  8680  0BD4                     l637:	
  8681                           ;usb_device.c: 2154: {
  8682                           ;usb_device.c: 2155: case (0x00):
  8683                           
  8684                           
  8685                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  8686  0BD4  0021               	movlb	1	; select bank1
  8687  0BD5  17EC               	bsf	(_inPipes^(0+128)+2),7
  8688                           
  8689                           ;usb_device.c: 2164: }
  8690                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  8691                           
  8692                           ;usb_device.c: 2161: if(0 == 1)
  8693  0BD6  0023               	movlb	3	; select bank3
  8694  0BD7  0B38               	decfsz	_RemoteWakeup^(0+384),w
  8695  0BD8  2C08               	goto	l640
  8696                           
  8697                           ;usb_device.c: 2167: {
  8698                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  8699  0BD9  0020               	movlb	0	; select bank0
  8700  0BDA  14D8               	bsf	88,1	;volatile
  8701  0BDB  2C08               	goto	l640
  8702  0BDC                     l641:	
  8703                           ;usb_device.c: 2171: case (0x01):
  8704                           
  8705                           
  8706                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  8707  0BDC  0021               	movlb	1	; select bank1
  8708  0BDD  17EC               	bsf	(_inPipes^(0+128)+2),7
  8709                           
  8710                           ;usb_device.c: 2173: break;
  8711  0BDE  2C08               	goto	l640
  8712  0BDF                     l642:	
  8713                           ;usb_device.c: 2174: case (0x02):
  8714                           
  8715                           
  8716                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  8717  0BDF  0021               	movlb	1	; select bank1
  8718  0BE0  17EC               	bsf	(_inPipes^(0+128)+2),7
  8719                           
  8720                           ;usb_device.c: 2179: {
  8721                           ;usb_device.c: 2180: BDT_ENTRY *p;
  8722                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  8723  0BE1  0020               	movlb	0	; select bank0
  8724  0BE2  1BD4               	btfsc	84,7	;volatile
  8725  0BE3  2BEB               	goto	l5144
  8726                           
  8727                           ;usb_device.c: 2183: {
  8728                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8729  0BE4  0854               	movf	84,w	;volatile
  8730  0BE5  390F               	andlw	15
  8731  0BE6  3EAC               	addlw	_pBDTEntryOut& (0+255)
  8732  0BE7  0086               	movwf	6
  8733  0BE8  3001               	movlw	1	; select bank3/4
  8734  0BE9  0087               	movwf	7
  8735  0BEA  2BF0               	goto	L10
  8736  0BEB                     l5144:	
  8737                           ;usb_device.c: 2185: }
  8738                           
  8739                           
  8740                           ;usb_device.c: 2186: else
  8741                           ;usb_device.c: 2187: {
  8742                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8743  0BEB  0854               	movf	84,w	;volatile
  8744  0BEC  390F               	andlw	15
  8745  0BED  3EE0               	addlw	_pBDTEntryIn& (0+255)
  8746  0BEE  0086               	movwf	6
  8747  0BEF  0187               	clrf	7
  8748  0BF0                     L10:	
  8749  0BF0  0801               	movf	1,w
  8750  0BF1  00F0               	movwf	USBStdGetStatusHandler@p
  8751                           
  8752                           ;usb_device.c: 2189: }
  8753                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8754  0BF2  0086               	movwf	6
  8755  0BF3  0187               	clrf	7
  8756  0BF4  1F81               	btfss	1,7
  8757  0BF5  2C08               	goto	l640
  8758  0BF6  0870               	movf	USBStdGetStatusHandler@p,w
  8759  0BF7  0086               	movwf	6
  8760  0BF8  1D01               	btfss	1,2
  8761  0BF9  2C08               	goto	l640
  8762                           
  8763                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  8764  0BFA  3001               	movlw	1
  8765  0BFB  00D8               	movwf	88	;volatile
  8766  0BFC  2C08               	goto	l640
  8767  0BFD                     l5154:	
  8768  0BFD  0850               	movf	80,w	;volatile
  8769  0BFE  391F               	andlw	31
  8770                           
  8771                           ; Switch size 1, requested type "speed"
  8772                           ; Number of cases is 3, Range of values is 0 to 2
  8773                           ; switch strategies available:
  8774                           ; Name         Instructions Cycles
  8775                           ; simple_byte           10     6 (average)
  8776                           ; direct_byte           12     6 (fixed)
  8777                           ; jumptable            260     6 (fixed)
  8778                           ; rangetable             7     4 (fixed)
  8779                           ; spacedrange           11     6 (fixed)
  8780                           ; locatedrange           3     3 (fixed)
  8781                           ;	Chosen strategy is simple_byte
  8782  0BFF  1903               	skipnz
  8783  0C00  2BD4               	goto	l637
  8784  0C01  3A01               	xorlw	1	; case 1
  8785  0C02  1903               	skipnz
  8786  0C03  2BDC               	goto	l641
  8787  0C04  3A03               	xorlw	3	; case 2
  8788  0C05  1903               	skipnz
  8789  0C06  2BDF               	goto	l642
  8790  0C07  2C08               	goto	l640
  8791  0C08                     l640:	
  8792                           
  8793                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  8794  0C08  0021               	movlb	1	; select bank1
  8795  0C09  1FEC               	btfss	(_inPipes^(0+128)+2),7
  8796  0C0A  0008               	return
  8797                           
  8798                           ;usb_device.c: 2198: {
  8799                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8800  0C0B  3058               	movlw	88
  8801  0C0C  00EA               	movwf	_inPipes^(0+128)
  8802  0C0D  3002               	movlw	2
  8803  0C0E  01EB               	clrf	(_inPipes+1)^(0+128)
  8804                           
  8805                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8806  0C0F  146C               	bsf	(_inPipes^(0+128)+2),0
  8807                           
  8808                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  8809  0C10  00ED               	movwf	(_inPipes^(0+128)+3)
  8810  0C11  0008               	return
  8811  0C12                     __end_of_USBStdGetStatusHandler:	
  8812                           
  8813                           	psect	text10
  8814  0ADF                     __ptext10:	
  8815 ;; *************** function _USBStdGetDscHandler *****************
  8816 ;; Defined at:
  8817 ;;		line 2063 in file "../framework/usb/usb_device.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;		None               void
  8824 ;; Registers used:
  8825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8826 ;; Tracked objects:
  8827 ;;		On entry : 1C/0
  8828 ;;		On exit  : 1E/0
  8829 ;;		Unchanged: FFFE0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;Total ram usage:        2 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    1
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_USBCheckStdRequest
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _USBStdGetDscHandler
  8847  0ADF                     _USBStdGetDscHandler:	
  8848  0ADF                     l5102:	
  8849                           ;incstack = 0
  8850                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  8851                           
  8852                           
  8853                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  8854  0ADF  0020               	movlb	0	; select bank0
  8855  0AE0  0850               	movf	80,w	;volatile
  8856  0AE1  3A80               	xorlw	128
  8857  0AE2  1D03               	skipz
  8858  0AE3  0008               	return
  8859                           
  8860                           ;usb_device.c: 2065: {
  8861                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8862  0AE4  30C0               	movlw	192
  8863  0AE5  0021               	movlb	1	; select bank1
  8864  0AE6  00EC               	movwf	(_inPipes^(0+128)+2)
  8865                           
  8866                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  8867  0AE7  2B35               	goto	l5130
  8868  0AE8                     l5106:	
  8869                           
  8870                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8871  0AE8  30B0               	movlw	low (_device_dsc| (0+32768))
  8872  0AE9  0021               	movlb	1	; select bank1
  8873  0AEA  00EA               	movwf	_inPipes^(0+128)
  8874  0AEB  3089               	movlw	high (_device_dsc| (0+32768))
  8875  0AEC  00EB               	movwf	(_inPipes+1)^(0+128)
  8876                           
  8877                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  8878  0AED  3012               	movlw	18
  8879  0AEE  00ED               	movwf	(_inPipes^(0+128)+3)
  8880  0AEF  01EE               	clrf	((_inPipes+1)^(0+128)+3)
  8881                           
  8882                           ;usb_device.c: 2077: break;
  8883  0AF0  0008               	return
  8884  0AF1                     l5108:	
  8885                           
  8886                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  8887  0AF1  0852               	movf	82,w
  8888  0AF2  1D03               	skipz
  8889  0AF3  2B19               	goto	l5116
  8890                           
  8891                           ;usb_device.c: 2083: {
  8892                           ;usb_device.c: 2087: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8893  0AF4  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
  8894  0AF5  0084               	movwf	4
  8895  0AF6  3089               	movlw	high (_USB_CD_Ptr| (0+32768))
  8896  0AF7  0085               	movwf	5
  8897  0AF8  0852               	movf	82,w	;volatile
  8898  0AF9  0784               	addwf	4,f
  8899  0AFA  1803               	skipnc
  8900  0AFB  0A85               	incf	5,f
  8901  0AFC  3F00               	moviw [0]fsr0
  8902  0AFD  0021               	movlb	1	; select bank1
  8903  0AFE  00EA               	movwf	_inPipes^(0+128)
  8904  0AFF  3089               	movlw	(high __stringtab)| (0+128)
  8905  0B00  00EB               	movwf	(_inPipes+1)^(0+128)
  8906                           
  8907                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8908  0B01  00F1               	movwf	??_USBStdGetDscHandler+1
  8909  0B02  086A               	movf	_inPipes^(0+128),w
  8910  0B03  00F0               	movwf	??_USBStdGetDscHandler
  8911  0B04  3E02               	addlw	2
  8912  0B05  0084               	movwf	4
  8913  0B06  0871               	movf	??_USBStdGetDscHandler+1,w
  8914  0B07  1803               	skipnc
  8915  0B08  0A71               	incf	??_USBStdGetDscHandler+1,w
  8916  0B09  0085               	movwf	5
  8917  0B0A  0800               	movf	0,w	;code access
  8918  0B0B  00ED               	movwf	(_inPipes^(0+128)+3)
  8919                           
  8920                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8921  0B0C  086B               	movf	(_inPipes+1)^(0+128),w
  8922  0B0D  00F1               	movwf	??_USBStdGetDscHandler+1
  8923  0B0E  086A               	movf	_inPipes^(0+128),w
  8924  0B0F  00F0               	movwf	??_USBStdGetDscHandler
  8925  0B10  3E03               	addlw	3
  8926  0B11  0084               	movwf	4
  8927  0B12  0871               	movf	??_USBStdGetDscHandler+1,w
  8928  0B13  1803               	skipnc
  8929  0B14  0A71               	incf	??_USBStdGetDscHandler+1,w
  8930  0B15  0085               	movwf	5
  8931  0B16  0800               	movf	0,w	;code access
  8932  0B17  00EE               	movwf	(_inPipes^(0+128)+4)
  8933                           
  8934                           ;usb_device.c: 2095: }
  8935  0B18  0008               	return
  8936  0B19                     l5116:	
  8937                           
  8938                           ;usb_device.c: 2096: else
  8939                           ;usb_device.c: 2097: {
  8940                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  8941  0B19  0021               	movlb	1	; select bank1
  8942  0B1A  01EC               	clrf	(_inPipes^(0+128)+2)
  8943  0B1B  0008               	return
  8944  0B1C                     l5118:	
  8945                           
  8946                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  8947  0B1C  3003               	movlw	3
  8948  0B1D  0252               	subwf	82,w	;volatile
  8949  0B1E  1803               	skipnc
  8950  0B1F  2B19               	goto	l5116
  8951                           
  8952                           ;usb_device.c: 2106: {
  8953                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8954  0B20  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
  8955  0B21  0084               	movwf	4
  8956  0B22  3089               	movlw	high (_USB_SD_Ptr| (0+32768))
  8957  0B23  0085               	movwf	5
  8958  0B24  0852               	movf	82,w	;volatile
  8959  0B25  0784               	addwf	4,f
  8960  0B26  1803               	skipnc
  8961  0B27  0A85               	incf	5,f
  8962  0B28  3F00               	moviw [0]fsr0
  8963  0B29  0021               	movlb	1	; select bank1
  8964  0B2A  00EA               	movwf	_inPipes^(0+128)
  8965  0B2B  3089               	movlw	(high __stringtab)| (0+128)
  8966  0B2C  00EB               	movwf	(_inPipes+1)^(0+128)
  8967                           
  8968                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  8969  0B2D  086A               	movf	_inPipes^(0+128),w
  8970  0B2E  0084               	movwf	4
  8971  0B2F  086B               	movf	(_inPipes+1)^(0+128),w
  8972  0B30  0085               	movwf	5
  8973  0B31  0800               	movf	0,w	;code access
  8974  0B32  00ED               	movwf	(_inPipes^(0+128)+3)
  8975  0B33  01EE               	clrf	((_inPipes+1)^(0+128)+3)
  8976                           
  8977                           ;usb_device.c: 2111: }
  8978  0B34  0008               	return
  8979  0B35                     l5130:	
  8980  0B35  0020               	movlb	0	; select bank0
  8981  0B36  0853               	movf	83,w	;volatile
  8982                           
  8983                           ; Switch size 1, requested type "speed"
  8984                           ; Number of cases is 3, Range of values is 1 to 3
  8985                           ; switch strategies available:
  8986                           ; Name         Instructions Cycles
  8987                           ; simple_byte           10     6 (average)
  8988                           ; direct_byte           15     9 (fixed)
  8989                           ; jumptable            263     9 (fixed)
  8990                           ;	Chosen strategy is simple_byte
  8991  0B37  3A01               	xorlw	1	; case 1
  8992  0B38  1903               	skipnz
  8993  0B39  2AE8               	goto	l5106
  8994  0B3A  3A03               	xorlw	3	; case 2
  8995  0B3B  1903               	skipnz
  8996  0B3C  2AF1               	goto	l5108
  8997  0B3D  3A01               	xorlw	1	; case 3
  8998  0B3E  1903               	skipnz
  8999  0B3F  2B1C               	goto	l5118
  9000  0B40  2B19               	goto	l5116
  9001  0B41  0008               	return
  9002  0B42                     __end_of_USBStdGetDscHandler:	
  9003                           
  9004                           	psect	text11
  9005  0A67                     __ptext11:	
  9006 ;; *************** function _USBStdSetCfgHandler *****************
  9007 ;; Defined at:
  9008 ;;		line 1988 in file "../framework/usb/usb_device.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;		None
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  p               2   10[COMMON] PTR unsigned char 
  9013 ;;		 -> UEP1(1), 
  9014 ;;  i               1   12[COMMON] unsigned char 
  9015 ;;  i               1   13[COMMON] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;		None               void
  9018 ;; Registers used:
  9019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 1C/0
  9022 ;;		On exit  : 1F/1
  9023 ;;		Unchanged: FFFE0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;Total ram usage:        4 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    6
  9032 ;; This function calls:
  9033 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9034 ;;		_memset
  9035 ;; This function is called by:
  9036 ;;		_USBCheckStdRequest
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           
  9041                           ;psect for function _USBStdSetCfgHandler
  9042  0A67                     _USBStdSetCfgHandler:	
  9043  0A67                     l5042:	
  9044                           ;incstack = 0
  9045                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  9046                           
  9047                           
  9048                           ;usb_device.c: 1989: uint8_t i;
  9049                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  9050  0A67  0021               	movlb	1	; select bank1
  9051  0A68  300E               	movlw	14
  9052  0A69  17EC               	bsf	(_inPipes^(0+128)+2),7
  9053                           
  9054                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  9055  0A6A  00FB               	movwf	USBStdSetCfgHandler@p+1
  9056  0A6B  3099               	movlw	153
  9057  0A6C  00FA               	movwf	USBStdSetCfgHandler@p
  9058  0A6D  01FC               	clrf	USBStdSetCfgHandler@i_1837
  9059  0A6E                     l5050:	
  9060  0A6E  087A               	movf	USBStdSetCfgHandler@p,w
  9061  0A6F  0086               	movwf	6
  9062  0A70  087B               	movf	USBStdSetCfgHandler@p+1,w
  9063  0A71  0087               	movwf	7
  9064  0A72  0181               	clrf	1
  9065  0A73  0AFA               	incf	USBStdSetCfgHandler@p,f
  9066  0A74  1903               	skipnz
  9067  0A75  0AFB               	incf	USBStdSetCfgHandler@p+1,f
  9068  0A76  3002               	movlw	2
  9069  0A77  0AFC               	incf	USBStdSetCfgHandler@i_1837,f
  9070  0A78  027C               	subwf	USBStdSetCfgHandler@i_1837,w
  9071  0A79  1C03               	skipc
  9072  0A7A  2A6E               	goto	l5050
  9073                           
  9074                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9075  0A7B  3020               	movlw	32
  9076  0A7C  00F0               	movwf	?_memset
  9077  0A7D  3030               	movlw	48
  9078  0A7E  01F1               	clrf	?_memset+1
  9079  0A7F  01F2               	clrf	?_memset+2
  9080  0A80  01F3               	clrf	?_memset+3
  9081  0A81  00F4               	movwf	?_memset+4
  9082  0A82  01F5               	clrf	?_memset+5
  9083  0A83  22C6  318A         	fcall	_memset
  9084                           
  9085                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  9086  0A85  003D               	movlb	29	; select bank29
  9087  0A86  170E               	bsf	14,6	;volatile
  9088                           
  9089                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(2+1u); i++)
  9090  0A87  01FD               	clrf	USBStdSetCfgHandler@i
  9091  0A88                     l5068:	
  9092                           
  9093                           ;usb_device.c: 2007: {
  9094                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  9095  0A88  087D               	movf	USBStdSetCfgHandler@i,w
  9096  0A89  3EA6               	addlw	_ep_data_in& (0+255)
  9097  0A8A  0086               	movwf	6
  9098  0A8B  3001               	movlw	1	; select bank3/4
  9099  0A8C  0087               	movwf	7
  9100  0A8D  0181               	clrf	1
  9101                           
  9102                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  9103  0A8E  087D               	movf	USBStdSetCfgHandler@i,w
  9104  0A8F  3EA9               	addlw	_ep_data_out& (0+255)
  9105  0A90  0086               	movwf	6
  9106  0A91  3003               	movlw	3
  9107  0A92  0181               	clrf	1
  9108  0A93  0AFD               	incf	USBStdSetCfgHandler@i,f
  9109  0A94  027D               	subwf	USBStdSetCfgHandler@i,w
  9110  0A95  1C03               	skipc
  9111  0A96  2A88               	goto	l5068
  9112                           
  9113                           ;usb_device.c: 2010: }
  9114                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,2);
  9115  0A97  30CD               	movlw	low _USBAlternateInterface
  9116  0A98  00F0               	movwf	?_memset
  9117  0A99  3001               	movlw	high _USBAlternateInterface
  9118  0A9A  00F1               	movwf	?_memset+1
  9119  0A9B  3002               	movlw	2
  9120  0A9C  01F2               	clrf	?_memset+2
  9121  0A9D  01F3               	clrf	?_memset+3
  9122  0A9E  00F4               	movwf	?_memset+4
  9123  0A9F  01F5               	clrf	?_memset+5
  9124  0AA0  22C6  318A         	fcall	_memset
  9125                           
  9126                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  9127  0AA2  003D               	movlb	29	; select bank29
  9128  0AA3  130E               	bcf	14,6	;volatile
  9129                           
  9130                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9131  0AA4  3028               	movlw	40
  9132  0AA5  0021               	movlb	1	; select bank1
  9133  0AA6  00E0               	movwf	_pBDTEntryIn^(0+128)
  9134                           
  9135                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9136  0AA7  3020               	movlw	32
  9137  0AA8  0020               	movlb	0	; select bank0
  9138  0AA9  00EE               	movwf	_pBDTEntryEP0OutCurrent
  9139                           
  9140                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9141  0AAA  00EF               	movwf	_pBDTEntryEP0OutNext
  9142                           
  9143                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9144  0AAB  0852               	movf	82,w	;volatile
  9145  0AAC  0022               	movlb	2	; select bank2
  9146  0AAD  00EF               	movwf	_USBActiveConfiguration^(0+256)
  9147                           
  9148                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  9149  0AAE  08EF               	movf	_USBActiveConfiguration^(0+256),f
  9150  0AAF  1D03               	skipz
  9151  0AB0  2AB5               	goto	l5090
  9152                           
  9153                           ;usb_device.c: 2029: {
  9154                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  9155  0AB1  3010               	movlw	16
  9156  0AB2  0021               	movlb	1	; select bank1
  9157  0AB3  00E5               	movwf	_USBDeviceState^(0+128)
  9158                           
  9159                           ;usb_device.c: 2032: }
  9160  0AB4  0008               	return
  9161  0AB5                     l5090:	
  9162                           
  9163                           ;usb_device.c: 2033: else
  9164                           ;usb_device.c: 2034: {
  9165                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9166  0AB5  0020               	movlb	0	; select bank0
  9167  0AB6  306F               	movlw	low _USBActiveConfiguration
  9168  0AB7  01E0               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER
  9169  0AB8  0AE0               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER,f
  9170  0AB9  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  9171  0ABA  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9172  0ABB  3001               	movlw	high _USBActiveConfiguration
  9173  0ABC  00E3               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9174  0ABD  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9175  0ABE  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,f
  9176  0ABF  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5
  9177  0AC0  3185  2558         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9178                           
  9179                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  9180  0AC2  3020               	movlw	32
  9181  0AC3  0021               	movlb	1	; select bank1
  9182  0AC4  00E5               	movwf	_USBDeviceState^(0+128)
  9183  0AC5  0008               	return
  9184  0AC6                     __end_of_USBStdSetCfgHandler:	
  9185  0AC6                     __ptext12:	
  9186 ;; *************** function _memset *****************
  9187 ;; Defined at:
  9188 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\memset.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  p1              2    0[COMMON] PTR void 
  9191 ;;		 -> USBAlternateInterface(2), BDT(48), 
  9192 ;;  c               2    2[COMMON] int 
  9193 ;;  n               2    4[COMMON] unsigned int 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  p               2    7[COMMON] PTR unsigned char 
  9196 ;;		 -> USBAlternateInterface(2), BDT(48), 
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  2    wreg      PTR void 
  9199 ;; Registers used:
  9200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 2/1
  9203 ;;		On exit  : 2/1
  9204 ;;		Unchanged: FFFFD/0
  9205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;Total ram usage:        9 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    1
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_USBStdSetCfgHandler
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _memset
  9222  0AC6                     _memset:	
  9223                           
  9224                           ;incstack = 0
  9225                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  9226  0AC6  0871               	movf	memset@p1+1,w
  9227  0AC7  00F8               	movwf	memset@p+1
  9228  0AC8  0870               	movf	memset@p1,w
  9229  0AC9  00F7               	movwf	memset@p
  9230  0ACA                     l5100:	
  9231  0ACA  3001               	movlw	1
  9232  0ACB  02F4               	subwf	memset@n,f
  9233  0ACC  3000               	movlw	0
  9234  0ACD  3BF5               	subwfb	memset@n+1,f
  9235  0ACE  0A74               	incf	memset@n,w
  9236  0ACF  1903               	skipnz
  9237  0AD0  0A75               	incf	memset@n+1,w
  9238  0AD1  1903               	btfsc	3,2
  9239  0AD2  0008               	return
  9240  0AD3  0872               	movf	memset@c,w
  9241  0AD4  00F6               	movwf	??_memset
  9242  0AD5  0877               	movf	memset@p,w
  9243  0AD6  0086               	movwf	6
  9244  0AD7  0878               	movf	memset@p+1,w
  9245  0AD8  0087               	movwf	7
  9246  0AD9  0876               	movf	??_memset,w
  9247  0ADA  0081               	movwf	1
  9248  0ADB  0AF7               	incf	memset@p,f
  9249  0ADC  1903               	skipnz
  9250  0ADD  0AF8               	incf	memset@p+1,f
  9251  0ADE  2ACA               	goto	l5100
  9252  0ADF                     __end_of_memset:	
  9253                           
  9254                           	psect	swtext2
  9255  0800                     __pswtext2:	
  9256  0800                     S5494:	
  9257  0800  3185  2D61         	ljmp	l4668
  9258  0802  3185  2D76         	ljmp	l118
  9259  0804  3185  2D62         	ljmp	l4670
  9260  0806  3185  2D76         	ljmp	l118
  9261  0808  3185  2D76         	ljmp	l118
  9262  080A  3185  2D76         	ljmp	l118
  9263  080C  3185  2D76         	ljmp	l118
  9264  080E  3185  2D76         	ljmp	l118
  9265  0810  3185  2D76         	ljmp	l118
  9266  0812  3185  2D76         	ljmp	l118
  9267  0814  3185  2D76         	ljmp	l118
  9268  0816  3185  2D76         	ljmp	l118
  9269  0818  3185  2D76         	ljmp	l118
  9270  081A  3185  2D76         	ljmp	l118
  9271  081C  3185  2D76         	ljmp	l118
  9272  081E  3185  2D76         	ljmp	l118
  9273  0820  3185  2D76         	ljmp	l118
  9274  0822  3185  2D76         	ljmp	l118
  9275  0824  3185  2D76         	ljmp	l118
  9276  0826  3185  2D76         	ljmp	l118
  9277  0828  3185  2D76         	ljmp	l118
  9278  082A  3185  2D76         	ljmp	l118
  9279  082C  3185  2D76         	ljmp	l118
  9280  082E  3185  2D76         	ljmp	l118
  9281  0830  3185  2D76         	ljmp	l118
  9282  0832  3185  2D76         	ljmp	l118
  9283  0834  3185  2D76         	ljmp	l118
  9284  0836  3185  2D76         	ljmp	l118
  9285  0838  3185  2D76         	ljmp	l118
  9286  083A  3185  2D76         	ljmp	l118
  9287  083C  3185  2D76         	ljmp	l118
  9288  083E  3185  2D76         	ljmp	l118
  9289  0840  3185  2D76         	ljmp	l118
  9290  0842  3185  2D76         	ljmp	l118
  9291  0844  3185  2D76         	ljmp	l118
  9292  0846  3185  2D76         	ljmp	l118
  9293  0848  3185  2D76         	ljmp	l118
  9294  084A  3185  2D76         	ljmp	l118
  9295  084C  3185  2D76         	ljmp	l118
  9296  084E  3185  2D76         	ljmp	l118
  9297  0850  3185  2D76         	ljmp	l118
  9298  0852  3185  2D76         	ljmp	l118
  9299  0854  3185  2D76         	ljmp	l118
  9300  0856  3185  2D76         	ljmp	l118
  9301  0858  3185  2D76         	ljmp	l118
  9302  085A  3185  2D76         	ljmp	l118
  9303  085C  3185  2D76         	ljmp	l118
  9304  085E  3185  2D76         	ljmp	l118
  9305  0860  3185  2D76         	ljmp	l118
  9306  0862  3185  2D76         	ljmp	l118
  9307  0864  3185  2D76         	ljmp	l118
  9308  0866  3185  2D76         	ljmp	l118
  9309  0868  3185  2D76         	ljmp	l118
  9310  086A  3185  2D76         	ljmp	l118
  9311  086C  3185  2D76         	ljmp	l118
  9312  086E  3185  2D76         	ljmp	l118
  9313  0870  3185  2D76         	ljmp	l118
  9314  0872  3185  2D76         	ljmp	l118
  9315  0874  3185  2D76         	ljmp	l118
  9316  0876  3185  2D76         	ljmp	l118
  9317  0878  3185  2D76         	ljmp	l118
  9318  087A  3185  2D76         	ljmp	l118
  9319  087C  3185  2D76         	ljmp	l118
  9320  087E  3185  2D76         	ljmp	l118
  9321  0880  3185  2D76         	ljmp	l118
  9322  0882  3185  2D76         	ljmp	l118
  9323  0884  3185  2D76         	ljmp	l118
  9324  0886  3185  2D76         	ljmp	l118
  9325  0888  3185  2D76         	ljmp	l118
  9326  088A  3185  2D76         	ljmp	l118
  9327  088C  3185  2D76         	ljmp	l118
  9328  088E  3185  2D76         	ljmp	l118
  9329  0890  3185  2D76         	ljmp	l118
  9330  0892  3185  2D76         	ljmp	l118
  9331  0894  3185  2D76         	ljmp	l118
  9332  0896  3185  2D76         	ljmp	l118
  9333  0898  3185  2D76         	ljmp	l118
  9334  089A  3185  2D76         	ljmp	l118
  9335  089C  3185  2D76         	ljmp	l118
  9336  089E  3185  2D76         	ljmp	l118
  9337  08A0  3185  2D76         	ljmp	l118
  9338  08A2  3185  2D76         	ljmp	l118
  9339  08A4  3185  2D76         	ljmp	l118
  9340  08A6  3185  2D76         	ljmp	l118
  9341  08A8  3185  2D76         	ljmp	l118
  9342  08AA  3185  2D76         	ljmp	l118
  9343  08AC  3185  2D76         	ljmp	l118
  9344  08AE  3185  2D76         	ljmp	l118
  9345  08B0  3185  2D76         	ljmp	l118
  9346  08B2  3185  2D76         	ljmp	l118
  9347  08B4  3185  2D76         	ljmp	l118
  9348  08B6  3185  2D76         	ljmp	l118
  9349  08B8  3185  2D76         	ljmp	l118
  9350  08BA  3185  2D76         	ljmp	l118
  9351  08BC  3185  2D76         	ljmp	l118
  9352  08BE  3185  2D76         	ljmp	l118
  9353  08C0  3185  2D76         	ljmp	l118
  9354  08C2  3185  2D76         	ljmp	l118
  9355  08C4  3185  2D76         	ljmp	l118
  9356  08C6  3185  2D76         	ljmp	l118
  9357  08C8  3185  2D76         	ljmp	l118
  9358  08CA  3185  2D76         	ljmp	l118
  9359  08CC  3185  2D76         	ljmp	l118
  9360  08CE  3185  2D76         	ljmp	l118
  9361  08D0  3185  2D76         	ljmp	l118
  9362  08D2  3185  2D76         	ljmp	l118
  9363  08D4  3185  2D76         	ljmp	l118
  9364  08D6  3185  2D76         	ljmp	l118
  9365  08D8  3185  2D76         	ljmp	l118
  9366  08DA  3185  2D76         	ljmp	l118
  9367  08DC  3185  2D76         	ljmp	l118
  9368  08DE  3185  2D76         	ljmp	l118
  9369  08E0  3185  2D76         	ljmp	l118
  9370  08E2  3185  2D76         	ljmp	l118
  9371  08E4  3185  2D60         	ljmp	l4662
  9372  08E6  3185  2D60         	ljmp	l4662
  9373  08E8  3185  2D60         	ljmp	l4662
  9374                           
  9375                           	psect	text22
  9376  0B42                     __ptext22:	
  9377 ;; *************** function _USBCheckCDCRequest *****************
  9378 ;; Defined at:
  9379 ;;		line 205 in file "../framework/usb/usb_device_cdc.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;		None               void
  9386 ;; Registers used:
  9387 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 1F/0
  9390 ;;		On exit  : 1C/0
  9391 ;;		Unchanged: FFFE0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    1
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function _USBCheckCDCRequest
  9409  0B42                     _USBCheckCDCRequest:	
  9410  0B42                     l4688:	
  9411                           ;incstack = 0
  9412                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  9413                           
  9414                           
  9415                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
  9416  0B42  0850               	movf	80,w	;volatile
  9417  0B43  391F               	andlw	31
  9418  0B44  3A01               	xorlw	1
  9419  0B45  1D03               	btfss	3,2
  9420  0B46  0008               	return
  9421                           
  9422                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
  9423  0B47  0E50               	swapf	80,w	;volatile
  9424  0B48  0C89               	rrf	9,f
  9425  0B49  3903               	andlw	3
  9426  0B4A  3A01               	xorlw	1
  9427  0B4B  1D03               	btfss	3,2
  9428  0B4C  0008               	return
  9429                           
  9430                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
  9431                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
  9432  0B4D  0854               	movf	84,w	;volatile
  9433  0B4E  1903               	btfsc	3,2
  9434  0B4F  2B7F               	goto	l4732
  9435  0B50  0354               	decf	84,w	;volatile
  9436  0B51  1D03               	btfss	3,2
  9437  0B52  0008               	return
  9438  0B53  2B7F               	goto	l4732
  9439  0B54                     l4702:	
  9440                           
  9441                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9442  0B54  30BE               	movlw	low _dummy_encapsulated_cmd_response
  9443  0B55  0021               	movlb	1	; select bank1
  9444  0B56  00EA               	movwf	_inPipes^(0+128)
  9445  0B57  3001               	movlw	high _dummy_encapsulated_cmd_response
  9446  0B58  00EB               	movwf	(_inPipes+1)^(0+128)
  9447                           
  9448                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
  9449  0B59  3008               	movlw	8
  9450  0B5A  00ED               	movwf	(_inPipes^(0+128)+3)
  9451  0B5B  01EE               	clrf	((_inPipes+1)^(0+128)+3)
  9452                           
  9453                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9454  0B5C  146C               	bsf	(_inPipes^(0+128)+2),0
  9455  0B5D                     l4708:	
  9456                           
  9457                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  9458  0B5D  0021               	movlb	1	; select bank1
  9459  0B5E  17EC               	bsf	(_inPipes^(0+128)+2),7
  9460                           
  9461                           ;usb_device_cdc.c: 232: break;
  9462  0B5F  0008               	return
  9463  0B60                     l4710:	
  9464                           
  9465                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9466  0B60  30BE               	movlw	low _dummy_encapsulated_cmd_response
  9467  0B61  0021               	movlb	1	; select bank1
  9468  0B62  00EA               	movwf	_inPipes^(0+128)
  9469  0B63  3001               	movlw	high _dummy_encapsulated_cmd_response
  9470  0B64  00EB               	movwf	(_inPipes+1)^(0+128)
  9471  0B65  2B5D               	goto	l4708
  9472  0B66                     l4714:	
  9473                           
  9474                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
  9475  0B66  0857               	movf	87,w	;volatile
  9476  0B67  0023               	movlb	3	; select bank3
  9477  0B68  00A4               	movwf	((_outPipes+1)^(0+384)+3)
  9478  0B69  0020               	movlb	0	; select bank0
  9479  0B6A  0856               	movf	86,w	;volatile
  9480  0B6B  0023               	movlb	3	; select bank3
  9481  0B6C  00A3               	movwf	(_outPipes^(0+384)+3)
  9482                           
  9483                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9484  0B6D  30C6               	movlw	_line_coding& (0+255)
  9485  0B6E  00A0               	movwf	_outPipes^(0+384)
  9486                           
  9487                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
  9488  0B6F  01A5               	clrf	(_outPipes+5)^(0+384)
  9489                           
  9490                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
  9491  0B70  17A2               	bsf	(_outPipes^(0+384)+2),7
  9492                           
  9493                           ;usb_device_cdc.c: 246: break;
  9494  0B71  0008               	return
  9495  0B72                     l4720:	
  9496                           
  9497                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9498  0B72  30C6               	movlw	low _line_coding
  9499  0B73  0021               	movlb	1	; select bank1
  9500  0B74  00EA               	movwf	_inPipes^(0+128)
  9501  0B75  3001               	movlw	high _line_coding
  9502  0B76  00EB               	movwf	(_inPipes+1)^(0+128)
  9503  0B77  3007               	movlw	7
  9504  0B78  00ED               	movwf	(_inPipes^(0+128)+3)
  9505  0B79  30C1               	movlw	193
  9506  0B7A  01EE               	clrf	((_inPipes+1)^(0+128)+3)
  9507  0B7B  00EC               	movwf	(_inPipes^(0+128)+2)
  9508                           
  9509                           ;usb_device_cdc.c: 253: break;
  9510  0B7C  0008               	return
  9511  0B7D                     l4726:	
  9512                           
  9513                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9514  0B7D  0852               	movf	82,w	;volatile
  9515  0B7E  2B5D               	goto	l4708
  9516  0B7F                     l4732:	
  9517  0B7F  0851               	movf	81,w	;volatile
  9518                           
  9519                           ; Switch size 1, requested type "speed"
  9520                           ; Number of cases is 5, Range of values is 0 to 34
  9521                           ; switch strategies available:
  9522                           ; Name         Instructions Cycles
  9523                           ; direct_byte           76     6 (fixed)
  9524                           ; simple_byte           16     9 (average)
  9525                           ; jumptable            260     6 (fixed)
  9526                           ; rangetable            39     4 (fixed)
  9527                           ; spacedrange           75     6 (fixed)
  9528                           ; locatedrange          35     3 (fixed)
  9529                           ;	Chosen strategy is direct_byte
  9530  0B80  0084               	movwf	4
  9531  0B81  3023               	movlw	35
  9532  0B82  0204               	subwf	4,w
  9533  0B83  1803               	skipnc
  9534  0B84  0008               	return
  9535  0B85  318B               	movlp	high S5496
  9536  0B86  3504               	lslf	4,w
  9537  0B87  3E8A               	addlw	low S5496
  9538  0B88  0082               	movwf	2
  9539  0B89                     l791:	
  9540  0B89  0008               	return
  9541  0B8A                     __end_of_USBCheckCDCRequest:	
  9542                           
  9543                           	psect	swtext3
  9544  0B8A                     __pswtext3:	
  9545  0B8A                     S5496:	
  9546  0B8A  318B  2B54         	ljmp	l4702
  9547  0B8C  318B  2B60         	ljmp	l4710
  9548  0B8E  318B  2B89         	ljmp	l791
  9549  0B90  318B  2B89         	ljmp	l791
  9550  0B92  318B  2B89         	ljmp	l791
  9551  0B94  318B  2B89         	ljmp	l791
  9552  0B96  318B  2B89         	ljmp	l791
  9553  0B98  318B  2B89         	ljmp	l791
  9554  0B9A  318B  2B89         	ljmp	l791
  9555  0B9C  318B  2B89         	ljmp	l791
  9556  0B9E  318B  2B89         	ljmp	l791
  9557  0BA0  318B  2B89         	ljmp	l791
  9558  0BA2  318B  2B89         	ljmp	l791
  9559  0BA4  318B  2B89         	ljmp	l791
  9560  0BA6  318B  2B89         	ljmp	l791
  9561  0BA8  318B  2B89         	ljmp	l791
  9562  0BAA  318B  2B89         	ljmp	l791
  9563  0BAC  318B  2B89         	ljmp	l791
  9564  0BAE  318B  2B89         	ljmp	l791
  9565  0BB0  318B  2B89         	ljmp	l791
  9566  0BB2  318B  2B89         	ljmp	l791
  9567  0BB4  318B  2B89         	ljmp	l791
  9568  0BB6  318B  2B89         	ljmp	l791
  9569  0BB8  318B  2B89         	ljmp	l791
  9570  0BBA  318B  2B89         	ljmp	l791
  9571  0BBC  318B  2B89         	ljmp	l791
  9572  0BBE  318B  2B89         	ljmp	l791
  9573  0BC0  318B  2B89         	ljmp	l791
  9574  0BC2  318B  2B89         	ljmp	l791
  9575  0BC4  318B  2B89         	ljmp	l791
  9576  0BC6  318B  2B89         	ljmp	l791
  9577  0BC8  318B  2B89         	ljmp	l791
  9578  0BCA  318B  2B66         	ljmp	l4714
  9579  0BCC  318B  2B72         	ljmp	l4720
  9580  0BCE  318B  2B7D         	ljmp	l4726
  9581                           
  9582                           	psect	swtext4
  9583  08EA                     __pswtext4:	
  9584  08EA                     S5498:	
  9585  08EA  3180  28EB         	ljmp	l2848
  9586  08EC  3181  2915         	ljmp	l2854
  9587  08EE  3181  293F         	ljmp	l2858
  9588  08F0  3181  296C         	ljmp	l2862
  9589  08F2  3181  299B         	ljmp	l2866
  9590  08F4  3181  29A8         	ljmp	l2872
  9591                           
  9592                           	psect	text42
  9593  0000                     __ptext42:	
  9594 ;; *************** function _store_key_level *****************
  9595 ;; Defined at:
  9596 ;;		line 107 in file "../src/scan.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  level           1    wreg     unsigned char 
  9599 ;;  end_of_scan     1    3[COMMON] unsigned char 
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  level           1    4[COMMON] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      unsigned char 
  9604 ;; Registers used:
  9605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 1F/1
  9608 ;;		On exit  : 1F/1
  9609 ;;		Unchanged: FFFE0/0
  9610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9611 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;Total ram usage:        2 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    2
  9618 ;; This function calls:
  9619 ;;		_process_level
  9620 ;; This function is called by:
  9621 ;;		_scan_task
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625  0000                     _store_key_level:	
  9626                           ;psect for function _store_key_level
  9627                           
  9628  0000                     __end_of_store_key_level:	
  9629                           ;scan.c: 113: return idx_key == 0;
  9630                           
  9631                           ;scan.c: 112: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  9632                           
  9633                           ;scan.c: 111: idx_key ++;
  9634                           
  9635                           ;scan.c: 110: adc_levels[idx_key] = level;
  9636                           
  9637                           ;psect for function _process_level
  9638                           
  9639                           ;scan.c: 108: static uint8_t idx_key = 0;
  9640                           ;scan.c: 109: process_level(idx_key, adc_levels[idx_key], level);
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _store_key_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9644                           ;store_key_level@level stored from wreg
  9645                           
  9646                           
  9647                           	psect	text43
  9648  0000                     __ptext43:	
  9649 ;; *************** function _process_level *****************
  9650 ;; Defined at:
  9651 ;;		line 100 in file "../src/scan.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  idx_key         1    wreg     unsigned char 
  9654 ;;  old_level       1    0[COMMON] const unsigned char 
  9655 ;;  new_level       1    1[COMMON] const unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  idx_key         1    2[COMMON] unsigned char 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;		None               void
  9660 ;; Registers used:
  9661 ;;		wreg
  9662 ;; Tracked objects:
  9663 ;;		On entry : 1F/1
  9664 ;;		On exit  : 1F/1
  9665 ;;		Unchanged: FFFFFFE0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        3 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    1
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_store_key_level
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681  0000                     _process_level:	
  9682                           ;psect for function _process_level
  9683                           
  9684  0000                     __end_of_process_level:	
  9685                           ;incstack = 0
  9686                           ; Regs used in _process_level: [wreg]
  9687                           
  9688                           
  9689                           	psect	text44
  9690  0000                     __ptext44:	
  9691 ;; *************** function _get_adc *****************
  9692 ;; Defined at:
  9693 ;;		line 96 in file "../src/scan.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      unsigned char 
  9700 ;; Registers used:
  9701 ;;		wreg
  9702 ;; Tracked objects:
  9703 ;;		On entry : 1F/2
  9704 ;;		On exit  : 1F/1
  9705 ;;		Unchanged: FFFE0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;Total ram usage:        0 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    1
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_scan_task
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721  0000                     _get_adc:	
  9722                           ;psect for function _get_adc
  9723                           
  9724  0000                     __end_of_get_adc:	
  9725                           ;scan.c: 97: return ADRESH;
  9726                           
  9727                           ;incstack = 0
  9728                           ; Regs used in _get_adc: [wreg]
  9729                           
  9730                           
  9731                           	psect	text45
  9732  0000                     __ptext45:	
  9733 ;; *************** function _is_adc_ready *****************
  9734 ;; Defined at:
  9735 ;;		line 92 in file "../src/scan.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;		None
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      unsigned char 
  9742 ;; Registers used:
  9743 ;;		wreg
  9744 ;; Tracked objects:
  9745 ;;		On entry : 1C/3
  9746 ;;		On exit  : 1F/1
  9747 ;;		Unchanged: FFFE0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    1
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_scan_task
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763  0000                     _is_adc_ready:	
  9764                           ;psect for function _is_adc_ready
  9765                           
  9766  0000                     __end_of_is_adc_ready:	
  9767                           ;scan.c: 93: return !ADCON0bits.GO_nDONE;
  9768                           
  9769                           ;incstack = 0
  9770                           ; Regs used in _is_adc_ready: [wreg]
  9771                           
  9772                           
  9773                           	psect	text46
  9774  0000                     __ptext46:	
  9775 ;; *************** function _run_adc *****************
  9776 ;; Defined at:
  9777 ;;		line 87 in file "../src/scan.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;		None
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;		None               void
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 1F/2
  9788 ;;		On exit  : 1F/1
  9789 ;;		Unchanged: FFFE0/0
  9790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;Total ram usage:        0 bytes
  9796 ;; Hardware stack levels used:    1
  9797 ;; Hardware stack levels required when called:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_scan_task
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805  0000                     _run_adc:	
  9806                           ;psect for function _run_adc
  9807                           
  9808  0000                     __end_of_run_adc:	
  9809                           ;scan.c: 89: ADCON0bits.GO = 1;
  9810                           
  9811                           ;scan.c: 88: ADCON0bits.CHS = 7;
  9812                           
  9813                           ;incstack = 0
  9814                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9815                           
  9816                           
  9817                           	psect	text47
  9818  0000                     __ptext47:	
  9819 ;; *************** function _is_end_of_scan *****************
  9820 ;; Defined at:
  9821 ;;		line 79 in file "../src/scan.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  res             1    0[COMMON] unsigned char 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      unsigned char 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0
  9830 ;; Tracked objects:
  9831 ;;		On entry : 1C/3
  9832 ;;		On exit  : 1F/2
  9833 ;;		Unchanged: FFFE0/0
  9834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;Total ram usage:        1 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_scan_task
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849  0000                     _is_end_of_scan:	
  9850                           ;psect for function _is_end_of_scan
  9851                           
  9852  0000                     __end_of_is_end_of_scan:	
  9853                           ;scan.c: 84: return res;
  9854                           
  9855                           ;scan.c: 83: if (scan_counter >= N_KEYS) scan_counter = 0;
  9856                           
  9857                           ;scan.c: 81: static uint8_t scan_counter = 0;
  9858                           ;scan.c: 82: bool res = (++scan_counter) >= N_KEYS;
  9859                           
  9860                           ;incstack = 0
  9861                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9862                           
  9863                           
  9864                           	psect	text48
  9865  0000                     __ptext48:	
  9866 ;; *************** function _get_data *****************
  9867 ;; Defined at:
  9868 ;;		line 75 in file "../src/scan.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;		None
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;		None
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  1    wreg      unsigned char 
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0
  9877 ;; Tracked objects:
  9878 ;;		On entry : 1C/3
  9879 ;;		On exit  : 1F/2
  9880 ;;		Unchanged: FFFE0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;Total ram usage:        0 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_scan_task
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896  0000                     _get_data:	
  9897                           ;psect for function _get_data
  9898                           
  9899  0000                     __end_of_get_data:	
  9900                           ;scan.c: 76: return LATCbits.LATC5;
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9904                           
  9905                           
  9906                           	psect	text49
  9907  0000                     __ptext49:	
  9908 ;; *************** function _set_clock_and_data *****************
  9909 ;; Defined at:
  9910 ;;		line 70 in file "../src/scan.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  c               1    wreg     const unsigned char 
  9913 ;;  d               1    0[COMMON] const unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  c               1    2[COMMON] const unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;		None               void
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 1C/3
  9922 ;;		On exit  : 1F/2
  9923 ;;		Unchanged: FFFE0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;Total ram usage:        3 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    1
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_scan_task
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939  0000                     _set_clock_and_data:	
  9940                           ;psect for function _set_clock_and_data
  9941                           
  9942  0000                     __end_of_set_clock_and_data:	
  9943                           ;scan.c: 72: LATCbits.LATC5 = !!d;
  9944                           
  9945                           ;scan.c: 71: LATCbits.LATC4 = !!c;
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9949                           ;set_clock_and_data@c stored from wreg
  9950                           
  9951                           
  9952                           	psect	text50
  9953  0000                     __ptext50:	
  9954 ;; *************** function _waiting_for_timer *****************
  9955 ;; Defined at:
  9956 ;;		line 66 in file "../src/scan.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;		None
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      unsigned char 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2
  9965 ;; Tracked objects:
  9966 ;;		On entry : 1D/3
  9967 ;;		On exit  : 1F/2
  9968 ;;		Unchanged: FFFE0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;Total ram usage:        1 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    1
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_scan_task
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984  0000                     _waiting_for_timer:	
  9985                           ;psect for function _waiting_for_timer
  9986                           
  9987  0000                     __end_of_waiting_for_timer:	
  9988                           ;scan.c: 67: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  9992                           
  9993                           
  9994                           	psect	text51
  9995  0000                     __ptext51:	
  9996 ;; *************** function _set_timer *****************
  9997 ;; Defined at:
  9998 ;;		line 57 in file "../src/scan.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;		None
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;		None
 10003 ;; Return value:  Size  Location     Type
 10004 ;;		None               void
 10005 ;; Registers used:
 10006 ;;		status,2
 10007 ;; Tracked objects:
 10008 ;;		On entry : 1F/3
 10009 ;;		On exit  : 1F/0
 10010 ;;		Unchanged: FFFE0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;Total ram usage:        0 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    1
 10019 ;; This function calls:
 10020 ;;		Nothing
 10021 ;; This function is called by:
 10022 ;;		_scan_task
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026  0000                     _set_timer:	
 10027                           ;psect for function _set_timer
 10028                           
 10029  0000                     __end_of_set_timer:	
 10030                           ;scan.c: 63: TMR0 = 0;
 10031                           
 10032                           ;scan.c: 62: INTCONbits.TMR0IF = 0;
 10033                           
 10034                           ;scan.c: 61: INTCONbits.TMR0IE = 0;
 10035                           
 10036                           ;scan.c: 60: OPTION_REGbits.PSA = 1;
 10037                           
 10038                           ;scan.c: 59: OPTION_REGbits.TMR0CS = 0;
 10039                           
 10040                           ;scan.c: 58: wait_timer = 1;
 10041                           
 10042                           ;incstack = 0
 10043                           ; Regs used in _set_timer: [status,2]
 10044                           
 10045                           
 10046                           	psect	intentry
 10047  0004                     __pintentry:	
 10048 ;; *************** function _SYS_InterruptHigh *****************
 10049 ;; Defined at:
 10050 ;;		line 112 in file "../src/pic16f1459/system.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;		None
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;		None
 10055 ;; Return value:  Size  Location     Type
 10056 ;;		None               void
 10057 ;; Registers used:
 10058 ;;		None
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: FFFFFFFF/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;Total ram usage:        0 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		Interrupt level 1
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077  0004                     _SYS_InterruptHigh:	
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _SYS_InterruptHigh: []
 10081  0004  3180               	pagesel	$
 10082  0005  0009               	retfie
 10083  0006                     __end_of_SYS_InterruptHigh:	
 10084  007E                     btemp	set	126	;btemp
 10085  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    197
    Data        18
    BSS         273
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     14      16
    BANK1            16      0      16
    BANK2            16      0      16
    BANK3            80      1      66
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?_memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK3[18]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 18
		 -> buttonMessage(BANK3[18]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK5[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK4[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S2007_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S2007_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S2007_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S2007_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S972$pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    S962$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S962$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S938$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S938$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S938$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S938$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceCDCBasicDemoTasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceCDCBasicDemoTasks@scan_pitch(BANK0[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _SYSTEM_Initialize->_LED_Enable
    _SYSTEM_Initialize->_BUTTON_Enable
    _APP_DeviceCDCBasicDemoTasks->_getsUSBUSART
    _CDCTxService->_USBTransferOnePacket
    _getsUSBUSART->_USBTransferOnePacket
    _scan_task->_store_key_level
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12441
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0    9730
                                             13 BANK0      1     1      0
                                              0 BANK3      1     1      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0    5966
                                             10 BANK0      3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                              1 COMMON     3     3      0
                _USBCtrlTrfTxService
                   Absolute function
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
                   Absolute function
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0    5530
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0    4294
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1654
                                             10 COMMON     2     2      0
                                              6 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  4     4      0    1472
                                             10 COMMON     4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6     137
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                              3 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              1 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  1     1      0     136
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    1100
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    1100
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    1100
                                              0 BANK0      6     0      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      62
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceCDCBasicDemoInitialize                     0     0      0    1007
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            0     0      0    1007
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     536
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     396
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 COMMON     1     1      0
                         _LED_Enable
                      _BUTTON_Enable
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          4     4      0    2249
                                              0 BANK0      4     4      0
                          _scan_task
                   _BUTTON_IsPressed
                      _putrsUSBUSART
                       _getsUSBUSART
                        _putUSBUSART
                       _CDCTxService
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         4     4      0     709
                                              8 COMMON     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     1      1      44
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         5     4      1     604
                                              8 COMMON     5     4      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) _USBTransferOnePacket                                 8     4      4     471
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        3     3      0     113
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            6     5      1     315
                                              5 COMMON     6     5      1
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      2     1      1      88
                                              3 COMMON     2     1      1
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                        3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   3     2      1      44
                                              0 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _scan_task
       _scan_init
       _set_timer
       _waiting_for_timer
       _set_clock_and_data
         _get_data (ARG)
       _get_data
       _is_end_of_scan
       _run_adc
       _is_adc_ready
       _get_adc
       _store_key_level
         _is_end_of_scan (ARG)
         _get_adc (ARG)
         _process_level (ARG)
     _BUTTON_IsPressed
     _putrsUSBUSART
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _CDCTxService
       _USBTransferOnePacket
   _SYSTEM_Initialize
     _LED_Enable
     _BUTTON_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _USBCheckCDCRequest
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _USBCheckCDCRequest
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _USBCheckCDCRequest
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
           Absolute function(Fake)
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         Absolute function(Fake)

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       A       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10      E      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      0      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      1      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     140      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Feb 09 09:00:02 2016

                               _USB_SD_Ptr 0901                                          pc 0002  
                              __CFG_CP$OFF 0000                                ?_LED_Enable 0070  
                            _USBDeviceInit 02BC                         __size_of_CDCInitEP 0025  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0060       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                      l202 000E                                        l220 0004  
                                      l205 0019                                        l214 0010  
                                      l118 0576                                        l223 0002  
                                      l208 0004                                        l320 0786  
                                      l217 0006                                        l226 0000  
                                      l234 0026                                        l331 07E3  
                                      l148 02BB                __end_of_USBStdGetDscHandler 0B42  
                                      l510 0363                                        l335 07CB  
                                      l328 07D9                                        l600 09FE  
                                      l504 0342                                        l521 03B0  
                                      l338 07D6                                        l506 0346  
                                      l356 0772                                        l197 000A  
                                      l701 044F                                        l710 046B  
                                      l359 077D                                        l640 0C08  
                                      l641 0BDC                                        l642 0BDF  
                                      l722 04CF                                        l723 04D0  
                                      l572 0F37                                        l637 0BD4  
                                      l735 0523                                        l585 0FC5  
                                      l658 0407                                        l684 0EC0  
                                      _BDT 0020                                        l791 0B89  
                                      l687 0EF5                                        l699 044E  
                                      _UIE 0E92                                        _UIR 0E90  
                   _APP_LEDUpdateUSBStatus 0787                                 _USBSuspend 03E7  
                     USBStdSetCfgHandler@i 007D                       USBStdSetCfgHandler@p 007A  
                             __CFG_BORV$LO 0000                                        wreg 0009  
                           _USBDeviceTasks 0335                             _USBDeviceState 00E5  
                            _BUTTON_Enable 077E                                       S5494 0800  
                                     S5496 0B8A                                       S5488 07E4  
                                     S5498 08EA                      ??_USBCtrlTrfRxService 0072  
                           ??_getsUSBUSART 0079                   USBEnableEndpoint@options 0074  
                             __CFG_LVP$OFF 0000                            __end_of_LED_Off 07D7  
                                     l3104 02B0                                       l4300 00AA  
                                     l5100 0ACA                                       l5020 0A03  
               USBConfigureEndpoint@handle 0073                                       l3430 0000  
                                     l4302 00AB                                       l5102 0ADF  
                                     l5030 0A41                                       l5022 0A14  
                                     l5006 09EB                                       l3432 0001  
                                     l4304 00BD                                       l5200 0EA5  
                                     l3426 0000                                       l3434 0006  
                                     l3442 0001                                       l3450 0008  
                                     l4330 0272                                       l5050 0A6E  
                                     l5042 0A67                                       l5106 0AE8  
                                     l5130 0B35                                       l3428 0008  
                                     l3436 000A                                       l3444 0000  
                                     l3452 000E                                       l3460 0005  
                                     l2900 0227                                       l4332 0285  
                                     l4324 0271                                       l4316 0260  
                                     l4404 0660                                       l4308 00C5  
                                     l4236 0577                                       l5116 0B19  
                                     l5108 0AF1                                       l5132 0BD0  
                                     l5036 0A5F                                       l5212 0EBD  
                                     l3438 000C                                       l3462 0000  
                                     l3470 0001                                       l4334 028F  
                                     l4406 0663                                       l4342 05FF  
                                     l4430 07B1                                       l4422 079E  
                                     l4414 078C                                       l5118 0B1C  
                                     l5222 0EDE                                       l3448 0000  
                                     l3472 000E                                       l2920 0238  
                                     l3392 0775                                       l4440 07BE  
                                     l4408 0787                                       l5144 0BEB  
                                     l5232 0EFE                                       l3458 0000  
                                     l3466 0000                                       l3474 0015  
                                     l2906 0228                                       l4362 061E  
                                     l4338 05F3                                       l4274 006E  
                                     l4434 07BA                                       l4426 07A8  
                                     l4442 07C4                                       l4418 0795  
                                     l5090 0AB5                                       l5154 0BFD  
                                     l5330 04FE                                       l5314 04D9  
                                     l5306 04BC                                       l5242 0454  
                                     l5162 040E                                       l5234 0F00  
                                     l5226 0EEB                                       l3476 0016  
                                     l4292 0092                                       l4284 0083  
                                     l4524 0304                                       l4508 02F1  
                                     l5068 0A88                                       l5340 0519  
                                     l5324 04EF                                       l5244 0456  
                                     l4620 0395                                       l4604 0382  
                                     l4460 004D                                       l3478 001C  
                                     l2870 01A4                                       l2862 016C  
                                     l2854 0115                                       l4294 009E  
                                     l4286 0085                                       l4454 07DB  
                                     l4710 0B60                                       l4702 0B54  
                                     l5326 04F6                                       l5254 0462  
                                     l5246 0458                                       l4614 038F  
                                     l2872 01A8                                       l2848 00EB  
                                     l2928 0245                                       l4368 0627  
                                     l4480 02C7                                       l4448 07CE  
                                     l4720 0B72                                       l5352 0541  
                                     l5280 047E                                       l5256 0464  
                                     l5192 09CC                                       l4560 0349  
                                     l2866 019B                                       l2858 013F  
                                     l2882 01EA                                       l4378 0633  
                                     l4386 0641                                       l4714 0B66  
                                     l4802 06CE                                       l5354 0546  
                                     l5290 0490                                       l5258 0465  
                                     l2876 01E3                                       l2884 01F5  
                                     l4388 0645                                       l4396 0653  
                                     l4708 0B5D                                       l4732 0B7F  
                                     l4660 0558                                       l4804 06D0  
                                     l5348 0529                                       l5292 0492  
                                     l5268 0476                                       l5188 09C6  
                                     l4628 03A6                                       l4580 035D  
                                     l4572 0356                                       l4398 0656  
                                     l4726 0B7D                                       l4670 0562  
                                     l4662 0560                                       l4910 0F98  
                                     l5198 09E9                                       l4654 03D4  
                                     l4582 0360                                       l2896 0222  
                                     l4496 02DC                                       l4760 06D2  
                                     l4824 073A                                       l4656 03E0  
                                     l4648 03C7                                       l4592 036C  
                                     l4850 05B7                                       l5490 0564  
                                     l4746 040B                                       l4906 0F86  
                                     l5492 0571                                       l4668 0561  
                                     l4836 0765                                       l4846 05B1  
                                     l4774 06ED                                       l4926 0FC1  
                                     l4838 0767                                       l4598 0371  
                                     l4864 05E4                                       l4688 0B42  
                                     l4874 0678                                       l4938 0FD6  
                                     l4946 0FE7                                       l4948 0FEB  
                                     l4956 0FFC                                       l4980 0F43  
                                     l4972 0F17                                       l4894 06A4  
                                     l4958 0F03                                       l4968 0F13  
                                     l4988 0F4C                                       u4055 0F8F  
                                     u4195 09FA                      ??_USBCtrlTrfTxService 0070  
                                     _UCFG 0E91                                       _UEP0 0E98  
                                     _UEP1 0E99                                       _UEIE 0E97  
                                     _UEIR 0E93                                       _UCON 0E8E  
                                     _TMR0 0015                               __CFG_WRT$OFF 0000  
                          _CDCDataInHandle 0162     USBStdFeatureReqHandler@current_ep_data 0068  
                                     _pDst 016B                                       _main 0048  
                                     fsr0h 0005                                       fsr1h 0007  
                                     fsr0l 0004                                       indf0 0000  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                                     start 0006                              __CFG_IESO$OFF 0000  
                     process_level@idx_key 0072                 __end_of_USBCheckStdRequest 047E  
                   ??_USBCtrlTrfOutHandler 0076                        USBDeviceInit@i_1507 0074  
                ??_USBStdFeatureReqHandler 007A                     __size_of_putrsUSBUSART 0022  
                 ??_USBStdGetStatusHandler 0070                             ?_USBDeviceInit 0070  
                              _writeBuffer 02A0                                      ?_main 0070  
                            __CFG_WDTE$OFF 0000          __size_of_USBCtrlEPServiceComplete 0064  
                   __end_of_USBDeviceTasks 03E7                  ?_USBCtrlEPServiceComplete 0070  
                                    _UADDR 0E96                                      _USTAT 0E8F  
       __size_of_USBCtrlEPAllowStatusStage 004D                             __CFG_FCMEN$OFF 0000  
                           ?_BUTTON_Enable 0070                            __end_of_get_adc 0000  
          __end_of_USBCtrlEPAllowDataStage 0FAE                                      _sd000 09C2  
                                    _sd001 0948                                      _sd002 097C  
           ?_USBIncrement1msInternalTimers 0070                              ?_is_adc_ready 0070  
                          _store_key_level 0000                __size_of_set_clock_and_data 0000  
                __size_of_BUTTON_IsPressed 0011                            ??_process_level 0072  
                      __size_of_LED_Enable 000E                          __end_of_CDCInitEP 05AB  
                          __end_of_run_adc 0000                                      status 0003  
                                    wtemp0 007E                            putUSBUSART@data 0071  
             __size_of_USBStdSetCfgHandler 005F                             __CFG_MCLRE$OFF 0000  
                          __initialization 0008                 is_end_of_scan@scan_counter 016E  
                             __end_of_main 005A                             __CFG_LPBOR$OFF 0000  
                            scan_task@note 007A                  __size_of_USBCtrlEPService 0051  
                                   ??_main 007E                            ?_USBDeviceTasks 0070  
                              ?_USBSuspend 0070                                  ??_LED_Off 0070  
                      __CFG_USBLSCLK$48MHz 0000                             ??_is_adc_ready 0070  
                             _cdc_mem_type 01BB                              _putrsUSBUSART 0231  
                         _CDCDataOutHandle 00E3                          _getsUSBUSART$2358 007B  
                                   _ACTCON 039B                                     _ADRESH 009C  
                                   _ANSELA 018C                            getsUSBUSART@len 0078  
                   SYSTEM_Initialize@state 0071                      __size_of_CDCTxService 007C  
                                   _LED_On 07D7                        set_clock_and_data@c 0072  
                      set_clock_and_data@d 0070                                     _OSCCON 0099  
                            CDCTxService@i 007A                             __CFG_PWRTE$OFF 0000  
                        _shortPacketStatus 016C                           __end_of_get_data 0000  
                          USBDeviceTasks@i 01E1                USBStdFeatureReqHandler@pUEP 0066  
                 USBTransferOnePacket@data 0071                 USBCtrlTrfInHandler@lastDTS 0073  
                          ??_USBDeviceInit 0070                               ?_putUSBUSART 0070  
                           __CFG_STVREN$ON 0000                       __end_of_getsUSBUSART 0291  
                        _USBEnableEndpoint 05AB            __size_of_USBStdGetStatusHandler 0042  
                                   _memset 0AC6                         ?_USBEnableEndpoint 0074  
                                ??_get_adc 0070                    __end_of_store_key_level 0000  
            __size_of_USBTransferOnePacket 003E                            ??_BUTTON_Enable 0070  
                             _CDCTxService 05F3                             ?_putrsUSBUSART 0070  
                      ??_USBEnableEndpoint 0075                                  ??_run_adc 0070  
                              _CtrlTrfData 0058                    __size_of_is_end_of_scan 0000  
             ?_APP_DeviceCDCBasicDemoTasks 0070                       _controlTransferState 00E8  
                        _SYSTEM_Initialize 02A5                    __end_of__initialization 0046  
                       ?_SYSTEM_Initialize 0070                   __size_of_USBStallHandler 001D  
                      __size_of_USBSuspend 0010                             __pcstackCOMMON 0070  
                __end_of_USBEnableEndpoint 05CA                              __end_of_sd000 09C6  
                            __end_of_sd001 097C                              __end_of_sd002 09B0  
                             __pidataBANK3 0C12                        ??_SYSTEM_Initialize 0071  
                                LED_On@led 0070           __size_of_USBCtrlEPAllowDataStage 0047  
                               _adc_levels 0320                     process_level@old_level 0070  
                   process_level@new_level 0071                               ??_LED_Enable 0070  
            __size_of_USBConfigureEndpoint 0029                __end_of_USBCtrlTrfInHandler 0F03  
                  ?_APP_LEDUpdateUSBStatus 0070                     store_key_level@idx_key 00E9  
                           _OPTION_REGbits 0095                          _CDCTxService$2406 0078  
                           scan_task@state 01BD                                 _cdc_rx_len 00E6  
                               _cdc_tx_len 0169                 store_key_level@end_of_scan 0073  
                            _buttonMessage 01CF                   ??_USBCtrlTrfSetupHandler 007E  
                  _USBTicksSinceSuspendEnd 01BA                  __end_of_SYSTEM_Initialize 02BC  
                         _BUTTON_IsPressed 0220                     _USBStdGetStatusHandler 0BD0  
                            _buttonPressed 0168                                 __pbssBANK0 006E  
                               __pbssBANK1 00E0                                 __pbssBANK2 0160  
                               __pbssBANK3 01A0                                 __pbssBANK4 0220  
                               __pbssBANK5 02A0                                 __pbssBANK6 0320  
                                  ?_LED_On 0070              ??_APP_DeviceCDCBasicDemoTasks 007D  
 __end_of_APP_DeviceCDCBasicDemoInitialize 0586  __size_of_APP_DeviceCDCBasicDemoInitialize 000F  
       ??_APP_DeviceCDCBasicDemoInitialize 007A          ?_APP_DeviceCDCBasicDemoInitialize 0070  
         _APP_DeviceCDCBasicDemoInitialize 0577                         __end_of_LED_Enable 077E  
                     store_key_level@level 0074                __size_of_USBWakeFromSuspend 0017  
                              _pBDTEntryIn 00E0           __end_of_USBCtrlEPServiceComplete 0F67  
              __size_of_USBCheckCDCRequest 0048                         __size_of_scan_init 001C  
                               __pmaintext 0048                         __size_of_scan_task 013E  
                     USBCtrlTrfRxService@i 0074                       __end_of_is_adc_ready 0000  
                            LED_Enable@led 0070                            __CFG_PLLMULT$3x 0000  
           __end_of_APP_LEDUpdateUSBStatus 07C9                                 __pintentry 0004  
             APP_DeviceCDCBasicDemoTasks@i 0063                                    ?_memset 0070  
                               _device_dsc 09B0                           _USBCtrlEPService 071F  
                               _ep_data_in 01A6                         __size_of_set_timer 0000  
              __end_of_USBCtrlTrfRxService 0A67                         _USBCheckStdRequest 043E  
                         ?_store_key_level 0073                          _configDescriptor1 0905  
                          ??_putrsUSBUSART 0070                          scan_task@velocity 0075  
                                  _LED_Off 07C9                __end_of_USBCtrlTrfTxService 1000  
                      _USBStdSetCfgHandler 0A67                                  ?_get_data 0070  
                      ?_USBCheckStdRequest 0070               __size_of_USBStdGetDscHandler 0063  
                                  _UIEbits 0E92                                 __stringtab 0900  
                                  _UIRbits 0E90                            __size_of_LED_On 000D  
                            _cdc_trf_state 00E7                          is_end_of_scan@res 0070  
           APP_LEDUpdateUSBStatus@ledCount 0160                                    _pCDCDst 01B3  
                                  _pCDCSrc 01B5                      __size_of_getsUSBUSART 003E  
          ??_USBIncrement1msInternalTimers 0070                       ?_USBStdSetCfgHandler 0070  
                                _CDCInitEP 0586                 __size_of_USBEnableEndpoint 001F  
                               _readBuffer 0220                       ??_USBCheckStdRequest 007E  
            __size_of_USBCtrlTrfOutHandler 0025                           ??_USBDeviceTasks 006D  
                        ??_USBStallHandler 0070       __size_of_APP_DeviceCDCBasicDemoTasks 006C  
                     __size_of_putUSBUSART 0014                         getsUSBUSART@buffer 007A  
                          __size_of_memset 0019                  __end_of_configDescriptor1 0948  
                                  __ptext1 0335                                    __ptext2 071F  
                                  __ptext3 0EA5                                    __ptext4 09C6  
                                  __ptext5 09EB                                    __ptext6 040E  
                                  __ptext7 043E                                    __ptext8 047E  
                                  __ptext9 0BD0                                    _inPipes 00EA  
                                  _get_adc 0000                _USBDeferOUTDataStagePackets 0164  
                             ??_USBSuspend 007A                              _scan_task$737 0076  
                            _scan_task$738 0078                 __end_of_set_clock_and_data 0000  
                        __end_of_scan_init 0220                          __end_of_scan_task 0204  
                                  _run_adc 0000                         __end_of_USB_CD_Ptr 0905  
                               ??_get_data 0070                 __size_of_SYSTEM_Initialize 0017  
          __size_of_USBCtrlTrfSetupHandler 0030                                    clrloop0 0C25  
                           _is_end_of_scan 0000                       end_of_initialization 0046  
                             _getsUSBUSART 0253                         __end_of_USB_SD_Ptr 0904  
                      _pBDTEntryEP0OutNext 006F                                    init_ram 0C2A  
                                  memset@c 0072                                    memset@n 0074  
                                  memset@p 0077                      __end_of_process_level 0000  
                                  initloop 0C2B            _dummy_encapsulated_cmd_response 01BE  
                 ?_USBStdFeatureReqHandler 0070                          __end_of_set_timer 0000  
                    ??_USBStdSetCfgHandler 007A                                 ?_CDCInitEP 0070  
                               _note_event 01B1                         __end_of_USBSuspend 03F7  
                  _USBCtrlEPAllowDataStage 0F67                   _USBCtrlEPServiceComplete 0F03  
                               _wait_timer 016D                 _USBStatusStageEnabledFlag1 0165  
               _USBStatusStageEnabledFlag2 0166                         USBEnableEndpoint@p 0077  
                                _PORTAbits 000C                           __CFG_FOSC$INTOSC 0000  
                                _TRISAbits 008C                                  _TRISCbits 008E  
                   __end_of_is_end_of_scan 0000                         _BothEP0OutUOWNsSet 01B7  
                USBStdSetCfgHandler@i_1837 007C                  USBConfigureEndpoint@EPNum 0072  
               ?_USBCtrlEPAllowStatusStage 0070        USER_USB_CALLBACK_EVENT_HANDLER@size 0064  
  APP_DeviceCDCBasicDemoTasks@numBytesRead 0062                                  _USTATcopy 00EF  
             __end_of_USBTransferOnePacket 06AD                             __end_of_LED_On 07E4  
                    __size_of_is_adc_ready 0000                          putUSBUSART@length 0070  
                       __CFG_PLLEN$ENABLED 0000                     _USBCtrlTrfSetupHandler 040E  
                 __end_of_BUTTON_IsPressed 0231        APP_DeviceCDCBasicDemoTasks@velocity 0061  
                    __end_of_USBDeviceInit 0335      __end_of_USBIncrement1msInternalTimers 06B5  
   __size_of_USBIncrement1msInternalTimers 0008              _USBIncrement1msInternalTimers 06AD  
                               LED_Off@led 0070                         putrsUSBUSART@pData 0070  
                           __end_of_memset 0ADF                          _USBBusIsSuspended 01B9  
                      start_initialization 0008                    ?_USBStdGetStatusHandler 0070  
                    __end_of_BUTTON_Enable 0787              USBCtrlTrfRxService@byteToRead 0075  
                          ?_is_end_of_scan 0070                             _is_initialized 01BC  
                             _is_adc_ready 0000                                _cdc_data_rx 0120  
                              _cdc_data_tx 00A0               __end_of_USBConfigureEndpoint 05F3  
          __end_of_USBStdFeatureReqHandler 0558                                   ??_LED_On 0070  
        __end_of_USBCtrlEPAllowStatusStage 071F                   __end_of_USBCtrlEPService 0770  
                ??_USBCtrlEPAllowDataStage 0071                                ??_CDCInitEP 007A  
                           USBDeviceInit@i 0075                             USBDeviceInit@p 0072  
                   _pBDTEntryEP0OutCurrent 006E                    USBTransferOnePacket@dir 0070  
                  USBTransferOnePacket@len 0073                        _USBStdGetDscHandler 0ADF  
                              __pdataBANK3 01CF                                   ??_memset 0076  
                   BUTTON_IsPressed@button 0070                     _USBActiveConfiguration 016F  
           __end_of_USBStdGetStatusHandler 0C12                      _waiting_for_timer$704 0070  
                                 ?_LED_Off 0070                              __pcstackBANK0 0060  
                            __pcstackBANK3 01E1               __size_of_USBCtrlTrfInHandler 005E  
                     ?_USBStdGetDscHandler 0070                          __size_of_get_data 0000  
               __end_of_USBWakeFromSuspend 040E                            _USBStallHandler 06B5  
                             _pBDTEntryOut 01AC                 __end_of_USBCheckCDCRequest 0B8A  
                                __pstrings 0900                                  __pswtext1 07E4  
                                __pswtext2 0800                                  __pswtext3 0B8A  
                                __pswtext4 08EA                                   ?_get_adc 0070  
                     _USBTransferOnePacket 066F                      __end_of_putrsUSBUSART 0253  
             __end_of_USBCtrlTrfOutHandler 09EB                      ??_USBStdGetDscHandler 0070  
    APP_DeviceCDCBasicDemoTasks@scan_pitch 0060                                _ep_data_out 01A9  
                                 ?_run_adc 0070        __end_of_APP_DeviceCDCBasicDemoTasks 00C6  
              _APP_DeviceCDCBasicDemoTasks 005A               __size_of_USBCtrlTrfRxService 007C  
            USBConfigureEndpoint@direction 0070                   __size_of_store_key_level 0000  
                                _scan_init 0204                                  _scan_task 00C6  
             __size_of_USBCtrlTrfTxService 0052                                   _LATCbits 010E  
               ??_USBCtrlEPServiceComplete 0073                                  clear_ram0 0C24  
                       _set_clock_and_data 0000                                   _PIE1bits 0091  
                                 _PIE2bits 0092                          _waiting_for_timer 0000  
                                 _PIR2bits 0012                  USBCtrlEPService@setup_cnt 006C  
                       ?_waiting_for_timer 0070                                  _set_timer 0000  
                            ??_putUSBUSART 0071                                   _UEP0bits 0E98  
               _USBDeferINDataStagePackets 0163                __size_of_USBCheckStdRequest 0040  
                      ?_set_clock_and_data 0070                                   _UCONbits 0E8E  
                     _USBConfigureEndpoint 05CA           __size_of_USBStdFeatureReqHandler 00DA  
                      ??_waiting_for_timer 0070                                 _ADCON0bits 009D  
                               _ADCON1bits 009E                                 _ADCON2bits 009F  
                    ?_USBTransferOnePacket 0070                          _SYS_InterruptHigh 0004  
                            ?_CDCTxService 0070                               _RemoteWakeup 01B8  
                         __size_of_LED_Off 000E                         ?_SYS_InterruptHigh 0070  
                  __end_of_USBStallHandler 06D2                       ??_set_clock_and_data 0071  
                        putrsUSBUSART@data 0071                ??_USBCtrlEPAllowStatusStage 0070  
              __end_of_USBStdSetCfgHandler 0AC6                                 ?_scan_init 0070  
                               ?_scan_task 0075                        ??_SYS_InterruptHigh 0070  
                __end_of_waiting_for_timer 0000                         __end_of_device_dsc 09C2  
                 ??_APP_LEDUpdateUSBStatus 0071                    ?_USBCtrlTrfSetupHandler 0070  
                  USBStdGetStatusHandler@p 0070                     USBTransferOnePacket@ep 0076  
                               ?_set_timer 0070                                   _SetupPkt 0050  
                    ?_USBConfigureEndpoint 0070                          ?_BUTTON_IsPressed 0070  
                __end_of_SYS_InterruptHigh 0006                         __end_of__stringtab 0901  
                       ??_BUTTON_IsPressed 0070                           ??_is_end_of_scan 0070  
                               _ANSELAbits 018C                        __end_of_putUSBUSART 02A5  
                              _line_coding 01C6                                 _ANSELCbits 018E  
                           ??_CDCTxService 0078                           __size_of_get_adc 0000  
                   __size_of_process_level 0000                    __size_of_USBDeviceTasks 00B2  
                                 __ptext10 0ADF                                   __ptext11 0A67  
                                 __ptext20 03F7                                   __ptext12 0AC6  
                                 __ptext21 0558                                   __ptext13 0F03  
                                 __ptext30 02BC                                   __ptext22 0B42  
                                 __ptext14 0F67                                   __ptext31 02A5  
                                 __ptext23 0787                                   __ptext15 0FAE  
                                 __ptext40 0220                                   __ptext32 077E  
                                 __ptext24 07D7                                   __ptext16 06D2  
                                 __ptext41 00C6                                   __ptext33 0770  
                                 __ptext25 07C9                                   __ptext17 06B5  
                                 __ptext50 0000                                   __ptext42 0000  
                                 __ptext34 005A                                   __ptext26 0577  
                                 __ptext18 06AD                                   __ptext51 0000  
                                 __ptext43 0000                                   __ptext35 05F3  
                                 __ptext27 0586                                   __ptext19 03E7  
                                 __ptext52 0204                                   __ptext44 0000  
                                 __ptext36 0291                                   __ptext28 05AB  
                                 __ptext45 0000                                   __ptext37 0253  
                                 __ptext29 05CA                                   __ptext46 0000  
                                 __ptext38 066F                                   __ptext47 0000  
                                 __ptext39 0231                                   __ptext48 0000  
                                 __ptext49 0000                                   _get_data 0000  
                         __size_of_run_adc 0000                                   _midiData 01AF  
           __end_of_USBCtrlTrfSetupHandler 043E                              __size_of_main 0012  
                        ?_USBCtrlEPService 0070                         ??_USBCtrlEPService 006A  
                        ??_store_key_level 0074                        _USBCtrlTrfInHandler 0EA5  
                      BUTTON_Enable@button 0070                                   _outPipes 01A0  
                     _USBCtrlTrfOutHandler 09C6                  _USBCtrlEPAllowStatusStage 06D2  
                               _LED_Enable 0770                     ??_USBTransferOnePacket 0074  
                         putrsUSBUSART@len 0072                  _USBDeferStatusStagePacket 00E4  
                 CDCTxService@byte_to_send 007B                                 _INTCONbits 000B  
                     ?_USBCtrlTrfInHandler 0070              USBCtrlTrfTxService@byteToSend 0070  
                                 memset@p1 0070                           ?_USBStallHandler 0070  
                 USBStdFeatureReqHandler@p 0069                                   intlevel1 0000  
                              ??_scan_init 0070                                ??_scan_task 0076  
                   __size_of_USBDeviceInit 0079    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0577  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 001F           ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 007A            _USER_USB_CALLBACK_EVENT_HANDLER 0558  
               __size_of_waiting_for_timer 0000                          __CFG_CLKOUTEN$OFF 0000  
                            _process_level 0000            __size_of_APP_LEDUpdateUSBStatus 0042  
                              ??_set_timer 0070                     ??_USBConfigureEndpoint 0071  
                    ?_USBCtrlTrfOutHandler 0070                     __size_of_BUTTON_Enable 0009  
                              _putUSBUSART 0291                       __CFG_CPUDIV$NOCLKDIV 0000  
                      _USBCtrlTrfRxService 09EB                         _USBWakeFromSuspend 03F7  
                  _USBStdFeatureReqHandler 047E                         _USBCheckCDCRequest 0B42  
                      _USBCtrlTrfTxService 0FAE                 __size_of_SYS_InterruptHigh 0002  
                      ?_USBWakeFromSuspend 0070                      ??_USBCtrlTrfInHandler 0071  
                    _USBAlternateInterface 01CD                        ?_USBCheckCDCRequest 0070  
                      USBEnableEndpoint@ep 0079                            _endpoint_number 016A  
                     ?_USBCtrlTrfRxService 0070                              ?_getsUSBUSART 0078  
                 ?_USBCtrlEPAllowDataStage 0070                       ?_USBCtrlTrfTxService 0070  
                           ?_process_level 0070               _USBStatusStageTimeoutCounter 0167  
                     ??_USBWakeFromSuspend 007A                 USBTransferOnePacket@handle 0077  
                     __end_of_CDCTxService 066F                       ??_USBCheckCDCRequest 0070  
                               _USB_CD_Ptr 0904  
